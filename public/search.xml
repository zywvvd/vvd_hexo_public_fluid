<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>修改 VS code 中 flake8 单行最长字符数量限制</title>
    <url>/2020/08/11/software/ide/flake8-max-size/flake8-max-size/</url>
    <content><![CDATA[<blockquote>
<p>VS code 带有强大的插件功能，其中有一个叫做flake8的插件可以规范代码，帮助养成良好的编码习惯，但是该规范规定单行最长字符个数76完全不够用，网上的方案统统不灵，为了不被逼疯，记录如下解决方案。</p>
</blockquote>
<a id="more"></a>

<h3 id="添加配置"><a href="#添加配置" class="headerlink" title="添加配置"></a>添加配置</h3><blockquote>
<p>网上流行的方案是在VS code配置页中加入flake8的配置信息：</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;python.linting.flake8Args&quot;: [&quot;--max-line-length&#x3D;248&quot;]&#96;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>在我的环境里是不灵的。</p>
</blockquote>
<h3 id="修改源码"><a href="#修改源码" class="headerlink" title="修改源码"></a>修改源码</h3><p><strong>找到<code>flake8</code>python包的位置，打开 <code>Annoconda\Lib\site-packages\flake8</code>文件夹中的文件：<code>defaults.py</code>，修改：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">MAX_LINE_LENGTH &#x3D; 248</span><br></pre></td></tr></table></figure>

<blockquote>
<p>重启VS code 即可</p>
</blockquote>
]]></content>
      <categories>
        <category>IDE</category>
        <category>VS code</category>
      </categories>
      <tags>
        <tag>IDE</tag>
        <tag>VS code</tag>
      </tags>
  </entry>
  <entry>
    <title>mount 命令(三) —— Linux 挂载 Windows 共享目录</title>
    <url>/2020/08/09/linux/mount/mount-win-disk/mount-win-disk/</url>
    <content><![CDATA[<blockquote>
<p>在工程中遇到了Linux系统需要挂载Windows目录的需求，本文记录实现方法。</p>
</blockquote>
<a id="more"></a>

<h2 id="Windows-系统设置"><a href="#Windows-系统设置" class="headerlink" title="Windows 系统设置"></a>Windows 系统设置</h2><h3 id="打开SMB服务"><a href="#打开SMB服务" class="headerlink" title="打开SMB服务"></a>打开SMB服务</h3><blockquote>
<p>打开 <strong>控制面板</strong> -&gt; <strong>程序和功能 -</strong>&gt; <strong>启动SMB 1.0/CIFS文件共享支持</strong> -&gt; <strong>重启计算机</strong></p>
</blockquote>
<p><img src="https://photos.zywvvd.com/images_matrixtime/20200730104725.png" alt=""></p>
<h3 id="设置共享文件夹"><a href="#设置共享文件夹" class="headerlink" title="设置共享文件夹"></a>设置共享文件夹</h3><blockquote>
<p><strong>需要共享的文件夹</strong> -&gt; <strong>右键 属性</strong> -&gt; <strong>共享</strong> -&gt; <strong>共享设置</strong> -&gt;<strong>添加Everyone用户</strong> -&gt; <strong>设置需要为该用户开放的权限</strong></p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image_canglan/20200810000517.png" alt=""></p>
<blockquote>
<p>配置完共享设置后可以在<code>网络</code>中看到自己共享的目录:</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image_canglan/20200810001648.png" alt=""></p>
<blockquote>
<p>此时在你的windows系统中，该目录网络路径为 <code>\\计算机名\路径名</code>，其他网络中的用户也可以使用该地址访问你共享的内容:</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image_canglan/20200810001842.png" alt=""></p>
<h3 id="设置共享是否需要密码"><a href="#设置共享是否需要密码" class="headerlink" title="设置共享是否需要密码"></a>设置共享是否需要密码</h3><blockquote>
<p>打开 <strong>控制面板</strong> -&gt; <strong>网络和共享中心 -</strong>&gt; <strong>高级共享设置</strong> -&gt; <strong>所有网络</strong> -&gt; <strong>配置密码保护的共享</strong> 即可</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image_canglan/20200810001014.png" alt=""></p>
<h3 id="防火墙设置"><a href="#防火墙设置" class="headerlink" title="防火墙设置"></a>防火墙设置</h3><blockquote>
<p>在可以为可用性牺牲安全性的场景中可以关闭防火墙</p>
</blockquote>
<h2 id="Linux-设置"><a href="#Linux-设置" class="headerlink" title="Linux 设置"></a>Linux 设置</h2><h3 id="安装相关包"><a href="#安装相关包" class="headerlink" title="安装相关包"></a>安装相关包</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install nfs-common</span><br><span class="line">sudo apt-get install smbfs</span><br><span class="line">sudo apt-get install cifs-utils</span><br></pre></td></tr></table></figure>

<h3 id="执行-mount-命令"><a href="#执行-mount-命令" class="headerlink" title="执行 mount 命令"></a>执行 mount 命令</h3><blockquote>
<p>mount 前需要手动建立文件夹，命令不会自动创建</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo mount -t cifs -o username=Everyone //10.0.2.19/temp win_disk/</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>注：在Windows的<code>\\计算机名\路径名</code>地址在Linux挂载中不好用，需要将计算机名换为Windows计算机的IP地址。</p>
</blockquote>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Python - 解决 conda activate 报错的问题</title>
    <url>/2020/07/27/python/conda-activate-error/conda_activate_error/</url>
    <content><![CDATA[<blockquote>
<p>有时<code>conda</code>环境路径配置出问题会使<code>conda activate</code>命令失效，只能使用<code>source</code>执行环境激活相关操作，本文记录解决方案。</p>
</blockquote>
<a id="more"></a>

<h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><blockquote>
<p>此时可以使用<code>conda init</code>命令进行复位修复：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda init</span><br><span class="line">source ~/anaconda3/etc/profile.d/conda.sh  # 此处使用自己的 anaconda 安装目录</span><br></pre></td></tr></table></figure>

<blockquote>
<p>此时会在 ~/.bashrc 文件中加入</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># &gt;&gt;&gt; conda initialize &gt;&gt;&gt;</span></span><br><span class="line"><span class="comment"># !! Contents within this block are managed by 'conda init' !!</span></span><br><span class="line">__conda_setup=<span class="string">"<span class="variable">$('/workspace/nfs/anaconda3/bin/conda' 'shell.bash' 'hook' 2&gt; /dev/null)</span>"</span></span><br><span class="line"><span class="keyword">if</span> [ $? -eq 0 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">eval</span> <span class="string">"<span class="variable">$__conda_setup</span>"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="keyword">if</span> [ -f <span class="string">"/workspace/nfs/anaconda3/etc/profile.d/conda.sh"</span> ]; <span class="keyword">then</span></span><br><span class="line">        . <span class="string">"/workspace/nfs/anaconda3/etc/profile.d/conda.sh"</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">export</span> PATH=<span class="string">"/workspace/nfs/anaconda3/bin:<span class="variable">$PATH</span>"</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>然后<code>conda activate</code>等相关命令就能用了。</p>
</blockquote>
]]></content>
      <categories>
        <category>Python</category>
        <category>故障排除</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>故障排除</tag>
      </tags>
  </entry>
  <entry>
    <title>mount 命令(二) —— mount 命令介绍</title>
    <url>/2020/07/25/linux/mount/mount-disk/mount-disk/</url>
    <content><![CDATA[<blockquote>
<p>磁盘挂载可以有效解决数据同步与磁盘空间浪费的问题，而且支持不同操作系统之间挂载操作，核心命令为<code>mount</code>，本文介绍该命令。    </p>
</blockquote>
<a id="more"></a>

<h3 id="挂载"><a href="#挂载" class="headerlink" title="挂载"></a>挂载</h3><blockquote>
<p>挂载常用的命令为<code>mount</code>，其命令格式为：</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mount [args] device dir</span><br></pre></td></tr></table></figure>

<blockquote>
<p>args表示配置参数，其中最常用的为 <code>-t</code>和<code>-o</code>参数：</p>
</blockquote>
<p><strong>-t</strong> </p>
<p>指定文件系统的类型，通常不必指定，mount 会自动选择正确的类型，常用类型有:</p>
<p><code>iso9660</code>: 光盘或光盘镜像<br><code>msdos</code>: DOS fat16文件系统<br><code>vfat</code>: Windows 9x fat32文件系统<br><code>ntfs</code>: Windows NT ntfs文件系统<br><code>smbfs</code>: Mount Windows文件网络共享<br><code>nfs</code>: UNIX(LINUX) 文件网络共享<br><code>ext2</code>: linux目前常用的文件系统<br><code>auto</code>: 自动检测文件系统<br><code>cifs</code>: 通用Internet文件系统，广泛用于Windows系统文件交互</p>
<p><strong>-o</strong> </p>
<p>主要用来描述设备或档案的挂接方式，常用的参数有:</p>
<p><code>defaults:</code> 使用所有选项的默认值（<code>auto</code>、<code>nouser</code>、<code>rw</code>、<code>suid</code>）<br><code>auto/noauto</code>: 允许/不允许以 –a选项进行安装<br><code>dev/nodev</code>: 对/不对文件系统上的特殊设备进行解释<br><code>exec/noexec:</code> 允许/不允许执行二进制代码<br><code>suid/nosuid</code>: 确认/不确认suid和sgid位<br><code>user /nouser:</code> 允许/不允许一般用户挂载<br><code>codepage=XXX</code>: 代码页<br><code>remount</code>: 重新安装已经安装了的文件系统<br><code>loop</code>: 用来把一个文件当成硬盘分区挂接上系统<br><code>ro</code>: 采用只读方式挂接设备<br><code>rw</code>: 采用读写方式挂接设备<br><code>iocharset</code>: 指定访问文件系统所用字符集</p>
<blockquote>
<p>此外<code>mount</code>命令还有其他可选参数：</p>
</blockquote>
<p><strong>-a</strong> </p>
<p>安装在/etc/fstab文件中类出的所有文件系统。</p>
<p><strong>-f</strong> </p>
<p>伪装mount，作出检查设备和目录的样子，但并不真正挂载文件系统。</p>
<p><strong>-n</strong> </p>
<p>不把安装记录在/etc/mtab 文件中。</p>
<p><strong>-r</strong> </p>
<p>讲文件系统安装为只读。</p>
<p><strong>-v</strong> </p>
<p>详细显示安装信息。</p>
<p><strong>-w</strong> </p>
<p>将文件系统安装为可写，为命令默认情况。</p>
<blockquote>
<ul>
<li>需要注意的是，挂载点必须是一个已经存在的目录，这个目录可以不为空，但挂载后这个目录下以前的内容将不可用，umount以后会恢复正常。使用多个-o参数的时候，-o 只用一次，参数之间用半角逗号隔开。</li>
<li>经常需要root权限才能执行该命令</li>
</ul>
</blockquote>
<blockquote>
<p>其余的参数为需要挂载的设备和挂载点</p>
</blockquote>
<p><strong>device</strong> </p>
<p>要挂接(mount)的设备。</p>
<p><strong>dir</strong></p>
<p>设备在系统上的挂接点(mount point)。</p>
<h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><blockquote>
<p>假设我们需要将一个镜像文件(*.iso)挂载到某个目录，需要执行以下操作：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">mkdir mnt </span></span><br><span class="line"><span class="meta">$</span><span class="bash">mount -o loop -t iso9660 my.iso ~/mnt</span></span><br></pre></td></tr></table></figure>

<h3 id="查看挂载情况"><a href="#查看挂载情况" class="headerlink" title="查看挂载情况"></a>查看挂载情况</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">df -h</span></span><br></pre></td></tr></table></figure>

<h3 id="查看某主机提供的nfs服务"><a href="#查看某主机提供的nfs服务" class="headerlink" title="查看某主机提供的nfs服务"></a>查看某主机提供的nfs服务</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">showmount  -e 192.168.1.1(ip)</span></span><br></pre></td></tr></table></figure>

<p>或</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">nc  -v -w 2  192.168.1.2 -z 2049</span></span><br></pre></td></tr></table></figure>

<h3 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h3><blockquote>
<p>卸载使用<code>umount</code>命令</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">umount dir</span></span><br><span class="line"><span class="meta">$</span><span class="bash">umount device</span></span><br><span class="line"><span class="meta">$</span><span class="bash">umount device dir</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>以上三个命令都可以。</p>
</blockquote>
<h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ul>
<li><p>在挂载点<code>mnt</code>路径下卸载会失败，提示<code>Dev is busy</code></p>
<ul>
<li><p>解决方案：</p>
<p>退出挂载点进行卸载操作</p>
</li>
</ul>
</li>
<li><p>其他程序访问挂载文件也会提示卸载失败</p>
<ul>
<li><p>解决方案：</p>
<ol>
<li><p><code>lsof mnt</code>  查看是哪个进程占用了 <code>mnt</code></p>
</li>
<li><p><code>kill -9 $pid</code>  </p>
</li>
<li><p>重试卸载</p>
</li>
</ol>
</li>
</ul>
</li>
<li><p>有没有‘咔嚓’卸载掉的方法</p>
<ul>
<li><p>解决方案：</p>
<p><code>umount -l mnt</code></p>
<p>其中 <code>-l</code> 的作用是卸载前检查占用该挂载文件的程序并迅速kill掉，以达到快速卸载的目的</p>
</li>
</ul>
</li>
<li><p>Win 中如何挂载</p>
<ul>
<li><p>解决方案：</p>
<p>可以在<code>资源管理器-主页-轻松访问-映射为驱动器</code>中挂载</p>
<p>地址格式： <code>\\192.168.1.2\disk\balabala</code></p>
<p>也可以在cmd中使用<code>mount</code>命令</p>
<p><code>mount \\192.168.1.2\disk\balabala V:\</code></p>
</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>vim 学习笔记（二）—— 基本导航命令</title>
    <url>/2020/07/22/words/vim/vim-nootbook-2/</url>
    <content><![CDATA[<blockquote>
<p>课程链接：<a href="https://www.bilibili.com/video/BV1Cb411u7L9?p=7" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1Cb411u7L9?p=7</a></p>
<p>本节课介绍基本的文本导航命令。</p>
</blockquote>
<a id="more"></a>

<h3 id="导航命令"><a href="#导航命令" class="headerlink" title="导航命令"></a>导航命令</h3><blockquote>
<p>命令模式下：</p>
</blockquote>
<h4 id="移动光标"><a href="#移动光标" class="headerlink" title="移动光标"></a>移动光标</h4><ul>
<li><code>j</code>: 下移一行</li>
<li><code>k</code>: 上移一行</li>
<li><code>l</code>: 右移一列</li>
<li><code>h</code>: 左移一列</li>
</ul>
<p><img src="https://photos.zywvvd.com/image_canglan/20200722223706.png" alt=""></p>
<ul>
<li><code>Ctrl+f</code>: 下翻页</li>
<li><code>Ctrl+f</code>: 上翻页</li>
</ul>
<h4 id="单词切换"><a href="#单词切换" class="headerlink" title="单词切换"></a>单词切换</h4><ul>
<li><code>w</code>:  下一个单词，分辨标点</li>
<li><code>W</code>:  下一个单词，只识别空格</li>
<li><code>b</code>: 上一个单词，分辨标点</li>
<li><code>B</code>: 上一个单词，只识别空格</li>
</ul>
<h4 id="光标复位"><a href="#光标复位" class="headerlink" title="光标复位"></a>光标复位</h4><ul>
<li><code>z - Enter</code>: 将光标所在位置复位至中上部</li>
</ul>
<h4 id="行间切换"><a href="#行间切换" class="headerlink" title="行间切换"></a>行间切换</h4><ul>
<li><code>0</code>: 光标移至行首</li>
<li><code>^</code>: 光标移至行内第一个单词</li>
<li><code>$</code>: 光标移至行尾</li>
<li><code>num - gg</code>: 移动至<code>num</code>行第一个单词</li>
<li><code>num - G</code>: 移动至<code>num</code>行第一个单词</li>
<li><code>:num - Enter</code>: 移动至<code>num</code>行第一个单词</li>
<li><code>:$ - Enter</code>: 移动至<code>num</code>行第一个单词</li>
<li><code>gg</code>: 返回文件首部第一个单词</li>
<li><code>G</code>: 到文件最末行第一个单词</li>
</ul>
<h4 id="工作状态"><a href="#工作状态" class="headerlink" title="工作状态"></a>工作状态</h4><ul>
<li><code>Ctrl+g</code>: 显示文件名 工作状态 当前行数</li>
</ul>
<p><img src="https://photos.zywvvd.com/image_canglan/20200722232829.png" alt=""></p>
<ul>
<li><code>g - Ctrl+g</code>: 显示当前行列详细信息</li>
</ul>
<p><img src="https://photos.zywvvd.com/image_canglan/20200722233132.png" alt=""></p>
<ul>
<li><code>:set ruler</code>: 开启标尺信息</li>
</ul>
<p><img src="https://photos.zywvvd.com/image_canglan/20200722233404.png" alt=""></p>
<blockquote>
<p>开启标尺后，<code>Ctrl+g</code>不再显示重复信息</p>
</blockquote>
<ul>
<li><code>:set noruler</code>: 关闭标尺信息</li>
<li><code>:set ruler!</code>: 对当前ruler设置取反（如果关闭则打开，如果打开则关闭）</li>
</ul>
]]></content>
      <categories>
        <category>文字编码</category>
        <category>vim</category>
      </categories>
      <tags>
        <tag>文字编码</tag>
        <tag>vim</tag>
      </tags>
  </entry>
  <entry>
    <title>vim 学习笔记（一）—— vim模式与创建、编辑文件</title>
    <url>/2020/07/21/words/vim/vim-nootbook-1/</url>
    <content><![CDATA[<blockquote>
<ul>
<li><p>vim 是源于linux的一款文本编辑器，在vi基础上开发，具有强大的文本编辑能力，且具有跨平台、几乎所有工具支持的普适性的特点。据说大神级的vim使用者可以在键盘上按照思想的速度操作文本，因此慕名而来，跟风学习一波。</p>
</li>
<li><p>教师是B站搬运来的生肉教程<a href="https://www.bilibili.com/video/BV1Cb411u7L9/" target="_blank" rel="noopener">【公开课】完美的Vim课程【生肉】</a>，事实上vim教程很多，该生肉教程旨在讲解思想和精髓，没有拘泥于具体命令的介绍，有利于建立完整的思维体系。至于细节命令就是知识性内容的学习与熟能生巧的问题了。</p>
</li>
<li><p>该系列笔记为我随学随记的内容，作为个人的学习记录，也作为资料供大家参考。</p>
</li>
</ul>
</blockquote>
<a id="more"></a>

<h3 id="vim-模式"><a href="#vim-模式" class="headerlink" title="vim 模式"></a>vim 模式</h3><blockquote>
<p>vim 共分为三种模式，分别是<strong>命令模式（Command mode）</strong>，<strong>输入模式（Insert mode）</strong>和<strong>底线命令模式（Last line mode）</strong>。</p>
</blockquote>
<h4 id="命令模式"><a href="#命令模式" class="headerlink" title="命令模式"></a>命令模式</h4><p>用户刚刚启动 vi/vim，便进入了命令模式。</p>
<p>此状态下敲击键盘动作会被Vim识别为命令，而非输入字符。比如我们此时按下i，并不会输入一个字符，i被当作了一个命令。</p>
<p>以下是常用的几个命令：</p>
<ul>
<li><strong>i</strong> 切换到输入模式，以输入字符。</li>
<li><strong>x</strong> 删除当前光标所在处的字符。</li>
<li><strong>:</strong> 切换到底线命令模式，以在最底一行输入命令。</li>
</ul>
<h4 id="输入模式"><a href="#输入模式" class="headerlink" title="输入模式"></a>输入模式</h4><p>在命令模式下按下i就进入了输入模式。</p>
<p>该模式下字符都会变成内容输入在文本编辑器中，与我们平时使用编辑器功能基本相同。</p>
<p><strong>ESC</strong>，退出输入模式，切换到命令模式</p>
<h4 id="底线命令模式"><a href="#底线命令模式" class="headerlink" title="底线命令模式"></a>底线命令模式</h4><p>在命令模式下按下:（英文冒号）就进入了底线命令模式。</p>
<p>底线命令模式可以输入单个或多个字符的命令。</p>
<p><img src="https://photos.zywvvd.com/image_canglan/20200721001354.png" alt=""></p>
<blockquote>
<p>参考：<a href="https://www.runoob.com/linux/linux-vim.html" target="_blank" rel="noopener">https://www.runoob.com/linux/linux-vim.html</a></p>
</blockquote>
<h3 id="使用vim创建与编辑文件"><a href="#使用vim创建与编辑文件" class="headerlink" title="使用vim创建与编辑文件"></a>使用vim创建与编辑文件</h3><blockquote>
<p>课程链接：<a href="https://www.bilibili.com/video/BV1Cb411u7L9?p=6" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1Cb411u7L9?p=6</a></p>
</blockquote>
<ul>
<li>创建文件</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim test.txt</span><br></pre></td></tr></table></figure>

<p><img src="https://photos.zywvvd.com/image_canglan/20200721002209.png" alt=""></p>
<blockquote>
<p>此时默认是命令模式，编辑文件需要进入编辑模式。</p>
</blockquote>
<ul>
<li>编辑模式</li>
</ul>
<p>按下 <code>i</code>键进入编辑模式， 输入文本内容。</p>
<p><img src="https://photos.zywvvd.com/image_canglan/20200721002108.png" alt=""></p>
<blockquote>
<p>输入结束后按下<code>esc</code>键返回命令模式，保存文件需要在单行模式下进行。</p>
</blockquote>
<ul>
<li>保存文件</li>
</ul>
<p>在命令模式中按下<code>:</code>键进入单行模式，输入wq按下回车，表示<code>写入-退出</code>当前文件。</p>
<p><img src="https://photos.zywvvd.com/image_canglan/20200721002558.png" alt=""></p>
<p>可以看到我们成功使用vim建立了文件并保存。</p>
<p><img src="https://photos.zywvvd.com/image_canglan/20200721002732.png" alt=""></p>
]]></content>
      <categories>
        <category>文字编码</category>
        <category>vim</category>
      </categories>
      <tags>
        <tag>文字编码</tag>
        <tag>vim</tag>
      </tags>
  </entry>
  <entry>
    <title>解决 Github 无法登录的问题</title>
    <url>/2020/07/08/troubleshooting/github_cannot_log_in/github_cannot_log_in/</url>
    <content><![CDATA[<blockquote>
<p> 不知怎的，GitHub突然无法登录，本文记录解决方法。</p>
</blockquote>
<a id="more"></a>

<h3 id="解决思路"><a href="#解决思路" class="headerlink" title="解决思路"></a>解决思路</h3><blockquote>
<p>不管你能不能访问，github就在那里，是因为我们网络在dns上找不到当前github 的地址导致的无法登录。</p>
<p>解决思路是手动找到github网站IP，填入到host中，这样我们在访问时会直接从host中读取IP并访问。</p>
</blockquote>
<h3 id="查找github-IP地址"><a href="#查找github-IP地址" class="headerlink" title="查找github IP地址"></a>查找github IP地址</h3><blockquote>
<p><strong>IP查询网站：</strong> <a href="https://www.ipaddress.com/" target="_blank" rel="noopener">https://www.ipaddress.com/</a></p>
</blockquote>
<ul>
<li>查询 <strong>github.com</strong></li>
</ul>
<p><img src="https://photos.zywvvd.com/image/20200708003724.png" alt=""></p>
<ul>
<li>保存结果</li>
</ul>
<p><img src="https://photos.zywvvd.com/image_canglan/20200708003825.png" alt=""></p>
<ul>
<li>查询 <strong>github.global.ssl.fastly.net</strong></li>
</ul>
<p><img src="https://photos.zywvvd.com/image_canglan/20200708003914.png" alt=""></p>
<ul>
<li>保存结果 </li>
</ul>
<p><img src="https://photos.zywvvd.com/image_canglan/20200708003950.png" alt=""></p>
<h3 id="写入host文件"><a href="#写入host文件" class="headerlink" title="写入host文件"></a>写入host文件</h3><ul>
<li>Windows </li>
</ul>
<blockquote>
<p>打开 <code>C:\Windows\System32\drivers\etc</code> 路径下的 <code>hosts</code>文件，加入上述结果：</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># github</span><br><span class="line">140.82.112.4 github.com</span><br><span class="line">199.232.69.194 github.global.ssl.fastly.net</span><br></pre></td></tr></table></figure>

<ul>
<li>Linux</li>
</ul>
<blockquote>
<p>打开<code>\etc\hosts</code></p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># github </span><br><span class="line">140.82.112.4 github.com</span><br><span class="line">199.232.69.194 github.global.ssl.fastly.net</span><br></pre></td></tr></table></figure>

<h3 id="刷新DNS"><a href="#刷新DNS" class="headerlink" title="刷新DNS"></a>刷新DNS</h3><ul>
<li>Windows </li>
</ul>
<blockquote>
<p>打开命令提示符， 输入指令：</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ipconfig &#x2F;flushdns</span><br></pre></td></tr></table></figure>

<ul>
<li>Linux</li>
</ul>
<blockquote>
<p>在终端中输入：</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo rcnscd restart</span><br></pre></td></tr></table></figure>

<blockquote>
<p>重启浏览器即可访问 github</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image_canglan/20200708005147.png" alt=""></p>
]]></content>
      <categories>
        <category>故障排除</category>
      </categories>
      <tags>
        <tag>故障排除</tag>
      </tags>
  </entry>
  <entry>
    <title>Python - conda 常用命令介绍</title>
    <url>/2020/06/20/python/conda-env-operation/conda-env-operation/</url>
    <content><![CDATA[<blockquote>
<p>本文介绍使用conda管理anaconda Python环境的相关命令。</p>
</blockquote>
<a id="more"></a>

<h2 id="conda-环境相关命令"><a href="#conda-环境相关命令" class="headerlink" title="conda 环境相关命令"></a>conda 环境相关命令</h2><h3 id="创建环境"><a href="#创建环境" class="headerlink" title="创建环境"></a>创建环境</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda create -n env_name python=3.7 --clone another_env</span><br></pre></td></tr></table></figure>

<blockquote>
<p>-n：name 表示新环境名称</p>
<p>python：使用python版本</p>
<p>–clone：从现有环境复制而来</p>
</blockquote>
<h3 id="删除环境"><a href="#删除环境" class="headerlink" title="删除环境"></a>删除环境</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda remove -n env_name --all</span><br></pre></td></tr></table></figure>

<h3 id="查看环境"><a href="#查看环境" class="headerlink" title="查看环境"></a>查看环境</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda env list</span><br></pre></td></tr></table></figure>

<p>或</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda info -e</span><br></pre></td></tr></table></figure>

<h3 id="激活环境"><a href="#激活环境" class="headerlink" title="激活环境"></a>激活环境</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda activate env_name</span><br></pre></td></tr></table></figure>

<p>或</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">source activate env_name</span><br></pre></td></tr></table></figure>

<h3 id="退出环境"><a href="#退出环境" class="headerlink" title="退出环境"></a>退出环境</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda deactivate</span><br></pre></td></tr></table></figure>

<p>或</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">source deactivate</span><br></pre></td></tr></table></figure>

<blockquote>
<p>会回到<code>base</code>环境</p>
</blockquote>
<h2 id="conda-包相关命令"><a href="#conda-包相关命令" class="headerlink" title="conda 包相关命令"></a>conda 包相关命令</h2><h3 id="查看当前环境下conda管理的python包列表"><a href="#查看当前环境下conda管理的python包列表" class="headerlink" title="查看当前环境下conda管理的python包列表"></a>查看当前环境下conda管理的python包列表</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda list</span><br></pre></td></tr></table></figure>

<h3 id="安装python包"><a href="#安装python包" class="headerlink" title="安装python包"></a>安装python包</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda install package_name #安装包</span><br><span class="line">conda install package_name_1 package_name_2 package_name_3 ... #一次安装多个包</span><br><span class="line">conda install package_name=1.1.0 #安装指定版本的包</span><br></pre></td></tr></table></figure>

<h3 id="更新包"><a href="#更新包" class="headerlink" title="更新包"></a>更新包</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda update package_name # 更新包</span><br><span class="line">conda upgrade --all #更新所有包</span><br></pre></td></tr></table></figure>

<h3 id="卸载包"><a href="#卸载包" class="headerlink" title="卸载包"></a>卸载包</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda remove package_name</span><br></pre></td></tr></table></figure>

<h3 id="搜索不清楚名称的包"><a href="#搜索不清楚名称的包" class="headerlink" title="搜索不清楚名称的包"></a>搜索不清楚名称的包</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda search search_term</span><br></pre></td></tr></table></figure>

<h2 id="conda-重现环境"><a href="#conda-重现环境" class="headerlink" title="conda 重现环境"></a>conda 重现环境</h2><blockquote>
<p>使用conda管理python一个重要的考量就是可迁移性，conda 提供了几种方法用于重现某个conda 环境。</p>
</blockquote>
<h3 id="Clone"><a href="#Clone" class="headerlink" title="Clone"></a>Clone</h3><blockquote>
<p>上文介绍过这个命令，用于本地重现某个环境</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda create --name new_env --clone old_env</span><br></pre></td></tr></table></figure>

<h3 id="Spec-List"><a href="#Spec-List" class="headerlink" title="Spec List"></a>Spec List</h3><blockquote>
<p>相同操作系统的计算机之间复制环境，可以生成 <code>spec list</code></p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 生成 spec list 文件</span></span><br><span class="line">conda list --explicit &gt; spec-list.txt </span><br><span class="line"><span class="meta">#</span><span class="bash">重现环境：</span></span><br><span class="line">conda create --name python-course --file spec-list.txt</span><br></pre></td></tr></table></figure>

<h3 id="Environment-yml"><a href="#Environment-yml" class="headerlink" title="Environment.yml"></a>Environment.yml</h3><blockquote>
<p>使用 -export 选项生成一个 <code>environment.yml</code> 文件，以在不同的平台和操作系统之间复现项目环境。 </p>
<p>spec list 文件和 <code>environment.yml</code> 文件之间的区别在于： <code>environment.yml</code> 文件不针对特定操作系统，并且使用YAML格式。<code>environment.yml</code> 仅列出了软件包名称，由 conda 基于软件包的名称构建环境。 另一个区别是 -export 还包括使用pip安装的软件包，而 <code>spec list</code> 则没有。</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">导出 environment.yml 文件：</span></span><br><span class="line">conda env export &gt; environment.yml</span><br><span class="line"><span class="meta">#</span><span class="bash">重现环境：</span></span><br><span class="line">conda env create -f environment.yml</span><br></pre></td></tr></table></figure>

<blockquote>
<p>注意：如果当前路径已经有了 environment.yml 文件，conda 会重写这个文件</p>
</blockquote>
<h3 id="Conda-Pack"><a href="#Conda-Pack" class="headerlink" title="Conda Pack"></a>Conda Pack</h3><blockquote>
<p>上述两种重现的方法都基于记录当前环境包信息，到新机器重建的思路。而Conda Pack用的是将当前环境的文件直接打包，带到新机器拆包使用的思路。</p>
<p><strong>conda-pack 指定平台和操作系统，目标计算机必须具有与源计算机相同的平台和操作系统。</strong></p>
</blockquote>
<h4 id="安装-conda-pack"><a href="#安装-conda-pack" class="headerlink" title="安装 conda pack"></a>安装 conda pack</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> from conda</span></span><br><span class="line">conda install -c conda-forge conda-pack</span><br><span class="line"><span class="meta">#</span><span class="bash"> from pip</span></span><br><span class="line">pip install conda-pack</span><br></pre></td></tr></table></figure>

<h4 id="打包环境"><a href="#打包环境" class="headerlink" title="打包环境"></a>打包环境</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda pack -n my_env</span><br><span class="line">conda pack -n my_env -o out_name.tar.gz</span><br></pre></td></tr></table></figure>

<h4 id="重现环境"><a href="#重现环境" class="headerlink" title="重现环境"></a>重现环境</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir -p path_to_my_new_env # 建议放在anaconda的envs文件夹中</span><br><span class="line">tar -xzf my_env.tar.gz -C path_to_my_new_env # 解压包中文件</span><br><span class="line">source path_to_my_new_env/bin/activate # 激活该环境</span><br><span class="line">(my_env) $ python # 进入一下该环境下的 python 随后退出</span><br><span class="line">(my_env) $ conda-unpack # 十分重要，请不要忽略</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Python</category>
        <category>运行环境</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>运行环境</tag>
      </tags>
  </entry>
  <entry>
    <title>Python - 类中的对象与属性</title>
    <url>/2020/06/20/python/python-class-var/python-class-var/</url>
    <content><![CDATA[<blockquote>
<p>本文整理类中对象与属性（变量）相关知识。</p>
</blockquote>
<a id="more"></a>

<h2 id="类对象与实例对象"><a href="#类对象与实例对象" class="headerlink" title="类对象与实例对象"></a>类对象与实例对象</h2><blockquote>
<p>建立测试类：</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span>:</span></span><br><span class="line">    var_of_class = <span class="string">'Class Var'</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.var_of_instance = <span class="string">'Instance Var'</span></span><br></pre></td></tr></table></figure>

<h3 id="类对象"><a href="#类对象" class="headerlink" title="类对象"></a>类对象</h3><blockquote>
<p>建立类进行编译后则形成了类对象，类对象仅支持两个操作：</p>
</blockquote>
<ul>
<li>实例化：使用<code>instance_name = class_name()</code>的方式实例化，实例化操作创建该类的实例。</li>
<li>属性引用：使用<code>class_name.attr_name</code>的方式引用类属性。</li>
</ul>
<h3 id="实例对象"><a href="#实例对象" class="headerlink" title="实例对象"></a>实例对象</h3><blockquote>
<p>类对象实例化得到实例对象，实例对象仅支持一个操作：</p>
</blockquote>
<ul>
<li>属性引用；与类对象属性引用的方式相同，使用<code>instance_name.attr_name</code>的方式</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 类对象</span></span><br><span class="line">print(Test)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 实例对象</span></span><br><span class="line">class_instance = Test()</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">__main__</span>.<span class="title">Test</span>'&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">__main__</span>.<span class="title">Test</span> <span class="title">object</span> <span class="title">at</span> 0<span class="title">x00000127715B4128</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="类变量与实例变量"><a href="#类变量与实例变量" class="headerlink" title="类变量与实例变量"></a>类变量与实例变量</h2><blockquote>
<p>建立测试类：</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span>:</span></span><br><span class="line">    var_of_class = <span class="string">'Class Var'</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.var_of_instance = <span class="string">'Instance Var'</span></span><br></pre></td></tr></table></figure>

<h3 id="类变量"><a href="#类变量" class="headerlink" title="类变量"></a>类变量</h3><blockquote>
<p>可由类对象引用</p>
<p>由所有实例共享</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 类对象引用类变量</span></span><br><span class="line">print(<span class="string">f'类对象引用类变量 ：<span class="subst">&#123;Test.var_of_class&#125;</span>'</span>)</span><br><span class="line">class_instance_1 = Test()</span><br><span class="line">class_instance_2 = Test()</span><br><span class="line"><span class="comment"># 实例对象引用类变量</span></span><br><span class="line">print(<span class="string">f'实例对象1引用类变量 ：<span class="subst">&#123;class_instance_1.var_of_class&#125;</span>'</span>)</span><br><span class="line">print(<span class="string">f'实例对象2引用类变量 ：<span class="subst">&#123;class_instance_2.var_of_class&#125;</span>'</span>)</span><br><span class="line"><span class="comment"># 修改类变量实例对象共享修改</span></span><br><span class="line">Test.var_of_class = <span class="string">'Changed Class Var'</span></span><br><span class="line">print(<span class="string">f'实例对象1引用类变量 ：<span class="subst">&#123;class_instance_1.var_of_class&#125;</span>'</span>)</span><br><span class="line">print(<span class="string">f'实例对象2引用类变量 ：<span class="subst">&#123;class_instance_2.var_of_class&#125;</span>'</span>)</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line">类对象引用类变量 ：Class Var</span><br><span class="line">实例对象<span class="number">1</span>引用类变量 ：Class Var</span><br><span class="line">实例对象<span class="number">2</span>引用类变量 ：Class Var</span><br><span class="line">实例对象<span class="number">1</span>引用类变量 ：Changed Class Var</span><br><span class="line">实例对象<span class="number">2</span>引用类变量 ：Changed Class Var</span><br></pre></td></tr></table></figure>

<h3 id="实例变量"><a href="#实例变量" class="headerlink" title="实例变量"></a>实例变量</h3><blockquote>
<p>由实例对象引用</p>
<p>仅在当前实例保存</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 实例变量</span></span><br><span class="line">class_instance_1 = Test()</span><br><span class="line">class_instance_2 = Test()</span><br><span class="line"></span><br><span class="line">print(<span class="string">f'实例对象1实例变量 ：<span class="subst">&#123;class_instance_1.var_of_instance&#125;</span>'</span>)</span><br><span class="line">print(<span class="string">f'实例对象2实例变量 ：<span class="subst">&#123;class_instance_2.var_of_instance&#125;</span>'</span>)</span><br><span class="line">class_instance_1.var_of_instance = <span class="string">'changed instance var'</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">f'修改实例对象1后实例对象1实例变量 ：<span class="subst">&#123;class_instance_1.var_of_instance&#125;</span>'</span>)</span><br><span class="line">print(<span class="string">f'修改实例对象1后实例对象2实例变量 ：<span class="subst">&#123;class_instance_2.var_of_instance&#125;</span>'</span>)</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line">实例对象<span class="number">1</span>实例变量 ：Instance Var</span><br><span class="line">实例对象<span class="number">2</span>实例变量 ：Instance Var</span><br><span class="line">修改实例对象<span class="number">1</span>后实例对象<span class="number">1</span>实例变量 ：changed instance var</span><br><span class="line">修改实例对象<span class="number">1</span>后实例对象<span class="number">2</span>实例变量 ：Instance Var</span><br></pre></td></tr></table></figure>

<blockquote>
<p>类对象不能引用实例变量：</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 类对象不能引用实例变量</span></span><br><span class="line">print(Test.var_of_instance)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>报错！</span><br><span class="line">type object <span class="string">'Test'</span> has no attribute <span class="string">'var_of_instance'</span></span><br></pre></td></tr></table></figure>

<h2 id="属性绑定"><a href="#属性绑定" class="headerlink" title="属性绑定"></a>属性绑定</h2><blockquote>
<p>建立测试类：</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span><span class="params">()</span>:</span></span><br><span class="line">    var_of_class = <span class="string">'Class Var'</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.var_of_instance = <span class="string">'Instance Var'</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>在定义、使用类、实例对象属性过程中，其实涉及两个过程：</p>
</blockquote>
<ul>
<li>类属性绑定</li>
<li>实例属性绑定</li>
</ul>
<blockquote>
<p>使用<code>绑定</code>一词事实上更加确切，可以理解为属性并不是属于类或实例的，Python中一切皆对象，每个属性也都是一个个现货鲜活的对象，之所以这些对象被称之为、用作于属性，是因为我们将这部分对象绑在了类对象可使用的属性名称上；</p>
<p>换一种说法，<strong>对象就是对象，而世上本没有属性，当对象被绑定在类/实例上，对象也就成了类/实例的属性</strong>。</p>
<p>因此绑定属性，首先需要有一个对象才行。</p>
</blockquote>
<h3 id="类属性绑定"><a href="#类属性绑定" class="headerlink" title="类属性绑定"></a>类属性绑定</h3><blockquote>
<p>Python作为动态语言，类对象和实例对象都可以在运行时绑定任意属性，因此类属性绑定有两种时机：</p>
</blockquote>
<ul>
<li>编译类时（写在类中的类属性）</li>
<li>运行时</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 定义时绑定类属性</span></span><br><span class="line">print(<span class="string">f'定义时绑定类属性：<span class="subst">&#123;Test.var_of_class&#125;</span>'</span>)</span><br><span class="line"><span class="comment"># 运行时绑定类属性</span></span><br><span class="line">Test.var_of_class_defined_during_running = <span class="string">'a long var of class'</span></span><br><span class="line">print(<span class="string">f'运行时绑定类属性：<span class="subst">&#123;Test.var_of_class_defined_during_running&#125;</span>'</span>)</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line">定义时绑定类属性：Changed Class Var</span><br><span class="line">运行时绑定类属性：a long var of <span class="class"><span class="keyword">class</span></span></span><br></pre></td></tr></table></figure>

<h3 id="实例属性绑定"><a href="#实例属性绑定" class="headerlink" title="实例属性绑定"></a>实例属性绑定</h3><blockquote>
<p>实例属性绑定也发生在两个时机：</p>
</blockquote>
<ul>
<li>实例生成时</li>
<li>运行时</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">class_instance = Test()</span><br><span class="line"><span class="comment"># 实例生成时绑定的实例属性</span></span><br><span class="line">print(<span class="string">f'实例生成时绑定的实例属性：<span class="subst">&#123;class_instance.var_of_instance&#125;</span>'</span>)</span><br><span class="line"><span class="comment"># 实例运行时绑定的实例属性</span></span><br><span class="line">class_instance.var_of_instance = <span class="string">'defined during running'</span></span><br><span class="line">print(<span class="string">f'实例运行时绑定的实例属性<span class="subst">&#123;class_instance.var_of_instance&#125;</span>'</span>)</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line">实例生成时绑定的实例属性：Instance Var</span><br><span class="line">实例运行时绑定的实例属性: defined during running</span><br></pre></td></tr></table></figure>

<h2 id="属性引用"><a href="#属性引用" class="headerlink" title="属性引用"></a>属性引用</h2><blockquote>
<p>上文中对属性的使用事实上都是在引用类对象或实例对象中的属性。</p>
<p>需要特别说明的是实例对象的属性引用冲突的问题，当类中存在同名的实例属性与类属性时：</p>
</blockquote>
<ul>
<li>由于类对象无法访问实例属性，因此对类对象的属性引用没有影响</li>
<li>实例属性有权访问二者，实现上会优先引用实例级的属性，即同名的类属性会被覆盖</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">class_instance = Test()</span><br><span class="line">class_instance.var_of_class = <span class="string">'instance var with a same name of a class var'</span></span><br><span class="line">print(<span class="string">f'类对象引用冲突属性：<span class="subst">&#123;Test.var_of_class&#125;</span>'</span>)</span><br><span class="line">print(<span class="string">f'实例对象引用冲突属性：<span class="subst">&#123;class_instance.var_of_class&#125;</span>'</span>)</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line">类对象引用冲突属性：Changed Class Var</span><br><span class="line">实例对象引用冲突属性：instance var <span class="keyword">with</span> a same name of a <span class="class"><span class="keyword">class</span> <span class="title">var</span></span></span><br></pre></td></tr></table></figure>

<h2 id="获取源码"><a href="#获取源码" class="headerlink" title="获取源码"></a>获取源码</h2><blockquote>
<p>文中测试环境与所有源码可在<a href="https://github.com/zywvvd/Python_Practise" target="_blank" rel="noopener">Github</a>下载。</p>
</blockquote>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 软链接的增、删、改、查</title>
    <url>/2020/06/19/linux/soft-link/soft-link/</url>
    <content><![CDATA[<blockquote>
<p>Linux的软链接类似Windows的快捷方式，又不尽相同，本文对相关知识进行梳理总结 。</p>
</blockquote>
<a id="more"></a>

<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><blockquote>
<p>软链接是将磁盘中的真实地址增加一个虚拟映射，使得用户访问该映射与访问真实磁盘地址完全相同，是Linux系统中灵巧编程的神兵利器。</p>
</blockquote>
<h2 id="具体操作"><a href="#具体操作" class="headerlink" title="具体操作"></a>具体操作</h2><h3 id="示例用例"><a href="#示例用例" class="headerlink" title="示例用例"></a>示例用例</h3><blockquote>
<p>测试在文件夹~/test 中进行</p>
<p>文件夹中包含tar_dir文件夹</p>
<p>test 文件夹中包含test_file.txt 文件</p>
<p>test_file.txt 文件内容为 Test_File_Data</p>
<p>tar_dir文件夹包含second_test_file.txt文件</p>
<p>second_test_file.txt文件内容为Second_Test_File_Data</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"> :~# mkdir test</span><br><span class="line"> :~# cd test/</span><br><span class="line"> :~/test# ls</span><br><span class="line"> :~/test# mkdir tar_dir</span><br><span class="line"> :~/test# echo Test_File_Data&gt;&gt;test_file.txt</span><br><span class="line"> :~/test# cat test_file.txt </span><br><span class="line">Test_File_Data</span><br><span class="line">:~/test#echo Second_Test_File_Data&gt;&gt;tar_dir/second_test_file.txt</span><br><span class="line">:~/test# cat tar_dir/second_test_file.txt </span><br><span class="line">Second_Test_File_Data</span><br><span class="line"> :~/test# ls</span><br><span class="line">tar_dir  test_file.txt</span><br><span class="line"> :~/test# </span><br><span class="line">:~/test# ls tar_dir/</span><br><span class="line">second_test_file.txt</span><br></pre></td></tr></table></figure>



<h3 id="创建软链接"><a href="#创建软链接" class="headerlink" title="创建软链接"></a>创建软链接</h3><blockquote>
<p>命令 <code>ln</code>，软链接参数 <code>-s</code>:</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ln -s [目标地址] [软链接地址]</span><br></pre></td></tr></table></figure>

<blockquote>
<p>目标地址：需要链接到的目标路径；</p>
<p>软链接地址：需要建立软链接的文件路径</p>
</blockquote>
<ul>
<li>建立指向文件<code>test_file.txt</code>的软链接</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ln -s test_file.txt file_link</span><br></pre></td></tr></table></figure>

<blockquote>
<p>此时可以通过<code>file_link</code>访问文件<code>test_file.txt</code>：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">:~/test# cat file_link </span><br><span class="line">Test_File_Data</span><br></pre></td></tr></table></figure>

<ul>
<li>建立指向目录的软链接</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ln -s tar_dir/ dir_link</span><br></pre></td></tr></table></figure>

<blockquote>
<p>此时可以通过<code>dir_link</code>访问目录<code>tar_dir</code>：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">:~/test# ls dir_link</span><br><span class="line">second_test_file.txt</span><br><span class="line">:~/test# cat dir_link/second_test_file.txt </span><br><span class="line">Second_Test_File_Data</span><br></pre></td></tr></table></figure>

<h3 id="删除软链接"><a href="#删除软链接" class="headerlink" title="删除软链接"></a>删除软链接</h3><blockquote>
<p>软链接本质是文件，可以直接用<code>rm</code>命令删除：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">:~/test# rm file_link </span><br><span class="line">:~/test# rm dir_link</span><br><span class="line">:~/test# ls</span><br><span class="line">tar_dir  test_file.txt</span><br></pre></td></tr></table></figure>

<h3 id="查看软链接"><a href="#查看软链接" class="headerlink" title="查看软链接"></a>查看软链接</h3><blockquote>
<p>可以通过<code>ls -al</code>命令看到软链接指向：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">:~/test# ls -al</span><br><span class="line">total 16</span><br><span class="line">drwxr-xr-x 3 root root 4096 Jun 19 13:04 .</span><br><span class="line">drwx------ 1 root root 4096 Jun 19 13:06 ..</span><br><span class="line">lrwxrwxrwx 1 root root    8 Jun 19 13:04 dir_link -&gt; tar_dir/</span><br><span class="line">lrwxrwxrwx 1 root root   13 Jun 19 13:04 file_link -&gt; test_file.txt</span><br><span class="line">drwxr-xr-x 2 root root 4096 Jun 19 12:55 tar_dir</span><br><span class="line">-rw-r--r-- 1 root root   15 Jun 19 12:52 test_file.txt</span><br></pre></td></tr></table></figure>

<h3 id="修改软链接"><a href="#修改软链接" class="headerlink" title="修改软链接"></a>修改软链接</h3><blockquote>
<p>修改软链接的参数是 <code>-snf</code>：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ln -snf [新目标地址] [软链接地址]</span><br></pre></td></tr></table></figure>

<blockquote>
<p>尝试修改软链接：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">:~/test# ln -snf tar_dir/second_test_file.txt file_link </span><br><span class="line">:~/test# cat file_link </span><br><span class="line">Second_Test_File_Data</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>解决运行文件消失、C盘空间不断缩小而且找不到文件位置的问题</title>
    <url>/2020/06/19/software/debug/missing-running-files/missing-running-files/</url>
    <content><![CDATA[<blockquote>
<p>在Windows 10 系统下回退CUDA版本的过程中，运行CUDA的安装文件时文件会自动消失，随后没有任何反应，同时C盘空间会减少一个安装文件大小，安装一次消失一次、C盘空间缩水一次，然而C盘中总文件大小并没有改变。本文记录该问题解决方法。</p>
</blockquote>
<a id="more"></a>

<h2 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h2><blockquote>
<p>系统处于某种特殊异常状态运行某个程序，同时系统运行了<code>360安全卫士</code>，此时安全卫士会删除该运行的程序并将该程序放入C盘的隔离区，导致程序运行失败、磁盘空间变小。</p>
<p>隔离区是一个叫做<code>$360Section</code>的系统级隐藏文件夹，常规查看文件大小并不统计该文件夹中的文件。</p>
</blockquote>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><h3 id="针对程序不能正常运行"><a href="#针对程序不能正常运行" class="headerlink" title="针对程序不能正常运行"></a>针对程序不能正常运行</h3><ul>
<li>退出360安全卫士</li>
<li>运行程序</li>
</ul>
<h3 id="针对C盘空间变小"><a href="#针对C盘空间变小" class="headerlink" title="针对C盘空间变小"></a>针对C盘空间变小</h3><ul>
<li><p>进入C盘根目录</p>
</li>
<li><p><img src="https://photos.zywvvd.com/matrixtime/20200619195812.png" alt=""></p>
</li>
<li><p>删除<code>$360Section</code>即可</p>
</li>
<li><p><img src="https://photos.zywvvd.com/matrixtime/20200619200324.png" alt=""></p>
</li>
</ul>
]]></content>
      <categories>
        <category>软件</category>
        <category>故障排除</category>
      </categories>
      <tags>
        <tag>故障排除</tag>
        <tag>软件</tag>
      </tags>
  </entry>
  <entry>
    <title>错误 Could not load dynamic library&#39;libnvinfer.so.6&#39; 解决方法</title>
    <url>/2020/06/19/software/debug/libnvinfer-so-6-error/libnvinfer-so-6-error/</url>
    <content><![CDATA[<blockquote>
<p>在测试TensorFlow可用性时(tf.test.is_gpu_available())出现错误<code>Could not load dynamic library&#39;libnvinfer.so.6&#39;</code>，本文记录解决方法。</p>
</blockquote>
<a id="more"></a>

<h2 id="错误原因"><a href="#错误原因" class="headerlink" title="错误原因"></a>错误原因</h2><blockquote>
<p>没有安装 TensorRT</p>
</blockquote>
<ul>
<li>关于NVIDIA TensorRT:</li>
</ul>
<blockquote>
<p>NVIDIA TensorRT是一种高性能神经网络推理(Inference)引擎，用于在生产环境中部署深度学习应用程序，应用有图像分类、分割和目标检测等，可提供最大的推理吞吐量和效率。TensorRT是第一款可编程推理加速器，能加速现有和未来的网络架构。TensorRT需要CUDA的支持。TensorRT包含一个为优化生产环境中部署的深度学习模型而创建的库，可获取经过训练的神经网络(通常使用32位或16位数据)，并针对降低精度的INT8运算来优化这些网络。借助CUDA的可编程性，TensorRT将能够加速助推深度神经网络日益多样化、复杂的增长趋势。通过TensorRT的大幅度加速，服务提供商能够以经济实惠的成本部署这些计算密集型人工智能工作负载。</p>
</blockquote>
<ul>
<li>错误形式</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">Could <span class="keyword">not</span> load dynamic library<span class="string">'libnvinfer.so.6'</span>; dlerror: libnvinfer.so<span class="number">.6</span>: cannot open shared object file: No such file <span class="keyword">or</span> directory; LD_LIBRARY_PATH: /usr/local/nvidia/lib:/usr/local/nvidia/lib64:/usr/local/cuda/lib64/</span><br></pre></td></tr></table></figure>

<blockquote>
<p>实际上这只是个警告信息，而不是错误。<code>libnvinfer.so.6</code>和<code>libnvinfer_plugin.so.6</code>只在使用<code>NVIDIA TensorRT</code>的时候才是必须的。没有这两个库也可以运行tensorflow。</p>
<p>——引自 - <a href="https://blog.csdn.net/toopoo/article/details/104506143" target="_blank" rel="noopener">https://blog.csdn.net/toopoo/article/details/104506143</a></p>
</blockquote>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><blockquote>
<p>安装 TensorRT</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Install TensorRT.</span></span><br><span class="line">sudo apt-get install -y --no-install-recommends libnvinfer6=6.0.1-1+cuda10.1 \</span><br><span class="line">    libnvinfer-dev=6.0.1-1+cuda10.1 \</span><br><span class="line">    libnvinfer-plugin6=6.0.1-1+cuda10.1</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>深度学习</category>
        <category>Tensorflow</category>
        <category>故障排除</category>
      </categories>
      <tags>
        <tag>故障排除</tag>
        <tag>深度学习</tag>
        <tag>Tensorflow</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux &amp; Windows TensorFlow 1.14 升级 2.2</title>
    <url>/2020/06/18/software/install/Linux-tensorflow-2-2-install/Linux-tensorflow-2-2-install/</url>
    <content><![CDATA[<blockquote>
<p>准备尝试升级TensorFlow 1.14 到2.2，需要同时升级本地和服务器的环境，本文记录主要过程。</p>
</blockquote>
<a id="more"></a>

<h2 id="环境需求"><a href="#环境需求" class="headerlink" title="环境需求"></a>环境需求</h2><blockquote>
<p>当前TensorFlow最高版本 2.2.+ ，需要CUDA 10.1，cudnn 7.6</p>
<p>官网下载 ：<a href="https://developer.nvidia.com/" target="_blank" rel="noopener">https://developer.nvidia.com/</a></p>
<p>显卡驱动需要满足CUDA版本要求</p>
</blockquote>
<h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><ul>
<li>下载  cuda_10.1.243_418.87.00_linux.run 并安装（之前装过并运行过TensorFlow，相关库不过时的话可以不特意去装 cudnn）</li>
</ul>
<blockquote>
<p>过程中不需要安装驱动</p>
<p>将 /usr/local/cuda 软链接 指向 cuda-10.1</p>
<p>在 ~/.bashrc 中添加环境变量：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export PATH="$PATH:/usr/local/cuda/bin"</span><br><span class="line">export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/usr/local/cuda/lib64/"</span><br><span class="line">export LIBRARY_PATH="$LIBRARY_PATH:/usr/local/cuda/lib64"</span><br></pre></td></tr></table></figure>

<ul>
<li>下载 TensorFlow ：tensorflow_gpu-2.2.0-cp37-cp37m-manylinux2010_x86_64.whl</li>
</ul>
<blockquote>
<p>或使用pip安装</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip install tensorflow-gpu</span><br></pre></td></tr></table></figure>

<blockquote>
<p>会自动安装最新版 2.2.0 版本tf</p>
</blockquote>
<h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><ul>
<li>下载 cuda_10.1.243_426.00_win10.exe 并安装（之前装过并运行过TensorFlow，相关库不过时的话可以不特意去装 cudnn）</li>
</ul>
<blockquote>
<p>我之前安装了CUDA10.0，不需要卸载原始版本，直接使用默认配置安装新版CUDA即可</p>
</blockquote>
<ul>
<li>下载 TensorFlow ：tensorflow_gpu-2.2.0-cp37-cp37m-win_amd64.whl</li>
</ul>
<blockquote>
<p>或使用pip安装</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip install tensorflow-gpu</span><br></pre></td></tr></table></figure>

<blockquote>
<p>会自动安装最新版 2.2.0 版本tf</p>
</blockquote>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><ul>
<li>python 环境下测试</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tf.__version__</span><br><span class="line"><span class="string">'2.2.0'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tf.test.is_gpu_available()</span><br><span class="line">WARNING:tensorflow:From &lt;stdin&gt;:<span class="number">1</span>: is_gpu_available (<span class="keyword">from</span> tensorflow.python.framework.test_util) <span class="keyword">is</span> deprecated <span class="keyword">and</span> will be removed <span class="keyword">in</span> a future version.</span><br><span class="line">Instructions <span class="keyword">for</span> updating:</span><br><span class="line">Use `tf.config.list_physical_devices(<span class="string">'GPU'</span>)` instead.</span><br><span class="line"><span class="number">2020</span><span class="number">-06</span><span class="number">-18</span> <span class="number">04</span>:<span class="number">15</span>:<span class="number">11.406300</span>: I tensorflow/core/platform/cpu_feature_guard.cc:<span class="number">143</span>] Your CPU supports instructions that this TensorFlow binary was <span class="keyword">not</span> compiled to use: AVX2 FMA</span><br><span class="line"><span class="number">2020</span><span class="number">-06</span><span class="number">-18</span> <span class="number">04</span>:<span class="number">15</span>:<span class="number">11.416107</span>: I tensorflow/core/platform/profile_utils/cpu_utils.cc:<span class="number">102</span>] CPU Frequency: <span class="number">2498530000</span> Hz</span><br><span class="line"><span class="number">2020</span><span class="number">-06</span><span class="number">-18</span> <span class="number">04</span>:<span class="number">15</span>:<span class="number">11.417069</span>: I tensorflow/compiler/xla/service/service.cc:<span class="number">168</span>] XLA service <span class="number">0x55e39cc09290</span> initialized <span class="keyword">for</span> platform Host (this does <span class="keyword">not</span> guarantee that XLA will be used). Devices:</span><br><span class="line"><span class="number">2020</span><span class="number">-06</span><span class="number">-18</span> <span class="number">04</span>:<span class="number">15</span>:<span class="number">11.417085</span>: I tensorflow/compiler/xla/service/service.cc:<span class="number">176</span>]   StreamExecutor device (<span class="number">0</span>): Host, Default Version</span><br><span class="line"><span class="number">2020</span><span class="number">-06</span><span class="number">-18</span> <span class="number">04</span>:<span class="number">15</span>:<span class="number">11.420284</span>: I tensorflow/stream_executor/platform/default/dso_loader.cc:<span class="number">44</span>] Successfully opened dynamic library libcuda.so<span class="number">.1</span></span><br><span class="line"><span class="number">2020</span><span class="number">-06</span><span class="number">-18</span> <span class="number">04</span>:<span class="number">15</span>:<span class="number">11.593401</span>: I tensorflow/compiler/xla/service/service.cc:<span class="number">168</span>] XLA service <span class="number">0x55e39ccc83a0</span> initialized <span class="keyword">for</span> platform CUDA (this does <span class="keyword">not</span> guarantee that XLA will be used). Devices:</span><br><span class="line"><span class="number">2020</span><span class="number">-06</span><span class="number">-18</span> <span class="number">04</span>:<span class="number">15</span>:<span class="number">11.593427</span>: I tensorflow/compiler/xla/service/service.cc:<span class="number">176</span>]   StreamExecutor device (<span class="number">0</span>): GeForce RTX <span class="number">2080</span> Ti, Compute Capability <span class="number">7.5</span></span><br><span class="line"><span class="number">2020</span><span class="number">-06</span><span class="number">-18</span> <span class="number">04</span>:<span class="number">15</span>:<span class="number">11.594463</span>: I tensorflow/core/common_runtime/gpu/gpu_device.cc:<span class="number">1561</span>] Found device <span class="number">0</span> <span class="keyword">with</span> properties: </span><br><span class="line">pciBusID: <span class="number">0000</span>:<span class="number">0</span>a:<span class="number">00.0</span> name: GeForce RTX <span class="number">2080</span> Ti computeCapability: <span class="number">7.5</span></span><br><span class="line">coreClock: <span class="number">1.545</span>GHz coreCount: <span class="number">68</span> deviceMemorySize: <span class="number">10.76</span>GiB deviceMemoryBandwidth: <span class="number">573.69</span>GiB/s</span><br><span class="line"><span class="number">2020</span><span class="number">-06</span><span class="number">-18</span> <span class="number">04</span>:<span class="number">15</span>:<span class="number">11.594765</span>: I tensorflow/stream_executor/platform/default/dso_loader.cc:<span class="number">44</span>] Successfully opened dynamic library libcudart.so<span class="number">.10</span><span class="number">.1</span></span><br><span class="line"><span class="number">2020</span><span class="number">-06</span><span class="number">-18</span> <span class="number">04</span>:<span class="number">15</span>:<span class="number">11.596879</span>: I tensorflow/stream_executor/platform/default/dso_loader.cc:<span class="number">44</span>] Successfully opened dynamic library libcublas.so<span class="number">.10</span></span><br><span class="line"><span class="number">2020</span><span class="number">-06</span><span class="number">-18</span> <span class="number">04</span>:<span class="number">15</span>:<span class="number">11.598737</span>: I tensorflow/stream_executor/platform/default/dso_loader.cc:<span class="number">44</span>] Successfully opened dynamic library libcufft.so<span class="number">.10</span></span><br><span class="line"><span class="number">2020</span><span class="number">-06</span><span class="number">-18</span> <span class="number">04</span>:<span class="number">15</span>:<span class="number">11.599064</span>: I tensorflow/stream_executor/platform/default/dso_loader.cc:<span class="number">44</span>] Successfully opened dynamic library libcurand.so<span class="number">.10</span></span><br><span class="line"><span class="number">2020</span><span class="number">-06</span><span class="number">-18</span> <span class="number">04</span>:<span class="number">15</span>:<span class="number">11.601174</span>: I tensorflow/stream_executor/platform/default/dso_loader.cc:<span class="number">44</span>] Successfully opened dynamic library libcusolver.so<span class="number">.10</span></span><br><span class="line"><span class="number">2020</span><span class="number">-06</span><span class="number">-18</span> <span class="number">04</span>:<span class="number">15</span>:<span class="number">11.602319</span>: I tensorflow/stream_executor/platform/default/dso_loader.cc:<span class="number">44</span>] Successfully opened dynamic library libcusparse.so<span class="number">.10</span></span><br><span class="line"><span class="number">2020</span><span class="number">-06</span><span class="number">-18</span> <span class="number">04</span>:<span class="number">15</span>:<span class="number">11.606633</span>: I tensorflow/stream_executor/platform/default/dso_loader.cc:<span class="number">44</span>] Successfully opened dynamic library libcudnn.so<span class="number">.7</span></span><br><span class="line"><span class="number">2020</span><span class="number">-06</span><span class="number">-18</span> <span class="number">04</span>:<span class="number">15</span>:<span class="number">11.608814</span>: I tensorflow/core/common_runtime/gpu/gpu_device.cc:<span class="number">1703</span>] Adding visible gpu devices: <span class="number">0</span></span><br><span class="line"><span class="number">2020</span><span class="number">-06</span><span class="number">-18</span> <span class="number">04</span>:<span class="number">15</span>:<span class="number">11.608929</span>: I tensorflow/stream_executor/platform/default/dso_loader.cc:<span class="number">44</span>] Successfully opened dynamic library libcudart.so<span class="number">.10</span><span class="number">.1</span></span><br><span class="line"><span class="number">2020</span><span class="number">-06</span><span class="number">-18</span> <span class="number">04</span>:<span class="number">15</span>:<span class="number">11.610584</span>: I tensorflow/core/common_runtime/gpu/gpu_device.cc:<span class="number">1102</span>] Device interconnect StreamExecutor <span class="keyword">with</span> strength <span class="number">1</span> edge matrix:</span><br><span class="line"><span class="number">2020</span><span class="number">-06</span><span class="number">-18</span> <span class="number">04</span>:<span class="number">15</span>:<span class="number">11.610608</span>: I tensorflow/core/common_runtime/gpu/gpu_device.cc:<span class="number">1108</span>]      <span class="number">0</span> </span><br><span class="line"><span class="number">2020</span><span class="number">-06</span><span class="number">-18</span> <span class="number">04</span>:<span class="number">15</span>:<span class="number">11.610618</span>: I tensorflow/core/common_runtime/gpu/gpu_device.cc:<span class="number">1121</span>] <span class="number">0</span>:   N </span><br><span class="line">2020-06-18 04:15:11.612706: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1247] Created TensorFlow device (/device:GPU:0 with 1958 MB memory) -&gt; physical GPU (device: 0, name: GeForce RTX 2080 Ti, pci bus id: 0000:0a:00.0, compute capability: 7.5)</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>当最后一行输出True表示GPU可用，如果是False请查看错误信息。</p>
</blockquote>
]]></content>
      <categories>
        <category>软件</category>
        <category>软件安装</category>
      </categories>
      <tags>
        <tag>软件</tag>
        <tag>软件安装</tag>
      </tags>
  </entry>
  <entry>
    <title>Keras 在fit-generator中获取验证数据的y_true和y_preds</title>
    <url>/2020/06/10/deep_learning/keras/get-gts-and-preds-from-evaluator/get-gts-and-preds-from-evaluator/</url>
    <content><![CDATA[<blockquote>
<p>在Keras网络训练过程中，<code>fit-generator</code>为我们提供了很多便利。调用<code>fit-generator</code>时，每个epoch训练结束后会使用验证数据检测模型性能，Keras使用<code>model.evaluate_generator</code>提供该功能。然而我遇到了需要提取验证集y_pred的需求，在网上没有找到现有的功能实现方法，于是自己对源码进行了微调，实现了可配置提取验证集模型预测结果的功能，记录如下。</p>
</blockquote>
<a id="more"></a>

<h2 id="原理简介"><a href="#原理简介" class="headerlink" title="原理简介"></a>原理简介</h2><blockquote>
<p>通过查看源代码，发现Keras调用了<code>model.evaluate_generator</code>验证数据，该函数最终调用的是TensorFlow（我用的后端是tf）的<code>TF_SessionRunCallable</code>函数，封装得很死，功能是以数据为输入，输出模型预测的结果并与真实标签比较并计算评价函数得到结果。</p>
<p>过程中不保存、不返回预测结果，这部分没有办法修改，但可以<strong>在评价数据的同时对数据进行预测，得到结果并记录下来，传入到<code>epoch_logs</code>中，随后在回调函数的<code>on_epoch_end</code>中尽情使用</strong>。</p>
</blockquote>
<h2 id="代码修改"><a href="#代码修改" class="headerlink" title="代码修改"></a>代码修改</h2><ul>
<li>Keras版本 2.2.4 其他版本不保证一定使用相同的方法，但大体思路不变</li>
</ul>
<h3 id="model-fit-generator"><a href="#model-fit-generator" class="headerlink" title="model.fit_generator"></a>model.fit_generator</h3><p><img src="https://photos.zywvvd.com/matrixtime/20200610154931.png" alt=""></p>
<blockquote>
<p>找到<code>fit_generator</code>函数定义位置，加入控制参数<code>get_predict</code>：</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fit_generator</span><span class="params">(self, generator,</span></span></span><br><span class="line"><span class="function"><span class="params">                      steps_per_epoch=None,</span></span></span><br><span class="line"><span class="function"><span class="params">                      epochs=<span class="number">1</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">                      verbose=<span class="number">1</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">                      callbacks=None,</span></span></span><br><span class="line"><span class="function"><span class="params">                      validation_data=None,</span></span></span><br><span class="line"><span class="function"><span class="params">                      validation_steps=None,</span></span></span><br><span class="line"><span class="function"><span class="params">                      class_weight=None,</span></span></span><br><span class="line"><span class="function"><span class="params">                      max_queue_size=<span class="number">10</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">                      workers=<span class="number">1</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">                      use_multiprocessing=False,</span></span></span><br><span class="line"><span class="function"><span class="params">                      shuffle=True,</span></span></span><br><span class="line"><span class="function"><span class="params">                      initial_epoch=<span class="number">0</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">                      get_predict = False)</span>:</span>    <span class="comment"># 加入 get_predict</span></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">return</span> training_generator.fit_generator(</span><br><span class="line">            self, generator,</span><br><span class="line">            steps_per_epoch=steps_per_epoch,</span><br><span class="line">            epochs=epochs,</span><br><span class="line">            verbose=verbose,</span><br><span class="line">            callbacks=callbacks,</span><br><span class="line">            validation_data=validation_data,</span><br><span class="line">            validation_steps=validation_steps,</span><br><span class="line">            class_weight=class_weight,</span><br><span class="line">            max_queue_size=max_queue_size,</span><br><span class="line">            workers=workers,</span><br><span class="line">            use_multiprocessing=use_multiprocessing,</span><br><span class="line">            shuffle=shuffle,</span><br><span class="line">            initial_epoch=initial_epoch,</span><br><span class="line">            get_predict = get_predict) <span class="comment"># 加入 get_predict</span></span><br></pre></td></tr></table></figure>

<h3 id="training-generator-fit-generator"><a href="#training-generator-fit-generator" class="headerlink" title="training_generator.fit_generator"></a>training_generator.fit_generator</h3><p><img src="https://photos.zywvvd.com/matrixtime/20200610155253.png" alt=""></p>
<blockquote>
<p>找到<code>training_generator.fit_generator</code>定义位置，加入<code>get_predict</code>:</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fit_generator</span><span class="params">(model,</span></span></span><br><span class="line"><span class="function"><span class="params">                  generator,</span></span></span><br><span class="line"><span class="function"><span class="params">                  steps_per_epoch=None,</span></span></span><br><span class="line"><span class="function"><span class="params">                  epochs=<span class="number">1</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">                  verbose=<span class="number">1</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">                  callbacks=None,</span></span></span><br><span class="line"><span class="function"><span class="params">                  validation_data=None,</span></span></span><br><span class="line"><span class="function"><span class="params">                  validation_steps=None,</span></span></span><br><span class="line"><span class="function"><span class="params">                  class_weight=None,</span></span></span><br><span class="line"><span class="function"><span class="params">                  max_queue_size=<span class="number">10</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">                  workers=<span class="number">1</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">                  use_multiprocessing=False,</span></span></span><br><span class="line"><span class="function"><span class="params">                  shuffle=True,</span></span></span><br><span class="line"><span class="function"><span class="params">                  initial_epoch=<span class="number">0</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">                  get_predict = False)</span>:</span> <span class="comment"># 加入 get_predict</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>修改 # Epoch finished. 注释后的模块，可以看到Keras中<code>fit_generator</code>就是用<code>model.evaluate_generator</code>对验证集评估的：</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Epoch finished.</span></span><br><span class="line"><span class="keyword">if</span> steps_done &gt;= steps_per_epoch <span class="keyword">and</span> do_validation:</span><br><span class="line">    <span class="keyword">if</span> val_gen:</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> get_predict:</span><br><span class="line">            <span class="comment">## 如果启动获取预测结果功能，那么将get_predict设置为True</span></span><br><span class="line">            <span class="comment">## 返回值会包括 gts_and_preds </span></span><br><span class="line">            val_outs, gts_and_preds = model.evaluate_generator(</span><br><span class="line">                val_enqueuer_gen,</span><br><span class="line">                validation_steps,</span><br><span class="line">                workers=<span class="number">0</span>,</span><br><span class="line">                get_predict=get_predict)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            val_outs = model.evaluate_generator(</span><br><span class="line">                val_enqueuer_gen,</span><br><span class="line">                validation_steps,</span><br><span class="line">                workers=<span class="number">0</span>)                            </span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># No need for try/except because</span></span><br><span class="line">        <span class="comment"># data has already been validated.</span></span><br><span class="line">        val_outs = model.evaluate(</span><br><span class="line">            val_x, val_y,</span><br><span class="line">            batch_size=batch_size,</span><br><span class="line">            sample_weight=val_sample_weights,</span><br><span class="line">            verbose=<span class="number">0</span>)</span><br><span class="line">    val_outs = to_list(val_outs)</span><br><span class="line">    <span class="comment"># Same labels assumed.</span></span><br><span class="line">    <span class="keyword">for</span> l, o <span class="keyword">in</span> zip(out_labels, val_outs):</span><br><span class="line">        epoch_logs[<span class="string">'val_'</span> + l] = o</span><br><span class="line">    </span><br><span class="line">    <span class="comment">## 将返回值 gts_and_preds 保存到 log 中</span></span><br><span class="line">    <span class="keyword">if</span> get_predict:</span><br><span class="line">        epoch_logs[<span class="string">'val_gts_and_preds'</span>] = gts_and_preds</span><br><span class="line">        </span><br><span class="line"><span class="keyword">if</span> callback_model.stop_training:</span><br><span class="line">    <span class="keyword">break</span></span><br></pre></td></tr></table></figure>

<h3 id="model-evaluate-generator"><a href="#model-evaluate-generator" class="headerlink" title="model.evaluate_generator"></a>model.evaluate_generator</h3><p><img src="https://photos.zywvvd.com/matrixtime/20200610155915.png" alt=""></p>
<blockquote>
<p>进入<code>model.evaluate_generator</code>函数，加入<code>get_predict</code>变量：</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">evaluate_generator</span><span class="params">(self, generator,</span></span></span><br><span class="line"><span class="function"><span class="params">                       steps=None,</span></span></span><br><span class="line"><span class="function"><span class="params">                       max_queue_size=<span class="number">10</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">                       workers=<span class="number">1</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">                       use_multiprocessing=False,</span></span></span><br><span class="line"><span class="function"><span class="params">                       verbose=<span class="number">0</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">                       get_predict=False)</span>:</span> <span class="comment"># 加入get_predict变量</span></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">return</span> training_generator.evaluate_generator(</span><br><span class="line">            self, generator,</span><br><span class="line">            steps=steps,</span><br><span class="line">            max_queue_size=max_queue_size,</span><br><span class="line">            workers=workers,</span><br><span class="line">            use_multiprocessing=use_multiprocessing,</span><br><span class="line">            verbose=verbose,</span><br><span class="line">            get_predict=get_predict) <span class="comment"># 加入get_predict变量</span></span><br></pre></td></tr></table></figure>



<h3 id="training-generator-evaluate-generator"><a href="#training-generator-evaluate-generator" class="headerlink" title="training_generator.evaluate_generator"></a>training_generator.evaluate_generator</h3><p><img src="https://photos.zywvvd.com/matrixtime/20200610163145.png" alt=""></p>
<blockquote>
<p>进入<code>training_generator.evaluate_generator</code>，添加<code>get_predict</code>变量，新建三个变量：</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">evaluate_generator</span><span class="params">(model, generator,</span></span></span><br><span class="line"><span class="function"><span class="params">                       steps=None,</span></span></span><br><span class="line"><span class="function"><span class="params">                       max_queue_size=<span class="number">10</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">                       workers=<span class="number">1</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">                       use_multiprocessing=False,</span></span></span><br><span class="line"><span class="function"><span class="params">                       verbose=<span class="number">0</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">                       get_predict=False)</span>:</span>  <span class="comment"># 加入get_predict变量</span></span><br><span class="line">    <span class="string">"""See docstring for `Model.evaluate_generator`."""</span></span><br><span class="line">    model._make_test_function()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> hasattr(model, <span class="string">'metrics'</span>):</span><br><span class="line">        <span class="keyword">for</span> m <span class="keyword">in</span> model.stateful_metric_functions:</span><br><span class="line">            m.reset_states()</span><br><span class="line">        stateful_metric_indices = [</span><br><span class="line">            i <span class="keyword">for</span> i, name <span class="keyword">in</span> enumerate(model.metrics_names)</span><br><span class="line">            <span class="keyword">if</span> str(name) <span class="keyword">in</span> model.stateful_metric_names]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        stateful_metric_indices = []</span><br><span class="line"></span><br><span class="line">    steps_done = <span class="number">0</span></span><br><span class="line">    wait_time = <span class="number">0.01</span></span><br><span class="line">    outs_per_batch = []</span><br><span class="line">    batch_sizes = []</span><br><span class="line">      </span><br><span class="line">    <span class="keyword">if</span> get_predict:</span><br><span class="line">        preds_dict=&#123;&#125; <span class="comment"># 新建保存结果的dict</span></span><br><span class="line">        gt_per_batch = [] <span class="comment"># 新建 y_true 的 list</span></span><br><span class="line">        pr_per_batch = [] <span class="comment"># 新建 y_pred 的 list</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>在核心循环<code>while steps_done &lt; steps:</code>中加入预测变量的内容：</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> steps_done &lt; steps:</span><br><span class="line">            generator_output = next(output_generator)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> hasattr(generator_output, <span class="string">'__len__'</span>):</span><br><span class="line">                <span class="keyword">raise</span> ValueError(<span class="string">'Output of generator should be a tuple '</span></span><br><span class="line">                                 <span class="string">'(x, y, sample_weight) '</span></span><br><span class="line">                                 <span class="string">'or (x, y). Found: '</span> +</span><br><span class="line">                                 str(generator_output))</span><br><span class="line">            <span class="keyword">if</span> len(generator_output) == <span class="number">2</span>:</span><br><span class="line">                x, y = generator_output</span><br><span class="line">                sample_weight = <span class="literal">None</span></span><br><span class="line">            <span class="keyword">elif</span> len(generator_output) == <span class="number">3</span>:</span><br><span class="line">                x, y, sample_weight = generator_output</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">raise</span> ValueError(<span class="string">'Output of generator should be a tuple '</span></span><br><span class="line">                                 <span class="string">'(x, y, sample_weight) '</span></span><br><span class="line">                                 <span class="string">'or (x, y). Found: '</span> +</span><br><span class="line">                                 str(generator_output))</span><br><span class="line">            outs = model.test_on_batch(x, y, sample_weight=sample_weight)</span><br><span class="line">            outs = to_list(outs)</span><br><span class="line">            outs_per_batch.append(outs)</span><br><span class="line">            </span><br><span class="line">            <span class="comment">## 加入预测功能，保存preds和y_true</span></span><br><span class="line">            <span class="keyword">if</span> get_predict:</span><br><span class="line">                preds = model.predict_on_batch(x)</span><br><span class="line">                gt_per_batch.append(y.tolist())</span><br><span class="line">                pr_per_batch.append(preds.tolist())</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> x <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">or</span> len(x) == <span class="number">0</span>:</span><br><span class="line">                <span class="comment"># Handle data tensors support when no input given</span></span><br><span class="line">                <span class="comment"># step-size = 1 for data tensors</span></span><br><span class="line">                batch_size = <span class="number">1</span></span><br><span class="line">            <span class="keyword">elif</span> isinstance(x, list):</span><br><span class="line">                batch_size = x[<span class="number">0</span>].shape[<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">elif</span> isinstance(x, dict):</span><br><span class="line">                batch_size = list(x.values())[<span class="number">0</span>].shape[<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                batch_size = x.shape[<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">if</span> batch_size == <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">raise</span> ValueError(<span class="string">'Received an empty batch. '</span></span><br><span class="line">                                 <span class="string">'Batches should contain '</span></span><br><span class="line">                                 <span class="string">'at least one item.'</span>)</span><br><span class="line">            steps_done += <span class="number">1</span></span><br><span class="line">            batch_sizes.append(batch_size)</span><br><span class="line">            <span class="keyword">if</span> verbose == <span class="number">1</span>:</span><br><span class="line">                progbar.update(steps_done)</span><br><span class="line">        <span class="comment">## 将结果保存到dict中</span></span><br><span class="line">        <span class="keyword">if</span> get_predict:</span><br><span class="line">            preds_dict[<span class="string">'y_true'</span>] = gt_per_batch</span><br><span class="line">            preds_dict[<span class="string">'y_pred'</span>] = pr_per_batch</span><br></pre></td></tr></table></figure>

<blockquote>
<p>修改返回值：</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> get_predict:</span><br><span class="line">    <span class="keyword">return</span> unpack_singleton(averages), preds_dict</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">return</span> unpack_singleton(averages)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>至此核心的功能已经实现，但还有一个小问题。</p>
</blockquote>
<h3 id="keras-callbacks-TensorBoard-write-logs"><a href="#keras-callbacks-TensorBoard-write-logs" class="headerlink" title="keras.callbacks.TensorBoard._write_logs"></a>keras.callbacks.TensorBoard._write_logs</h3><p><img src="https://photos.zywvvd.com/matrixtime/20200610163226.png" alt=""></p>
<blockquote>
<p>Keras的Tensorboard会记录logs中的内容，但是他只认识 int, float 等数值格式，我们保存在log中的复杂字典他没办法写入tesnorboard，需要对<code>_write_logs</code>做微小的调整：</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_write_logs</span><span class="params">(self, logs, index)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> name, value <span class="keyword">in</span> logs.items():</span><br><span class="line">            <span class="keyword">if</span> name <span class="keyword">in</span> [<span class="string">'batch'</span>, <span class="string">'size'</span>]:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            summary = tf.Summary()</span><br><span class="line">            summary_value = summary.value.add()</span><br><span class="line">            <span class="keyword">if</span> isinstance(value, np.ndarray):</span><br><span class="line">                summary_value.simple_value = value.item()</span><br><span class="line">            <span class="comment">## 跳过我们生成的字典</span></span><br><span class="line">            <span class="keyword">elif</span> isinstance(value, dict):</span><br><span class="line">                <span class="keyword">pass</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                summary_value.simple_value = value</span><br><span class="line">            summary_value.tag = name</span><br><span class="line">            self.writer.add_summary(summary, index)</span><br><span class="line">        self.writer.flush()</span><br></pre></td></tr></table></figure>

<blockquote>
<p>大功告成！</p>
</blockquote>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><blockquote>
<p>随便写个带<code>on_epoch_end</code>的回调函数，将<code>get_predict</code>设置为True，测试logs中是否有我们想要的数据：</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">model.fit_generator(</span><br><span class="line">       generator = train_data_generator,</span><br><span class="line">       steps_per_epoch = <span class="number">10</span>,</span><br><span class="line">       epochs = config.Epochs,</span><br><span class="line">       verbose = <span class="number">1</span>,</span><br><span class="line">       use_multiprocessing=<span class="literal">False</span>,</span><br><span class="line">       validation_data=val_data_generator,</span><br><span class="line">       validation_steps=<span class="number">10</span>,</span><br><span class="line">       callbacks = callbacks,</span><br><span class="line">       get_predict= <span class="literal">True</span></span><br><span class="line">   )</span><br></pre></td></tr></table></figure>

<blockquote>
<p>回调函数设断点，输出logs：</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">logs[<span class="string">'val_gts_and_preds'</span>]</span><br><span class="line">&#123;<span class="string">'y_pred'</span>: [[[<span class="number">2.5419962184969336e-05</span>, <span class="number">0.9999746084213257</span>],</span><br><span class="line">             [<span class="number">0.6694663763046265</span>, <span class="number">0.33053362369537354</span>],</span><br><span class="line">             [<span class="number">0.3561754524707794</span>, <span class="number">0.643824577331543</span>]],</span><br><span class="line">            [[<span class="number">5.548826155499231e-12</span>, <span class="number">1.0</span>],</span><br><span class="line">             [<span class="number">2.701560219975363e-08</span>, <span class="number">1.0</span>],</span><br><span class="line">             [<span class="number">4.0011427699937485e-06</span>, <span class="number">0.9999959468841553</span>]],</span><br><span class="line">            [[<span class="number">7.97858723533551e-11</span>, <span class="number">1.0</span>],</span><br><span class="line">             [<span class="number">2.3924835659272503e-06</span>, <span class="number">0.999997615814209</span>],</span><br><span class="line">             [<span class="number">3.359668880875688e-07</span>, <span class="number">0.9999996423721313</span>]],</span><br><span class="line">            [[<span class="number">0.06622887402772903</span>, <span class="number">0.9337711930274963</span>],</span><br><span class="line">             [<span class="number">4.1211248458239425e-07</span>, <span class="number">0.9999996423721313</span>],</span><br><span class="line">             [<span class="number">8.561290087527595e-06</span>, <span class="number">0.9999914169311523</span>]],</span><br><span class="line">            [[<span class="number">9.313887403550325e-07</span>, <span class="number">0.9999990463256836</span>],</span><br><span class="line">             [<span class="number">2.614793537247806e-08</span>, <span class="number">1.0</span>],</span><br><span class="line">             [<span class="number">8.66139725985704e-06</span>, <span class="number">0.9999912977218628</span>]],</span><br><span class="line">            [[<span class="number">7.047830763440288e-09</span>, <span class="number">1.0</span>],</span><br><span class="line">             [<span class="number">0.010548637248575687</span>, <span class="number">0.9894513487815857</span>],</span><br><span class="line">             [<span class="number">1.8744471252940542e-10</span>, <span class="number">1.0</span>]],</span><br><span class="line">            [[<span class="number">8.760089875714527e-11</span>, <span class="number">1.0</span>],</span><br><span class="line">             [<span class="number">0.0015734446933493018</span>, <span class="number">0.9984265565872192</span>],</span><br><span class="line">             [<span class="number">1.5642463040421717e-06</span>, <span class="number">0.9999984502792358</span>]],</span><br><span class="line">            [[<span class="number">0.004750440828502178</span>, <span class="number">0.9952495098114014</span>],</span><br><span class="line">             [<span class="number">6.984401466070267e-07</span>, <span class="number">0.9999992847442627</span>],</span><br><span class="line">             [<span class="number">0.00013592069444712251</span>, <span class="number">0.9998641014099121</span>]],</span><br><span class="line">            [[<span class="number">7.22906318140204e-11</span>, <span class="number">1.0</span>],</span><br><span class="line">             [<span class="number">2.402198795437016e-08</span>, <span class="number">1.0</span>],</span><br><span class="line">             [<span class="number">9.673745138272238e-10</span>, <span class="number">1.0</span>]],</span><br><span class="line">            [[<span class="number">3.1848256298872e-07</span>, <span class="number">0.9999996423721313</span>],</span><br><span class="line">             [<span class="number">0.0035940599627792835</span>, <span class="number">0.9964058995246887</span>],</span><br><span class="line">             [<span class="number">1.9458911912351162e-11</span>, <span class="number">1.0</span>]]],</span><br><span class="line"> <span class="string">'y_true'</span>: [[[<span class="number">0.0</span>, <span class="number">1.0</span>], [<span class="number">0.0</span>, <span class="number">1.0</span>], [<span class="number">0.0</span>, <span class="number">1.0</span>]],</span><br><span class="line">            [[<span class="number">0.0</span>, <span class="number">1.0</span>], [<span class="number">0.0</span>, <span class="number">1.0</span>], [<span class="number">0.0</span>, <span class="number">1.0</span>]],</span><br><span class="line">            [[<span class="number">0.0</span>, <span class="number">1.0</span>], [<span class="number">0.0</span>, <span class="number">1.0</span>], [<span class="number">0.0</span>, <span class="number">1.0</span>]],</span><br><span class="line">            [[<span class="number">0.0</span>, <span class="number">1.0</span>], [<span class="number">0.0</span>, <span class="number">1.0</span>], [<span class="number">0.0</span>, <span class="number">1.0</span>]],</span><br><span class="line">            [[<span class="number">0.0</span>, <span class="number">1.0</span>], [<span class="number">0.0</span>, <span class="number">1.0</span>], [<span class="number">0.0</span>, <span class="number">1.0</span>]],</span><br><span class="line">            [[<span class="number">0.0</span>, <span class="number">1.0</span>], [<span class="number">0.0</span>, <span class="number">1.0</span>], [<span class="number">0.0</span>, <span class="number">1.0</span>]],</span><br><span class="line">            [[<span class="number">0.0</span>, <span class="number">1.0</span>], [<span class="number">0.0</span>, <span class="number">1.0</span>], [<span class="number">0.0</span>, <span class="number">1.0</span>]],</span><br><span class="line">            [[<span class="number">0.0</span>, <span class="number">1.0</span>], [<span class="number">0.0</span>, <span class="number">1.0</span>], [<span class="number">0.0</span>, <span class="number">1.0</span>]],</span><br><span class="line">            [[<span class="number">0.0</span>, <span class="number">1.0</span>], [<span class="number">0.0</span>, <span class="number">1.0</span>], [<span class="number">0.0</span>, <span class="number">1.0</span>]],</span><br><span class="line">            [[<span class="number">0.0</span>, <span class="number">1.0</span>], [<span class="number">0.0</span>, <span class="number">1.0</span>], [<span class="number">0.0</span>, <span class="number">1.0</span>]]]&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>之后这些结果任君处置了；</p>
</blockquote>
<h2 id="附"><a href="#附" class="headerlink" title="附"></a>附</h2><blockquote>
<p>将<code>get_predict</code>设为 False 时则屏蔽了我们做出的所有修改，与原始Keras代码完全相同；</p>
<p>目前没有发现其他的问题，有任何不对头可以随时交流。</p>
</blockquote>
]]></content>
      <categories>
        <category>深度学习</category>
        <category>Keras</category>
      </categories>
      <tags>
        <tag>深度学习</tag>
        <tag>Keras</tag>
      </tags>
  </entry>
  <entry>
    <title>mount 命令(一) —— Liunx下设置共享文件夹，用于mount挂载文件</title>
    <url>/2020/06/03/linux/mount/mount-settings/mount-settings/</url>
    <content><![CDATA[<blockquote>
<p>磁盘挂载是同步共享、同步文件的好方法，默认文件夹不具有共享能力，本文记录将Linux中文件夹设置成可mount的方法。</p>
</blockquote>
<a id="more"></a>

<h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><blockquote>
<p>我们想把192.168.10.80 Linux服务器中的 <code>/disk/zhangyiwei</code>文件夹共享，以便在Windows 10系统中加载。</p>
</blockquote>
<ul>
<li>当前80服务器中没有可见的 <code>/disk/zhangyiwei</code>文件夹可用于挂载</li>
</ul>
<p><img src="https://photos.zywvvd.com/matrixtime/20200603165054.png" alt=""></p>
<h2 id="设置共享文件夹"><a href="#设置共享文件夹" class="headerlink" title="设置共享文件夹"></a>设置共享文件夹</h2><blockquote>
<p>共享文件夹在<code>/etc/exports</code>文件中配置，在文件末尾添加：</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;root&#x2F;zhangyiwei&#x2F; 192.168.10.219(rw,no_root_squash,no_all_squash,sync)</span><br></pre></td></tr></table></figure>

<ul>
<li><p>/root/zhangyiwei/   为共享的路径</p>
</li>
<li><p>192.168.10.219 为主机名，一般用以下设置</p>
<ul>
<li><p>可以使用ip或网络号：例如 192.168.12.20 或者192.168.12.0/24 或者192.168.100.0/255.255.255.0都可以</p>
</li>
<li><p>可以使用主机名，但是这主机名必须在/etc/hosts内配置</p>
</li>
</ul>
</li>
<li><p>rw/ro</p>
<ul>
<li>rw表示（read-write）可读写，ro表示（read-only）只读</li>
</ul>
</li>
<li><p>sync/async</p>
<ul>
<li><p>sync表示数据同步写入到内存与硬盘中，async表示数据会暂存与内存中，而非直接写入硬盘</p>
</li>
<li><p>no_root_squash/root_squash反正就是客户端访问权限的问题，需要开放no_root_squash</p>
</li>
</ul>
</li>
<li><p>all_squash不论登录NFS的用户身份为何，他的身份都会被压缩成为匿名用户，通常也就是nobody(nfsnobody)</p>
</li>
</ul>
<h2 id="重新加载-etc-exports文件"><a href="#重新加载-etc-exports文件" class="headerlink" title="重新加载/etc/exports文件"></a>重新加载/etc/exports文件</h2><blockquote>
<p>修改完<code>/etc/exports</code>文件后并不能即时生效，需要命令（需要root权限）：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo exportfs -a</span><br></pre></td></tr></table></figure>

<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><blockquote>
<p>使用命令 <code>showmount -e IP</code>可以查看主机中可mount的文件夹</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> showmount -e 192.168.10.80</span></span><br><span class="line">Export list for 192.168.10.80:</span><br><span class="line">/disk/zhangyiwei *</span><br><span class="line">/disk/lujunyi    *</span><br></pre></td></tr></table></figure>

<p><img src="https://photos.zywvvd.com/matrixtime/20200603171804.png" alt=""></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>解决 Windows 10 家庭版没有NFS服务无法挂载磁盘的问题</title>
    <url>/2020/06/02/windows/windows-family-nfs/windows-family-nfs/</url>
    <content><![CDATA[<blockquote>
<p> NFS服务可以方便地将网络磁盘挂载到本地，进行文件同步，但Windows 10 家庭版不支持该功能。本文记录不需要重装系统不用换Linux不装虚拟机的根本性无痛解决方案。</p>
</blockquote>
<a id="more"></a>

<h2 id="升级-Windows-10"><a href="#升级-Windows-10" class="headerlink" title="升级 Windows 10"></a>升级 Windows 10</h2><blockquote>
<p>将家庭版Win10 升级到企业版，系统便会自带NFS服务。</p>
</blockquote>
<h3 id="序列号"><a href="#序列号" class="headerlink" title="序列号"></a>序列号</h3><blockquote>
<p>2020.06.02 亲测有效，感谢：<a href="https://www.jianshu.com/p/3f9e2368e546" target="_blank" rel="noopener">https://www.jianshu.com/p/3f9e2368e546</a> 分享</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">J7QT3-3GCPG-9GVWT-CH2XR-GMRJM</span><br><span class="line">VK7JG-NPHTM-C97JM-9MPGT-3V66T</span><br></pre></td></tr></table></figure>

<h3 id="替换产品序列号"><a href="#替换产品序列号" class="headerlink" title="替换产品序列号"></a>替换产品序列号</h3><ul>
<li>右键 我的电脑 -&gt; 属性 -&gt; 更改产品密钥</li>
</ul>
<p><img src="https://photos.zywvvd.com/matrixtime/20200602172554.png" alt=""></p>
<ul>
<li>输入企业版密钥，关闭当前工作的程序并保存工作进度，一路下一步即可</li>
</ul>
<p><img src="https://photos.zywvvd.com/matrixtime/20200602172926.png" alt=""></p>
<h2 id="开启NFS服务"><a href="#开启NFS服务" class="headerlink" title="开启NFS服务"></a>开启NFS服务</h2><ul>
<li>控制面板 -&gt; 程序和功能 -&gt; 勾选NFS服务 -&gt; 确定</li>
</ul>
<p><img src="https://photos.zywvvd.com/matrixtime/20200602173153.png" alt=""></p>
<ul>
<li>在CMD中测试，输入 mount -h 查看输出</li>
</ul>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Users</span>\<span class="title">Admin</span>&gt;<span class="title">mount</span> -<span class="title">h</span></span></span><br><span class="line"><span class="function">用法:  <span class="title">mount</span> [-<span class="title">o</span> <span class="title">options</span>] [-<span class="title">u:username</span>] [-<span class="title">p</span>:&lt;<span class="title">password</span> | *&gt;] &lt;\\<span class="title">computername</span>\<span class="title">sharename</span>&gt; &lt;<span class="title">devicename</span> | *&gt;</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">-<span class="title">o</span> <span class="title">rsize</span>=<span class="title">size</span>               设置读取缓冲区的大小(以 <span class="title">KB</span> 为单位)。</span></span><br><span class="line"><span class="function">-<span class="title">o</span> <span class="title">wsize</span>=<span class="title">size</span>               设置写入缓冲区的大小(以 <span class="title">KB</span> 为单位)。</span></span><br><span class="line"><span class="function">-<span class="title">o</span> <span class="title">timeout</span>=<span class="title">time</span>             设置 <span class="title">RPC</span> 调用的超时值(以秒为单位)。</span></span><br><span class="line"><span class="function">-<span class="title">o</span> <span class="title">retry</span>=<span class="title">number</span>             设置软装载的重试次数。</span></span><br><span class="line"><span class="function">-<span class="title">o</span> <span class="title">mtype</span>=<span class="title">soft</span>|<span class="title">hard</span>          设置装载类型。</span></span><br><span class="line"><span class="function">-<span class="title">o</span> <span class="title">lang</span>=<span class="title">euc</span>-<span class="title">jp</span>|<span class="title">euc</span>-<span class="title">tw</span>|<span class="title">euc</span>-<span class="title">kr</span>|<span class="title">shift</span>-<span class="title">jis</span>|<span class="title">big5</span>|<span class="title">ksc5601</span>|<span class="title">gb2312</span>-80|<span class="title">ansi</span></span></span><br><span class="line"><span class="function">                            指定用于文件和目录名称的编码。</span></span><br><span class="line"><span class="function">-<span class="title">o</span> <span class="title">fileaccess</span>=<span class="title">mode</span>          指定文件的权限模式。</span></span><br><span class="line"><span class="function">                            这些模式用于在 <span class="title">NFS</span> 服务器上创建的</span></span><br><span class="line"><span class="function">                            新文件。使用 <span class="title">UNIX</span> 样式模式位指定。</span></span><br><span class="line"><span class="function">-<span class="title">o</span> <span class="title">anon</span>                     作为匿名用户装载。</span></span><br><span class="line"><span class="function">-<span class="title">o</span> <span class="title">nolock</span>                   禁用锁定。</span></span><br><span class="line"><span class="function">-<span class="title">o</span> <span class="title">casesensitive</span>=<span class="title">yes</span>|<span class="title">no</span>     指定在服务器上执行区分大小写的文件查找。</span></span><br><span class="line"><span class="function">-<span class="title">o</span> <span class="title">sec</span>=<span class="title">sys</span>|<span class="title">krb5</span>|<span class="title">krb5i</span>|<span class="title">krb5p</span></span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>有此类输出表明NFS服务启动成功。</p>
</blockquote>
<h2 id="磁盘挂载"><a href="#磁盘挂载" class="headerlink" title="磁盘挂载"></a>磁盘挂载</h2><ul>
<li>映射磁盘驱动器</li>
</ul>
<p><img src="https://photos.zywvvd.com/matrixtime/20200602173956.png" alt=""></p>
<ul>
<li>映射网络上的一个地址即可</li>
</ul>
<p><img src="https://photos.zywvvd.com/matrixtime/20200602174125.png" alt=""></p>
<ul>
<li>映射成功</li>
</ul>
<p><img src="https://photos.zywvvd.com/matrixtime/20200602174202.png" alt=""></p>
<h3 id="莫名其妙挂载失败的问题"><a href="#莫名其妙挂载失败的问题" class="headerlink" title="莫名其妙挂载失败的问题"></a>莫名其妙挂载失败的问题</h3><blockquote>
<p>在cmd中输入命令</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">showmount -e &lt;ip 需要挂载远程的地址&gt;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>可以显示对方可挂载的目录</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">showmount -e 192.168.10.15</span><br><span class="line">导出列表在 192.168.10.15:</span><br><span class="line">/disk/zhangyiwei                   *</span><br></pre></td></tr></table></figure>

<blockquote>
<p>然而挂载时却出现奇怪的错误，诸如：</p>
</blockquote>
<ul>
<li>提示目标地址不存在，提醒检查拼写</li>
<li>出现未知错误</li>
</ul>
<h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><ul>
<li>无脑关闭NFS服务</li>
<li>重启电脑</li>
<li>打开NFS服务</li>
</ul>
<blockquote>
<p>就好了。。。</p>
</blockquote>
]]></content>
      <categories>
        <category>软件</category>
        <category>Windows 10</category>
        <category>故障排除</category>
      </categories>
      <tags>
        <tag>故障排除</tag>
        <tag>软件</tag>
        <tag>Windows 10</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows pip upgrade 报错 No module named &#39;pip&#39;</title>
    <url>/2020/05/30/coding/environment/pip-upgrade-error/pip-upgrade-error/</url>
    <content><![CDATA[<blockquote>
<p>windws 10 下升级 pip ，升级时下载安装包，卸载原有pip成功，在安装新pip包时因种种原因安装失败会导致pip被卸载，本文记录修复方法 。</p>
</blockquote>
<a id="more"></a>

<h2 id="核心命令"><a href="#核心命令" class="headerlink" title="核心命令"></a>核心命令</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">python -m ensurepip</span><br><span class="line">python -m pip install --upgrade pip</span><br></pre></td></tr></table></figure>

<h2 id="实际效果"><a href="#实际效果" class="headerlink" title="实际效果"></a>实际效果</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> pip list</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File "e:\program_files\annoconda\lib\runpy.py", line 193, in _run_module_as_main</span><br><span class="line">    "__main__", mod_spec)</span><br><span class="line">  File "e:\program_files\annoconda\lib\runpy.py", line 85, in _run_code</span><br><span class="line">    exec(code, run_globals)</span><br><span class="line">  File "E:\Program_Files\Annoconda\Scripts\pip.exe\__main__.py", line 4, in &lt;module&gt;</span><br><span class="line">ModuleNotFoundError: No module named 'pip'</span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> python -m ensurepip</span></span><br><span class="line">Looking in links: C:\Users\Admin\AppData\Local\Temp\tmp1ggp6o2t</span><br><span class="line">Requirement already satisfied: setuptools in e:\program_files\annoconda\lib\site-packages (45.1.0)</span><br><span class="line">Collecting pip</span><br><span class="line">jupyterlab 2.1.0 has requirement jupyterlab_server&gt;=1.1.0, but you'll have jupyterlab-server 1.0.0 which is incompatible.</span><br><span class="line">jupyterlab-server 1.0.0 has requirement jsonschema&gt;=3.0.1, but you'll have jsonschema 2.6.0 which is incompatible.</span><br><span class="line">imgviz 1.1.0 has requirement Pillow&gt;=5.3.0, but you'll have pillow 5.2.0 which is incompatible.</span><br><span class="line">Installing collected packages: pip</span><br><span class="line">Successfully installed pip-10.0.1</span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> python -m pip install --upgrade pip</span></span><br><span class="line">Looking in indexes: https://mirrors.aliyun.com/pypi/simple/</span><br><span class="line">Collecting pip</span><br><span class="line">  Using cached https://mirrors.aliyun.com/pypi/packages/43/84/23ed6a1796480a6f1a2d38f2802901d078266bda38388954d01d3f2e821d/pip-20.1.1-py2.py3-none-any.whl</span><br><span class="line">jupyterlab 2.1.0 has requirement jupyterlab_server&gt;=1.1.0, but you'll have jupyterlab-server 1.0.0 which is incompatible.</span><br><span class="line">jupyterlab-server 1.0.0 has requirement jsonschema&gt;=3.0.1, but you'll have jsonschema 2.6.0 which is incompatible.</span><br><span class="line">imgviz 1.1.0 has requirement Pillow&gt;=5.3.0, but you'll have pillow 5.2.0 which is incompatible.</span><br><span class="line">Installing collected packages: pip</span><br><span class="line">  Found existing installation: pip 10.0.1</span><br><span class="line">    Uninstalling pip-10.0.1:</span><br><span class="line">      Successfully uninstalled pip-10.0.1</span><br><span class="line">Successfully installed pip-20.1.1</span><br><span class="line">You are using pip version 20.1.1, however version 20.2b1 is available.</span><br><span class="line">You should consider upgrading via the 'python -m pip install --upgrade pip' command.</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>程序人生</category>
        <category>故障排除</category>
      </categories>
      <tags>
        <tag>程序人生</tag>
        <tag>故障排除</tag>
      </tags>
  </entry>
  <entry>
    <title>Keras 在网络中自定义切割数据层</title>
    <url>/2020/05/25/deep_learning/keras/keras-sclice-data/keras-sclice-data/</url>
    <content><![CDATA[<blockquote>
<p>keras支持Lambda可以实现数据自定义处理操作，本文记录切割、截取网络层数据Lambda层实现方法。</p>
</blockquote>
<a id="more"></a>

<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><blockquote>
<p>需要在网络层中选取某层，截取其中部分特征，用于模型的特征处理。</p>
</blockquote>
<h2 id="切割函数"><a href="#切割函数" class="headerlink" title="切割函数"></a>切割函数</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cut_map</span><span class="params">(x,index)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> x[:, index:-index, index:-index, :]</span><br></pre></td></tr></table></figure>

<h2 id="加入网络层"><a href="#加入网络层" class="headerlink" title="加入网络层"></a>加入网络层</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = Lambda(cut_map, arguments=&#123;<span class="string">'index'</span>:<span class="number">32</span>&#125;, name = <span class="string">'classify_Lambda'</span>)(x)</span><br></pre></td></tr></table></figure>

<h2 id="网络效果"><a href="#网络效果" class="headerlink" title="网络效果"></a>网络效果</h2><p><img src="https://photos.zywvvd.com/matrixtime/20200525210335.png" alt=""></p>
<h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><ul>
<li>建议该层主要用于训练好的模型的特征处理，直接放入准备训练的模型会造成该层无法传播梯度。</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
        <category>Keras</category>
      </categories>
      <tags>
        <tag>深度学习</tag>
        <tag>Keras</tag>
      </tags>
  </entry>
  <entry>
    <title>Keras 分割网络自定义评估函数 - mean iou</title>
    <url>/2020/05/25/deep_learning/keras/my-mean-iou/my-mean-iou/</url>
    <content><![CDATA[<blockquote>
<p>Keras训练网络过程中需要实时观察性能，mean iou不是keras自带的评估函数，tf的又觉得不好用，自己写了一个，经过测试没有问题，本文记录自定义keras mean iou评估的实现方法。</p>
</blockquote>
<a id="more"></a>

<h2 id="计算-IoU"><a href="#计算-IoU" class="headerlink" title="计算 IoU"></a>计算 IoU</h2><blockquote>
<p>用numpy计算的，作为IoU的ground truth用作测试使用：</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">iou_numpy</span><span class="params">(y_true,y_pred)</span>:</span></span><br><span class="line">    </span><br><span class="line">    intersection = np.sum(np.multiply(y_true.astype(<span class="string">'bool'</span>),y_pred == <span class="number">1</span>))</span><br><span class="line">    union = np.sum((y_true.astype(<span class="string">'bool'</span>)+y_pred.astype(<span class="string">'bool'</span>))&gt;<span class="number">0</span>)    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> intersection/union</span><br></pre></td></tr></table></figure>

<blockquote>
<p>keras metric IoU</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">iou_keras</span><span class="params">(y_true, y_pred)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Return the Intersection over Union (IoU).</span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">        y_true: the expected y values as a one-hot</span></span><br><span class="line"><span class="string">        y_pred: the predicted y values as a one-hot or softmax output</span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">        the IoU for the given label</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    label = <span class="number">1</span></span><br><span class="line">    <span class="comment"># extract the label values using the argmax operator then</span></span><br><span class="line">    <span class="comment"># calculate equality of the predictions and truths to the label</span></span><br><span class="line">    y_true = K.cast(K.equal(y_true, label), K.floatx())</span><br><span class="line">    y_pred = K.cast(K.equal(y_pred, label), K.floatx())</span><br><span class="line">    <span class="comment"># calculate the |intersection| (AND) of the labels</span></span><br><span class="line">    intersection = K.sum(y_true * y_pred)</span><br><span class="line">    <span class="comment"># calculate the |union| (OR) of the labels</span></span><br><span class="line">    union = K.sum(y_true) + K.sum(y_pred) - intersection</span><br><span class="line">    <span class="comment"># avoid divide by zero - if the union is zero, return 1</span></span><br><span class="line">    <span class="comment"># otherwise, return the intersection over union</span></span><br><span class="line">    <span class="keyword">return</span> K.switch(K.equal(union, <span class="number">0</span>), <span class="number">1.0</span>, intersection / union)</span><br></pre></td></tr></table></figure>



<h2 id="计算-mean-IoU"><a href="#计算-mean-IoU" class="headerlink" title="计算 mean IoU"></a>计算 mean IoU</h2><blockquote>
<p>mean IoU 简便起见，选取 (0,1,0.05) 作为不同的IoU阈值，计算平均IoU</p>
<p>numpy 真实值计算</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mean_iou_numpy</span><span class="params">(y_true,y_pred)</span>:</span></span><br><span class="line">    </span><br><span class="line">    iou_list = []</span><br><span class="line">    <span class="keyword">for</span> thre <span class="keyword">in</span> list(np.arange(<span class="number">0.0000001</span>,<span class="number">0.99</span>,<span class="number">0.05</span>)):</span><br><span class="line">        y_pred_temp = y_pred &gt;= thre</span><br><span class="line">        iou = iou_numpy(y_true, y_pred_temp)</span><br><span class="line">        iou_list.append(iou)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> np.mean(iou_list)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>Keras  mean IoU </p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mean_iou_keras</span><span class="params">(y_true, y_pred)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Return the mean Intersection over Union (IoU).</span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">        y_true: the expected y values as a one-hot</span></span><br><span class="line"><span class="string">        y_pred: the predicted y values as a one-hot or softmax output</span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">        the mean IoU</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    label = <span class="number">1</span></span><br><span class="line">    <span class="comment"># extract the label values using the argmax operator then</span></span><br><span class="line">    <span class="comment"># calculate equality of the predictions and truths to the label</span></span><br><span class="line">    y_true = K.cast(K.equal(y_true, label), K.floatx())</span><br><span class="line">    </span><br><span class="line">    mean_iou = K.variable(<span class="number">0</span>)</span><br><span class="line">    </span><br><span class="line">    thre_list = list(np.arange(<span class="number">0.0000001</span>,<span class="number">0.99</span>,<span class="number">0.05</span>))</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> thre <span class="keyword">in</span> thre_list:</span><br><span class="line">        </span><br><span class="line">        y_pred_temp = K.cast(y_pred &gt;= thre, K.floatx())</span><br><span class="line">        y_pred_temp = K.cast(K.equal(y_pred_temp, label), K.floatx())</span><br><span class="line">        <span class="comment"># calculate the |intersection| (AND) of the labels</span></span><br><span class="line">        intersection = K.sum(y_true * y_pred_temp)</span><br><span class="line">        <span class="comment"># calculate the |union| (OR) of the labels</span></span><br><span class="line">        union = K.sum(y_true) + K.sum(y_pred_temp) - intersection</span><br><span class="line">        iou = K.switch(K.equal(union, <span class="number">0</span>), <span class="number">1.0</span>, intersection / union)</span><br><span class="line">        mean_iou = mean_iou + iou</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> mean_iou / len(thre_list)</span><br></pre></td></tr></table></figure>



<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 随机生成预测值</span></span><br><span class="line">y_true_np = np.ones([<span class="number">10</span>,<span class="number">10</span>])</span><br><span class="line">y_pred_np = np.random.rand(<span class="number">10</span>,<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 真实IoU值</span></span><br><span class="line">print(<span class="string">f' iou : <span class="subst">&#123;iou_numpy(y_true_np, y_pred_np)&#125;</span>'</span>)</span><br><span class="line">print(<span class="string">f' mean_iou_numpy : <span class="subst">&#123;mean_iou_numpy(y_true_np, y_pred_np)&#125;</span>'</span>)</span><br><span class="line"></span><br><span class="line">y_true = tf.Variable(y_true_np)</span><br><span class="line">y_pred = tf.Variable(y_pred_np)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 计算节点</span></span><br><span class="line">iou_res = iou_keras (y_true, y_pred)</span><br><span class="line">m_iou_res = mean_iou_keras (y_true, y_pred)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 变量初始化</span></span><br><span class="line">init_op = tf.global_variables_initializer()</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> tf.Session() <span class="keyword">as</span> sess:</span><br><span class="line">    sess.run(init_op)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">## 由于存在误差，结果在0.0000001范围内即可认为相同</span></span><br><span class="line">    </span><br><span class="line">    result = sess.run(iou_res)</span><br><span class="line">    print(<span class="string">f'result : <span class="subst">&#123;result&#125;</span> \nsame with ground truth: <span class="subst">&#123;abs(iou_numpy(y_true_np, y_pred_np) - result)&lt; <span class="number">0.0000001</span>&#125;</span>'</span>)</span><br><span class="line">    </span><br><span class="line">    result = sess.run(m_iou_res)</span><br><span class="line">    print(<span class="string">f'result : <span class="subst">&#123;result&#125;</span> \nsame with ground truth: <span class="subst">&#123;abs(mean_iou_numpy(y_true_np, y_pred_np) - result) &lt; <span class="number">0.0000001</span>&#125;</span>'</span>)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>输出：</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">iou : <span class="number">0.0</span></span><br><span class="line">mean_iou_numpy : <span class="number">0.5295</span></span><br><span class="line">result : <span class="number">0.0</span> </span><br><span class="line">same <span class="keyword">with</span> ground truth: <span class="literal">True</span></span><br><span class="line">result : <span class="number">0.5295000076293945</span> </span><br><span class="line">same <span class="keyword">with</span> ground truth: <span class="literal">True</span></span><br></pre></td></tr></table></figure>

<h3 id="源码下载"><a href="#源码下载" class="headerlink" title="源码下载"></a>源码下载</h3><p><a href="https://github.com/zywvvd/Python_Practise" target="_blank" rel="noopener">https://github.com/zywvvd/Python_Practise</a></p>
]]></content>
      <categories>
        <category>深度学习</category>
        <category>Keras</category>
      </categories>
      <tags>
        <tag>深度学习</tag>
        <tag>Keras</tag>
      </tags>
  </entry>
  <entry>
    <title>Keras 模型多输出 loss weight metrics 设置</title>
    <url>/2020/05/25/deep_learning/keras/keras-multi-metrics/keras-multi-metrics/</url>
    <content><![CDATA[<blockquote>
<p>keras支持模型多输入多输出，本文记录多输出时loss、loss weight和metrics的设置方式。</p>
</blockquote>
<a id="more"></a>

<h2 id="模型输出"><a href="#模型输出" class="headerlink" title="模型输出"></a>模型输出</h2><blockquote>
<p>假设模型具有多个输出</p>
</blockquote>
<ul>
<li>classify： 二维数组，分类softmax输出，需要配置交叉熵损失</li>
<li>segmentation：与输入同尺寸map，sigmoid输出，需要配置二分类损失</li>
<li>others：自定义其他输出，需要自定义损失</li>
</ul>
<h2 id="具体配置"><a href="#具体配置" class="headerlink" title="具体配置"></a>具体配置</h2><h3 id="model"><a href="#model" class="headerlink" title="model"></a>model</h3><ul>
<li>变量均为模型中网络层</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">inputs = [input_1 , input_2]</span><br><span class="line">outputs = [classify, segmentation, others]</span><br><span class="line">model = keras.models.Model(inputs, outputs)</span><br></pre></td></tr></table></figure>

<h3 id="loss"><a href="#loss" class="headerlink" title="loss"></a>loss</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">my_loss = &#123;</span><br><span class="line">    <span class="string">'classify'</span>: <span class="string">'categorical_crossentropy'</span>,\</span><br><span class="line">    <span class="string">'segmentation'</span>:<span class="string">'binary_crossentropy'</span>,\</span><br><span class="line">    <span class="string">'others'</span>:my_loss_fun&#125;</span><br></pre></td></tr></table></figure>

<h3 id="loss-weight"><a href="#loss-weight" class="headerlink" title="loss weight"></a>loss weight</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">my_loss_weights = &#123;</span><br><span class="line">    <span class="string">'classify'</span>:<span class="number">1</span>,\</span><br><span class="line">    <span class="string">'segmentation'</span>:<span class="number">1</span>,\</span><br><span class="line">    <span class="string">'others'</span>:<span class="number">10</span>&#125;</span><br></pre></td></tr></table></figure>

<h3 id="metrics"><a href="#metrics" class="headerlink" title="metrics"></a>metrics</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">my_metrics =&#123;</span><br><span class="line">    <span class="string">'classify'</span>:<span class="string">'acc'</span>,\</span><br><span class="line">    <span class="string">'segmentation'</span>:[mean_iou,<span class="string">'acc'</span>],\</span><br><span class="line">    <span class="string">'others'</span>:[<span class="string">'mse'</span>,<span class="string">'acc'</span>]</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">model.compile(optimizer=Adam(lr=config.LEARNING_RATE), loss=my_loss, loss_weights= my_loss_weights, metrics= my_metrics)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>深度学习</category>
        <category>Keras</category>
      </categories>
      <tags>
        <tag>深度学习</tag>
        <tag>Keras</tag>
      </tags>
  </entry>
  <entry>
    <title>解决 Windows OSError - pydot failed to call GraphViz.Please install GraphViz 报错</title>
    <url>/2020/05/20/deep_learning/keras/call-GraphViz-failed/call-GraphViz-failed/</url>
    <content><![CDATA[<blockquote>
<p>Windows操作系统下，运行pydot相关程序时（我的是keras.utils.plot_model)报错，提示没有安装GraphViz，事实上并不都是因为GraphViz没有安装，本文记录错误解决方法。</p>
</blockquote>
<a id="more"></a>

<h2 id="问题复现"><a href="#问题复现" class="headerlink" title="问题复现"></a>问题复现</h2><blockquote>
<p>操作系统：Win10</p>
<p>keras版本：2.2.4</p>
<p>在Win10系统下（Windows系列都可能出这个问题）keras建立简单的模型，执行 plot_model，报错：</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> keras </span><br><span class="line"><span class="keyword">from</span> keras.models <span class="keyword">import</span> Model</span><br><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> Input</span><br><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> Conv2D</span><br><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> GlobalAveragePooling2D</span><br><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> Dense</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> keras.utils <span class="keyword">import</span> plot_model</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">os.environ[<span class="string">"PATH"</span>] += os.pathsep + <span class="string">r'E:\Program Files (x86)\Graphviz2.38\bin'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">A = Input(shape=(<span class="number">16</span>,<span class="number">16</span>,<span class="number">3</span>))</span><br><span class="line">x = Conv2D(filters=<span class="number">10</span>, kernel_size=(<span class="number">3</span>,<span class="number">3</span>), padding=<span class="string">'same'</span>, activation=<span class="string">'relu'</span>)(A)</span><br><span class="line">x = Conv2D(filters=<span class="number">10</span>, kernel_size=(<span class="number">3</span>,<span class="number">3</span>), padding=<span class="string">'same'</span>, activation=<span class="string">'relu'</span>)(x)</span><br><span class="line">x = GlobalAveragePooling2D()(x)</span><br><span class="line">x = Dense(units = <span class="number">5</span>, activation=<span class="string">'softmax'</span>)(x)</span><br><span class="line"></span><br><span class="line">model = Model(A,x)</span><br><span class="line"></span><br><span class="line">model.summary()</span><br><span class="line"></span><br><span class="line">test_input = np.random.rand(<span class="number">1</span>,<span class="number">16</span>,<span class="number">16</span>,<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">results = model.predict(test_input)</span><br><span class="line"></span><br><span class="line">plot_model(model)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>错误信息：</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">builtins.OSError: `pydot` failed to call GraphViz.Please install GraphViz (https://www.graphviz.org/) <span class="keyword">and</span> ensure that its executables are <span class="keyword">in</span> the $PATH.</span><br></pre></td></tr></table></figure>

<h2 id="问题原因与解决方案"><a href="#问题原因与解决方案" class="headerlink" title="问题原因与解决方案"></a>问题原因与解决方案</h2><h3 id="情况-1"><a href="#情况-1" class="headerlink" title="情况 1"></a>情况 1</h3><ul>
<li>原因 ：真的没有安装GraphViz</li>
<li>解决方案：<ul>
<li>安装相应模块 </li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip install pydot-ng </span><br><span class="line">pip install graphviz </span><br><span class="line">pip install pydot</span><br></pre></td></tr></table></figure>

<blockquote>
<p>如果问题没有排除，可能是GraphViz程序没有加入到系统路径，考虑情况2</p>
</blockquote>
<h3 id="情况-2"><a href="#情况-2" class="headerlink" title="情况 2"></a>情况 2</h3><ul>
<li>原因：GraphViz程序没有加入到系统路径</li>
<li>解决方案：<ul>
<li>下载graphviz-2.38.msi ，我是在这里下载的 <a href="https://www.5down.net/soft/graphviz.html" target="_blank" rel="noopener">https://www.5down.net/soft/graphviz.html</a></li>
<li>我安装在了E盘：<code>E:\Program Files (x86)\Graphviz2.38\bin</code></li>
<li>将路径加入到系统变量</li>
<li><img src="https://photos.zywvvd.com/matrixtime/20200520110131.png" alt=""></li>
</ul>
</li>
</ul>
<blockquote>
<p>目前为止是网上大多数存在的解决方案，相信大部分的同学到此为止已经解决了问题。</p>
<p>如果错误继续，那么我和你一样，进入情况3。</p>
</blockquote>
<h3 id="情况-3"><a href="#情况-3" class="headerlink" title="情况 3"></a>情况 3</h3><ul>
<li><p>原因：依赖模块已经安装、程序已经加入系统变量，仍然出现上述提示，是因为<code>pydot</code>在建立<code>Dot</code>类时查找的<code>dot</code>程序的名字是 ’dot‘ 而不是我们 Windows 里的可执行程序文件名 ‘dot.exe’</p>
</li>
<li><p>解决方案：改过来就好了，具体方法如下</p>
<ul>
<li><p>在报错的位置找到<code>pydot</code></p>
</li>
<li><p><img src="https://photos.zywvvd.com/matrixtime/20200520110546.png" alt=""></p>
</li>
<li><p>找到Dot类</p>
</li>
<li><p><img src="https://photos.zywvvd.com/matrixtime/20200520110627.png" alt=""></p>
</li>
<li><p>类的开头代码是这样的：</p>
</li>
</ul>
</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dot</span><span class="params">(Graph)</span>:</span></span><br><span class="line">    <span class="string">"""A container for handling a dot language file.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    This class implements methods to write and process</span></span><br><span class="line"><span class="string">    a dot language file. It is a derived class of</span></span><br><span class="line"><span class="string">    the base class 'Graph'.</span></span><br><span class="line"><span class="string">    """</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>找到其中的 <code>self.prog = &#39;dot&#39;</code></p>
</li>
<li><p>讲这句话替换为：</p>
</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> platform</span><br><span class="line">system = platform.system()</span><br><span class="line">            </span><br><span class="line"><span class="keyword">if</span> system == <span class="string">'Windows'</span>:</span><br><span class="line">    self.prog = <span class="string">'dot.exe'</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    self.prog = <span class="string">'dot'</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>保存再次运行程序即可</p>
</li>
<li><p><img src="https://photos.zywvvd.com/matrixtime/20200520110906.png" alt=""></p>
</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
        <category>Keras</category>
        <category>故障排除</category>
      </categories>
      <tags>
        <tag>故障排除</tag>
        <tag>深度学习</tag>
        <tag>Keras</tag>
      </tags>
  </entry>
  <entry>
    <title>WingIDE 7.2.0 调试远程服务器中 Docker</title>
    <url>/2020/05/14/coding/environment/wingide-remote-docker/wingide-remote-docker/</url>
    <content><![CDATA[<blockquote>
<p>上回我们说到<a href="https://www.zywvvd.com/2020/05/14/coding/environment/wing-ssh-remote/wing-ssh-remote/">WingIDE 7.2.0 远程调试</a>，但是我们又经常在远程服务器中启用docker运行程序，于是我们又出现了WingIDE远程调试服务器中Docker的需求，本文记录解决方案。</p>
</blockquote>
<a id="more"></a>

<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><blockquote>
<p>事实上ssh打通了本地与远程服务器，就可以打通服务器里的docker了。我们在ssh连接服务器时常用的是22端口，我们仅需将docker的22端口映射到服务器的随便哪个端口（例如3722），然后putty保存通过3722端口ssh连接的记录，wingIDE用其连接就是了。</p>
</blockquote>
<h2 id="docker配置"><a href="#docker配置" class="headerlink" title="docker配置"></a>docker配置</h2><blockquote>
<p>需要将docker的端口A映射到服务器的端口B，在建立docker的容器时加入参数 <code>-p</code>即可：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> docker run -it --name vvd -p 3722:22 -v /root/tmp:/root/tmp my_docker bash</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>此时docker 容器的22端口被映射到了服务器的3722端口.</p>
</blockquote>
<ul>
<li>随后需要在docker内部重新配置一遍ssh密钥，方法与在服务器内配置相同（参考<a href="https://www.zywvvd.com/2020/05/14/coding/environment/wing-ssh-remote/wing-ssh-remote/">WingIDE 7.2.0 远程调试</a>）</li>
</ul>
<h2 id="putty配置修改"><a href="#putty配置修改" class="headerlink" title="putty配置修改"></a>putty配置修改</h2><blockquote>
<p>将端口号由22修改为3722即可：</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/matrixtime/20200514200415.png" alt=""></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><blockquote>
<p>本质上与直接连接服务器没有区别，只是使用了端口映射，解决了这个问题。</p>
</blockquote>
]]></content>
      <categories>
        <category>程序人生</category>
        <category>IDE</category>
      </categories>
      <tags>
        <tag>程序人生</tag>
        <tag>IDE</tag>
      </tags>
  </entry>
  <entry>
    <title>WingIDE 7.2.0 远程调试</title>
    <url>/2020/05/14/coding/environment/wing-ssh-remote/wing-ssh-remote/</url>
    <content><![CDATA[<blockquote>
<p>大型程序常常会运行在性能强劲的服务器上，但是此时程序的调试又成了难办的事情，于是产生了远程调试的需求，本文介绍WingIDE远程调试配置方法。</p>
</blockquote>
<a id="more"></a>

<h2 id="环境描述"><a href="#环境描述" class="headerlink" title="环境描述"></a>环境描述</h2><ul>
<li><p>WingIDE 版本需求 6.++/ 7.++ ,我的是 7.2.0</p>
</li>
<li><p>本地操作系统 Win10</p>
</li>
<li><p>远程服务器操作系统 Ubuntu 16.04</p>
</li>
<li><p>安装 putty</p>
</li>
<li><p>解决方案：使用ssh协议通信，实现远程调试</p>
</li>
</ul>
<h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><h3 id="安装SSH服务"><a href="#安装SSH服务" class="headerlink" title="安装SSH服务"></a>安装SSH服务</h3><blockquote>
<p>查看服务是否安装：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo ps -e |grep ssh</span><br></pre></td></tr></table></figure>

<blockquote>
<p>返回带有 sshd 的条目即为已经安装</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ps -e |grep ssh</span></span><br><span class="line">   37 ?        00:00:00 sshd</span><br><span class="line">16013 ?        00:00:00 sshd</span><br><span class="line">16588 ?        00:00:00 sshd</span><br></pre></td></tr></table></figure>

<blockquote>
<p>否则安装SSH服务</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install openssh-server</span><br></pre></td></tr></table></figure>

<h3 id="生成SSH密钥对"><a href="#生成SSH密钥对" class="headerlink" title="生成SSH密钥对"></a>生成SSH密钥对</h3><blockquote>
<p>在本地Win10（运行wingIDE的环境）使用ssh-keygen生成SSH密钥</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ssh-keygen -t rsa</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>此时在 C -&gt; Users -&gt; Admin（用户名） -&gt; .ssh 文件夹下会生成 <code>id_rsa</code>和<code>id_rsa.pub</code>两个密钥文件，其中 <code>id_rsa</code>为私钥，无论如何不能交给别人。</p>
</blockquote>
<h3 id="远程主机配置SSH密钥"><a href="#远程主机配置SSH密钥" class="headerlink" title="远程主机配置SSH密钥"></a>远程主机配置SSH密钥</h3><blockquote>
<p>将刚刚生成的公钥文件<code>id_rsa.pub</code>复制到远程主机 <code>~/.ssh</code>文件夹中，并添加到<code>~/.ssh/authorized_keys</code>里。</p>
<p>假设你的<code>id_rsa.pub</code>文件在<code>.ssh</code>文件夹中而且名称为<code>rsa_temp.pub</code></p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat ~/.ssh/rsa_temp.pub &gt;&gt; ~/.ssh/authorized_keys</span><br><span class="line">rm  ~/.ssh/rsa_temp.pub</span><br></pre></td></tr></table></figure>

<blockquote>
<p>此时你的本机Win10系统ssh连接远程主机已经不再需要输入密码进行身份验证。</p>
<p>可以使用ssh命令测试是否配置成功，过程中询问是否继续连接，输入 <code>yes</code>即可：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh -p 3722 root@192.168.10.80 #-p为端口 一般来说ssh常用端口默认是22</span><br><span class="line"></span><br><span class="line"><span class="meta">-----&gt;</span></span><br><span class="line">The authenticity of host '[192.168.10.80]:3722 ([192.168.10.80]:3722)' can't be established.</span><br><span class="line">ECDSA key fingerprint is SHA256:qCIsaqEa6wNy0daSgBxxxxxxxxxxxxxxxxxxxxxx.</span><br><span class="line">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span><br><span class="line">Warning: Permanently added '[192.168.10.80]:3722' (ECDSA) to the list of known hosts.</span><br><span class="line">Welcome to Ubuntu 16.04.6 LTS (GNU/Linux 4.4.0-142-generic x86_64)</span><br><span class="line"></span><br><span class="line"> * Documentation:  https://help.ubuntu.com</span><br><span class="line"> * Management:     https://landscape.canonical.com</span><br><span class="line"> * Support:        https://ubuntu.com/advantage</span><br><span class="line">Last login: Thu May 14 08:20:47 2020 from 192.168.10.213</span><br><span class="line"> * Starting OpenBSD Secure Shell server sshd                             [ OK ]</span><br><span class="line">root@fc6fa7bb6824:~#</span><br></pre></td></tr></table></figure>

<blockquote>
<p>此时我们已经可以用SSH连接两个操作系统，即已经完成了理论层面的配置，接下来进入具体操作阶段。</p>
</blockquote>
<h2 id="远程调试配置"><a href="#远程调试配置" class="headerlink" title="远程调试配置"></a>远程调试配置</h2><blockquote>
<p>此处解释一下，WingIDE在连接远程服务器时需要配置连接信息，而这个信息可以在putty中保存，也就是说，只要putty中保存的参数可以连接成功，那么这套配置就可以用于wingIDE的远程调试。</p>
</blockquote>
<h3 id="私钥文件id-rsa转换成putty的ppk格式"><a href="#私钥文件id-rsa转换成putty的ppk格式" class="headerlink" title="私钥文件id_rsa转换成putty的ppk格式"></a>私钥文件id_rsa转换成putty的ppk格式</h3><blockquote>
<p>putty需要ppk格式的私钥文件，生成方法如下：</p>
</blockquote>
<ul>
<li>运行puttygen （在putty同位置文件夹内）</li>
</ul>
<p><img src="https://photos.zywvvd.com/matrixtime/20200514191003.png" alt=""></p>
<ul>
<li>选择<code>Conversions</code>菜单项中的<code>Import key</code>选项：</li>
</ul>
<p><img src="https://photos.zywvvd.com/matrixtime/20200514191136.png" alt=""></p>
<ul>
<li>选择生成的id_rsa文件</li>
<li>在puttygen的界面上点击<code>Save private key</code>按钮就可以把私钥转换为ppk的格式了（不要点<code>Generate</code>）</li>
</ul>
<h3 id="在putty配置远程连接信息"><a href="#在putty配置远程连接信息" class="headerlink" title="在putty配置远程连接信息"></a>在putty配置远程连接信息</h3><blockquote>
<p>打开putty</p>
</blockquote>
<ul>
<li>配置 Session ：</li>
</ul>
<p><img src="https://photos.zywvvd.com/matrixtime/20200514190333.png" alt=""></p>
<blockquote>
<p>主要配置IP和端口号，在Saved Sessions里配置可以区分的名字，之后供WingIDE调用</p>
</blockquote>
<ul>
<li>配置 Connection-Data选项卡，在自动登录用户名处填入需要自动登录的用户名（我的是root）</li>
</ul>
<p><img src="https://photos.zywvvd.com/matrixtime/20200514192550.png" alt=""></p>
<ul>
<li>配置 Connection-SSH-Auth选项卡，浏览选择刚刚生成的私钥ppk文件：</li>
</ul>
<p><img src="https://photos.zywvvd.com/matrixtime/20200514192014.png" alt=""></p>
<ul>
<li>回到Session，点击<code>Save</code>保存当前配置到<code>test_3722</code>中：</li>
</ul>
<p><img src="https://photos.zywvvd.com/matrixtime/20200514192711.png" alt=""></p>
<ul>
<li>此后每次打开putty双击我们的<code>test_3722</code>即可连接到远程服务器：</li>
</ul>
<p><img src="https://photos.zywvvd.com/matrixtime/20200514193220.png" alt=""></p>
<h3 id="配置WingIDE"><a href="#配置WingIDE" class="headerlink" title="配置WingIDE"></a>配置WingIDE</h3><blockquote>
<p>距离成功仅一步之遥。</p>
<p>打开WingIDE， Project -&gt; New Project</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/matrixtime/20200514193933.png" alt=""></p>
<blockquote>
<p>其中 Identifier 为该工程的名称， Host Name为我们刚刚保存的Putty名称，点击<code>OK</code>。</p>
</blockquote>
<ul>
<li>此时可以选择保存工程，也可以一会再说</li>
</ul>
<p><img src="https://photos.zywvvd.com/matrixtime/20200514194133.png" alt=""></p>
<ul>
<li>在远程的默认python路径往往不是我们需要的，我的常用python在conda的一个自建的环境中，可以指定其为wingIDE的默认远程python环境：</li>
</ul>
<p><img src="https://photos.zywvvd.com/matrixtime/20200514194516.png" alt=""></p>
<ul>
<li>随后一路OK，出现此对话框说明配置成功：</li>
</ul>
<p><img src="https://photos.zywvvd.com/matrixtime/20200514194611.png" alt=""></p>
<ul>
<li>重启python shell 可以在本地看到远程的python shell：</li>
</ul>
<p><img src="https://photos.zywvvd.com/matrixtime/20200514194723.png" alt=""></p>
<ul>
<li>可以简单通过操作系统验证是否配置成远程python</li>
</ul>
<p><img src="https://photos.zywvvd.com/matrixtime/20200514194830.png" alt=""></p>
<ul>
<li>在project中可以加入远程的工程</li>
</ul>
<p><img src="https://photos.zywvvd.com/matrixtime/20200514194908.png" alt=""></p>
<p><img src="https://photos.zywvvd.com/matrixtime/20200514195000.png" alt=""></p>
<blockquote>
<p>可以本地修改远程代码，并运行调试：</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/matrixtime/20200514195140.png" alt=""></p>
]]></content>
      <categories>
        <category>程序人生</category>
        <category>IDE</category>
      </categories>
      <tags>
        <tag>程序人生</tag>
        <tag>IDE</tag>
      </tags>
  </entry>
  <entry>
    <title>解决 json.dump 报错：TypeError - Object of type xxx is not JSON serializable</title>
    <url>/2020/05/12/coding/json-bug-fix/json-bug-fix/</url>
    <content><![CDATA[<blockquote>
<p>在python中导入json包可以方便地操作json文件，但是偶尔会遇到 TypeError: Object of type xxx is not JSON serializable 错误，通常报错的位置是很正常的int或float，本文记录该问题解决方法。</p>
</blockquote>
<a id="more"></a>

<h2 id="自定义序列化方法"><a href="#自定义序列化方法" class="headerlink" title="自定义序列化方法"></a>自定义序列化方法</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyEncoder</span><span class="params">(json.JSONEncoder)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">default</span><span class="params">(self, obj)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> isinstance(obj, np.integer):</span><br><span class="line">            <span class="keyword">return</span> int(obj)</span><br><span class="line">        <span class="keyword">elif</span> isinstance(obj, np.floating):</span><br><span class="line">            <span class="keyword">return</span> float(obj)</span><br><span class="line">        <span class="keyword">elif</span> isinstance(obj, np.ndarray):</span><br><span class="line">            <span class="keyword">return</span> obj.tolist()</span><br><span class="line">        <span class="keyword">if</span> isinstance(obj, time):</span><br><span class="line">            <span class="keyword">return</span> obj.__str__()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> super(MyEncoder, self).default(obj)</span><br></pre></td></tr></table></figure>

<h2 id="调用json包写入数据时加入"><a href="#调用json包写入数据时加入" class="headerlink" title="调用json包写入数据时加入"></a>调用json包写入数据时加入</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">json.dump(final_json, fp, indent=<span class="number">3</span>, cls= MyEncoder)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>程序人生</category>
        <category>Python</category>
        <category>故障排除</category>
      </categories>
      <tags>
        <tag>程序人生</tag>
        <tag>Python</tag>
        <tag>故障排除</tag>
      </tags>
  </entry>
  <entry>
    <title>Wingide 快捷键</title>
    <url>/2020/05/11/coding/wing-Shortcut/wing-Shortcut/</url>
    <content><![CDATA[<blockquote>
<p> 感觉wingide是比较小众的python ide，但是我就是用着顺手吖，本文记录wing的快捷键。</p>
</blockquote>
<a id="more"></a>

<h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><table>
<thead>
<tr>
<th align="center">功能</th>
<th align="center">快捷键</th>
</tr>
</thead>
<tbody><tr>
<td align="center">Ctrl+N</td>
<td align="center">新建文件</td>
</tr>
<tr>
<td align="center">Ctrl+O</td>
<td align="center">打开文件夹</td>
</tr>
<tr>
<td align="center">Ctrl+W</td>
<td align="center">关闭当前文件</td>
</tr>
<tr>
<td align="center">Ctrl+S</td>
<td align="center">保存文件</td>
</tr>
<tr>
<td align="center">Ctrl+shif+S</td>
<td align="center">另存为</td>
</tr>
<tr>
<td align="center">Ctrl+P</td>
<td align="center">打印</td>
</tr>
<tr>
<td align="center">Ctrl+Q</td>
<td align="center">退出</td>
</tr>
<tr>
<td align="center">Ctrl+Z</td>
<td align="center">撤回上一步</td>
</tr>
<tr>
<td align="center">Ctrl+A</td>
<td align="center">全选</td>
</tr>
<tr>
<td align="center">Ctrl+L</td>
<td align="center">跳到指定一行</td>
</tr>
<tr>
<td align="center">Ctrl+U</td>
<td align="center">在本行查找</td>
</tr>
<tr>
<td align="center">Ctrl+B</td>
<td align="center">查找相同变量名</td>
</tr>
<tr>
<td align="center">Ctrl+‘+’</td>
<td align="center">放大</td>
</tr>
<tr>
<td align="center">Ctrl+‘（’</td>
<td align="center">切换文件屏幕</td>
</tr>
<tr>
<td align="center">Ctrl+ALT+V</td>
<td align="center">运行当前文件</td>
</tr>
<tr>
<td align="center">Ctrl+ALT+M</td>
<td align="center">切换window应用界面</td>
</tr>
<tr>
<td align="center">F1</td>
<td align="center">上下框的开合</td>
</tr>
<tr>
<td align="center">F2</td>
<td align="center">左右框的开合</td>
</tr>
<tr>
<td align="center">Shif+F2</td>
<td align="center">编辑窗口最大化</td>
</tr>
<tr>
<td align="center">F5</td>
<td align="center">运行</td>
</tr>
<tr>
<td align="center">F9</td>
<td align="center">添加断点</td>
</tr>
<tr>
<td align="center">Ctrl+Shift+P或F1</td>
<td align="center">查看所有模块</td>
</tr>
<tr>
<td align="center">Alt+Shift+P</td>
<td align="center">新建项目</td>
</tr>
<tr>
<td align="center">Ctrl+Shift+N</td>
<td align="center">打开一个新Egret Wing窗口</td>
</tr>
<tr>
<td align="center">Ctrl+Shift+O</td>
<td align="center">能够打开快速大纲面板，显示当前文件中定义的所有类，方法和变量。</td>
</tr>
<tr>
<td align="center">Shift+F12</td>
<td align="center">查找所有引用</td>
</tr>
<tr>
<td align="center">Alt+Left</td>
<td align="center">切换到上一个编辑位置</td>
</tr>
<tr>
<td align="center">Ctrl+Shift+K</td>
<td align="center">删除当前行</td>
</tr>
<tr>
<td align="center">Ctrl+delete</td>
<td align="center">删除右侧单词</td>
</tr>
<tr>
<td align="center">Ctrl+D</td>
<td align="center">类似于eclipse中Ctrl+K</td>
</tr>
<tr>
<td align="center">Ctrl+home</td>
<td align="center">光标移到文件顶部</td>
</tr>
<tr>
<td align="center">Ctrl+U</td>
<td align="center">返回上一光标</td>
</tr>
<tr>
<td align="center">Ctrl+i</td>
<td align="center">选择当前行</td>
</tr>
<tr>
<td align="center">Alt+Shift+F</td>
<td align="center">格式化代码</td>
</tr>
<tr>
<td align="center">Tab</td>
<td align="center">自动补全</td>
</tr>
<tr>
<td align="center">Alt+Backspace</td>
<td align="center">删除光标所在单词的光标前的部分</td>
</tr>
<tr>
<td align="center">Alt+括号</td>
<td align="center">打印出整个括号</td>
</tr>
<tr>
<td align="center">Alt+↑或者Alt+↓</td>
<td align="center">关闭或者打开光标所在的一个折叠</td>
</tr>
<tr>
<td align="center">Alt+←或者Alt+→</td>
<td align="center">切换光标上一个下一个位置</td>
</tr>
<tr>
<td align="center">Alt+Home</td>
<td align="center">关闭所有折叠</td>
</tr>
<tr>
<td align="center">Alt+End</td>
<td align="center">关闭所有折叠</td>
</tr>
<tr>
<td align="center">Alt+F3</td>
<td align="center">打开搜索模式</td>
</tr>
<tr>
<td align="center">Alt+F5</td>
<td align="center">运行当前的文件</td>
</tr>
<tr>
<td align="center">Alt+1</td>
<td align="center">打开所有折叠</td>
</tr>
<tr>
<td align="center">Alt+2</td>
<td align="center">折叠所有classes</td>
</tr>
<tr>
<td align="center">Alt+3</td>
<td align="center">折叠所有函数和类</td>
</tr>
<tr>
<td align="center">Shift+Enter</td>
<td align="center">向上新建一行</td>
</tr>
<tr>
<td align="center">ctrl+”/“</td>
<td align="center">批量注释</td>
</tr>
<tr>
<td align="center">ctrl+shift+”/“</td>
<td align="center">批量取消注释</td>
</tr>
<tr>
<td align="center">ctrl+”&lt;”</td>
<td align="center">向前缩进</td>
</tr>
<tr>
<td align="center">ctrl+”&gt;”</td>
<td align="center">向后缩进</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>程序人生</category>
        <category>IDE</category>
      </categories>
      <tags>
        <tag>程序人生</tag>
        <tag>IDE</tag>
      </tags>
  </entry>
  <entry>
    <title>解决 cuDNN launch failure 错误</title>
    <url>/2020/05/09/deep_learning/keras/cudnn-launch-failure-fix/cudnn-launch-failure-fix/</url>
    <content><![CDATA[<blockquote>
<p>在神经网络模型推断过程中，报错<code>Internal: cuDNN launch failure : input shape ([1,3,2048,2048]) node bn_data/FusedBatchNorm</code>，本文记录解决方案。</p>
</blockquote>
<a id="more"></a>

<h2 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h2><blockquote>
<p>网上有怀疑该问题由BN层引起，去掉BN层可以解决问题<a href="https://blog.csdn.net/qq_36588760/article/details/105114185" target="_blank" rel="noopener">TensorFlow实战 InternalError: cuDNN launch failure : input shape（未解决求交流）</a>。</p>
<p>更换cudnn版本也无济于事。</p>
<p>事实上更可能是TensorFlow显存配置的问题（事实上也是缺少证据的，只是按照这个思路可以排除故障，因此该因素应该是最大似然的原因）</p>
</blockquote>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><blockquote>
<p>在代码中加入按需分配显存的配置：</p>
</blockquote>
<h3 id="方案1"><a href="#方案1" class="headerlink" title="方案1"></a>方案1</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">con &#x3D; tf.ConfigProto()</span><br><span class="line">con.gpu_options.allow_growth &#x3D; True</span><br><span class="line">keras.backend.tensorflow_backend.set_session(tf.Session(config&#x3D;con))</span><br></pre></td></tr></table></figure>

<h3 id="方案2"><a href="#方案2" class="headerlink" title="方案2"></a>方案2</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">os.environ[&#39;TF_FORCE_GPU_ALLOW_GROWTH&#39;] &#x3D; &#39;true&#39;</span><br></pre></td></tr></table></figure>

<p>原理相同，只是不一样的写法。</p>
]]></content>
      <categories>
        <category>深度学习</category>
        <category>Keras</category>
        <category>故障排除</category>
      </categories>
      <tags>
        <tag>故障排除</tag>
        <tag>深度学习</tag>
        <tag>Keras</tag>
      </tags>
  </entry>
  <entry>
    <title>Git - 使用教程</title>
    <url>/2020/05/06/git/git_usage/git-usage/</url>
    <content><![CDATA[<blockquote>
<p>本文介绍git的使用方法。</p>
</blockquote>
<a id="more"></a>

<h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><blockquote>
<p>译为<code>分布式版本控制系统</code>，是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理。</p>
</blockquote>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ul>
<li>Linux</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo apt install git-all</span></span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo dnf install git-all</span></span><br></pre></td></tr></table></figure>

<ul>
<li>Windows</li>
</ul>
<p>在  <a href="https://git-scm.com/download/win" target="_blank" rel="noopener">https://git-scm.com/download/win</a> 下载 gitbash 并安装即可</p>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><ul>
<li>Linux</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git --version</span></span><br><span class="line"></span><br><span class="line"><span class="meta">-&gt;</span><span class="bash"> git version 2.7.4 <span class="comment"># 出现版本表示安装成功</span></span></span><br></pre></td></tr></table></figure>

<ul>
<li>Windows</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git --version</span></span><br><span class="line"></span><br><span class="line"><span class="meta">-&gt;</span><span class="bash"> git version 2.25.0.windows.1 <span class="comment"># 出现版本表示安装成功</span></span></span><br></pre></td></tr></table></figure>

<h1 id="Repository"><a href="#Repository" class="headerlink" title="Repository"></a>Repository</h1><blockquote>
<p>译为<code>版本库</code>或<code>仓库</code>，是git的核心概念，用于存放代码与各个版本的补丁信息和用户配置信息等。</p>
</blockquote>
<h2 id="Git-配置"><a href="#Git-配置" class="headerlink" title="Git 配置"></a>Git 配置</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git config --global user.name <span class="string">"your name"</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git config --global user.email <span class="string">"your_email@youremail.com"</span></span></span><br></pre></td></tr></table></figure>

<h2 id="Git-信息流"><a href="#Git-信息流" class="headerlink" title="Git 信息流"></a>Git 信息流</h2><blockquote>
<p>初次接触git的人需要对git信息流有一个初步的理解，掌握脉络之后就明白各个命令实在干什么了，主要流程如下图：</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image/20200506231304.png" alt=""></p>
<h3 id="主要概念"><a href="#主要概念" class="headerlink" title="主要概念"></a>主要概念</h3><ul>
<li>workspace（工作区）：当前工作目录，它持有实际文件；</li>
<li>inedex（暂存区）：保存临时改动，workspace的文件改动后通过add命令添加到index；</li>
<li>repository（仓库）：git管理的本地仓库，index中确定需要的更改提交到仓库中，存放提交的修改与历史变动；</li>
<li>HEAD：指向最后一次提交的结果，可以理解为每一次commit提交代码都会在git中产生一个节点，每个节点代表一个代码仓库的历史状态，我们可以在各个节点之间反复横跳，但是一个时刻只能在一个节点上，而标记我们在那个节点的就是HEAD，很像C语言中的指针；</li>
<li>Remote（远程端）：git的真正妙用在于有统一的服务器管理协同工作的多个开发人员的代码，因此我们经常需要把本地仓库的代码推送（push）到远端，或把远端的代码拉取（fetch/pull）或复制（clone）到本地。</li>
</ul>
<h2 id="主要命令"><a href="#主要命令" class="headerlink" title="主要命令"></a>主要命令</h2><h3 id="仓库管理"><a href="#仓库管理" class="headerlink" title="仓库管理"></a>仓库管理</h3><h4 id="git-init"><a href="#git-init" class="headerlink" title="git init"></a>git init</h4><blockquote>
<p>Git 使用 <strong>git init</strong> 命令来初始化一个 Git 仓库，Git 的很多命令都需要在 Git 的仓库中运行，所以 <strong>git init</strong> 是使用 Git 的第一个命令。</p>
<p>在执行完成 <strong>git init</strong> 命令后，Git 仓库会生成一个 .git 目录，该目录包含了资源的所有元数据，其他的项目目录保持不变。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure>

<blockquote>
<p>在现有文件夹下使用该命令，会在当前文件夹创建 <code>.git</code>目录，该目录记录git相关管理信息。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git init test_dir</span><br></pre></td></tr></table></figure>

<blockquote>
<p>会在当前文件夹下创建<code>test_dir</code>文件夹，并在其中创建<code>.git</code>文件夹。</p>
</blockquote>
<h4 id="git-clone"><a href="#git-clone" class="headerlink" title="git clone"></a>git clone</h4><blockquote>
<p><strong>git clone</strong> 从现有 Git 仓库中拷贝项目。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone [-b branch] &lt;repo&gt; [directory]</span><br></pre></td></tr></table></figure>

<blockquote>
<p><code>repo</code>:  要克隆的远程仓库地址</p>
<p><code>branch</code>: 将要克隆的远程仓库分支名称，如果不设置该项参数则会克隆默认分支</p>
<p><code>directory</code>: 本地仓库文件夹名称，如果不设置该项参数则以仓库名称命名文件夹</p>
</blockquote>
<ul>
<li>协议配置</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone git@github.com:zywvvd&#x2F;test.git            --SSH协议</span><br><span class="line">git clone git:&#x2F;&#x2F;github.com&#x2F;zywvvd&#x2F;test.git          --GIT协议</span><br><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;zywvvd&#x2F;test.git        --HTTPS协议</span><br></pre></td></tr></table></figure>

<blockquote>
<p>git clone 时，可以所用不同的协议，包括 ssh, git, https 等，其中最常用的是 ssh，因为速度较快，还可以配置公钥免输入密码。</p>
</blockquote>
<h4 id="git-config"><a href="#git-config" class="headerlink" title="git config"></a>git config</h4><blockquote>
<p>查看和配置git相关信息。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --list</span><br></pre></td></tr></table></figure>

<blockquote>
<p>查看git配置信息</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git conifg -e</span><br></pre></td></tr></table></figure>

<blockquote>
<p>编辑配置文件（针对当前仓库）</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config -e --global</span><br></pre></td></tr></table></figure>

<blockquote>
<p>编辑配置文件（针对系统上所有仓库）</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;vvd&quot;</span><br><span class="line">git config --global user.email vvd@canglan.com</span><br></pre></td></tr></table></figure>

<blockquote>
<p>配置提交代码时的用户信息</p>
</blockquote>
<h3 id="本地信息流管理"><a href="#本地信息流管理" class="headerlink" title="本地信息流管理"></a>本地信息流管理</h3><blockquote>
<p>本地信息流主要涉及<strong>工作区(workspace)</strong>、<strong>暂存区(index)</strong>和<strong>版本库(repository)</strong></p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image/20200527000031.png" alt=""></p>
<h4 id="git-add"><a href="#git-add" class="headerlink" title="git add"></a>git add</h4><blockquote>
<p><strong>git add</strong> 命令可将该文件添加到暂存区。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git add [file1] [file2] ...</span><br></pre></td></tr></table></figure>

<blockquote>
<p>添加一个或多个文件到暂存区。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git add [dir]</span><br></pre></td></tr></table></figure>

<blockquote>
<p>添加指定目录到暂存区，包括子目录。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure>

<blockquote>
<p>他会监控工作区的状态树，使用它会把工作时的<strong>所有变化提交</strong>到暂存区，包括文件内容修改(modified)以及新文件(new)，<strong>但不包括被删除的文件</strong>。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git add -u</span><br></pre></td></tr></table></figure>

<blockquote>
<p>git add –update的缩写，他仅监控<strong>已经被add的文件</strong>（即tracked file），他会将被修改的文件提交到暂存区。add -u 不会提交新文件（untracked file）。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git add -A</span><br></pre></td></tr></table></figure>

<blockquote>
<p>git add –all的缩写，是上面两个功能的合集。</p>
</blockquote>
<p><strong>注</strong>：个人建议慎用 <code>git add -A</code>，需要明确地知道每步add操作提交了什么，切实管理自己的仓库。</p>
<h4 id="git-rm"><a href="#git-rm" class="headerlink" title="git rm"></a>git rm</h4><blockquote>
<p>git rm 命令用于从暂存区和工作区中删除文件（会删除本地文件）。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git rm &lt;file&gt;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>将文件<code>file</code>从暂存区和工作区中删除。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git rm -f &lt;file&gt;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>强制删除选项 <code>-f</code>。</p>
<p>用于删除之前修改过并且已经放到暂存区域的情况。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git rm --cached &lt;file&gt;</span><br></pre></td></tr></table></figure>

<blockquote>
<p><code>--cached</code> 选项，可以把文件从暂存区域移除，但仍然保留在当前工作目录中，即从跟踪清单中删除。</p>
</blockquote>
<h4 id="git-commit"><a href="#git-commit" class="headerlink" title="git commit"></a>git commit</h4><blockquote>
<p>将暂存区中的内容添加到本地仓库中。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git commit -m &lt;message&gt;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>将暂存区的内容提交到本地仓库；</p>
<p>此过程中必须附加<code>message</code>信息，提交后会在git中生成唯一的名称记录这一提交，可以在<code>git log</code>命令中查看。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git commit [file1] [file2] ... -m &lt;message&gt;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>可以对部分文件进行提交。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git commit -a</span><br></pre></td></tr></table></figure>

<blockquote>
<p><code>-a</code> 参数设置修改文件后不需要执行 git add 命令，直接来提交。</p>
</blockquote>
<p><strong>注</strong>：首次提交必须设置用户信息的名称和邮箱。</p>
<h4 id="git-checkout"><a href="#git-checkout" class="headerlink" title="git checkout"></a>git checkout</h4><blockquote>
<p>此命令用来放弃掉所有还没有提交（就是 git add 或 git commit）的修改：内容修改与整个文件删除。但是此命令不会删除掉刚新建的文件。因为刚新建的文件还没已有加入到 git 的管理系统中。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git checkout -- &lt;file&gt;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>将缓存区的文件覆盖到工作区中，在文件名与分支名没有歧义时可以省略<code>--</code>。</p>
<p>如果暂存区有该文件的提交，则从暂存区中抓取文件覆盖当前工作区的文件，否则从最近一次commit中抓取该文件并覆盖当前文件。</p>
<p>总之就是把该文件最近一次 add 或 commit 的副本抓来覆盖了工作区的文件。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git checkout .</span><br></pre></td></tr></table></figure>


<blockquote>
<p>这个操作很危险，会清除工作区中未添加到暂存区的改动，放弃所有的工作区文件修改。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git checkout HEAD &lt;file&gt;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>用 HEAD 指向的 master 分支中的文件替换暂存区和以及工作区中的文件。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git checkout HEAD .</span><br></pre></td></tr></table></figure>

<blockquote>
<p>用 HEAD 指向的 master 分支中的所有文件替换暂存区和以及工作区中的文件。</p>
</blockquote>
<p>注：<code>checkout HEAD</code>是极具危险性的命令，它不但会清除工作区中未提交的改动，也会清除暂存区中未提交的改动。</p>
<h4 id="git-reset"><a href="#git-reset" class="headerlink" title="git reset"></a>git reset</h4><blockquote>
<p>git reset 命令用于回退版本，可以指定退回某一次提交的版本。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git reset [--soft | --mixed | --hard] [HEAD] [file]</span><br></pre></td></tr></table></figure>

<blockquote>
<ul>
<li><p><code>--mixed</code> 为默认，可以不用带该参数，用于重置暂存区的文件与上一次的提交(commit)保持一致，工作区文件内容保持不变。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git reset HEAD  # 取消之前 git add 添加过的缓存。</span><br></pre></td></tr></table></figure>

<p>暂存区的目录树会被重写，被 master 分支指向的目录树所替换，但是工作区不受影响。</p>
<p>实例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git reset HEAD^            # 回退所有内容到上一个版本  </span><br><span class="line">$ git reset HEAD^ hello.php  # 回退 hello.php 文件的版本到上一个版本  </span><br><span class="line">$ git  reset  052e           # 回退到指定版本</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>--soft</code> 参数用于回退到某个版本：</p>
<p>实例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git reset --soft HEAD~3  #  回退上上上一个版本</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>--hard</code> 参数撤销工作区中所有未提交的修改内容，将暂存区与工作区都回到上一次版本，并删除之前的所有信息提交：</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git reset --hard HEAD</span><br></pre></td></tr></table></figure>

<p>  实例：</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git reset –hard HEAD~3  # 回退上上上一个版本  </span><br><span class="line">$ git reset –hard bae128  # 回退到某个版本回退点之前的所有信息。 </span><br><span class="line">$ git reset --hard origin&#x2F;master    # 将本地的状态回退到和远程的一样 </span><br></pre></td></tr></table></figure>

<p>  <strong>注：</strong>谨慎使用 –hard 参数，它会删除回退点之前的所有信息。</p>
</li>
<li><p>HEAD 说明</p>
<ul>
<li>HEAD 表示当前版本</li>
<li>HEAD^ 上一个版本</li>
<li>HEAD^^ 上上一个版本</li>
<li>HEAD^^^ 上上上一个版本</li>
<li>以此类推…</li>
</ul>
<p>可以使用 ～数字表示</p>
<ul>
<li>HEAD~0 表示当前版本</li>
<li>HEAD~1 上一个版本</li>
<li>HEAD^2 上上一个版本</li>
<li>HEAD^3 上上上一个版本</li>
<li>以此类推…</li>
</ul>
</li>
</ul>
</blockquote>
<h4 id="git-diff"><a href="#git-diff" class="headerlink" title="git diff"></a>git diff</h4><blockquote>
<p>比较文件在暂存区和工作区的差异，即显示已写入暂存区和已经被修改但尚未写入暂存区文件对区别。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git diff [file]</span><br></pre></td></tr></table></figure>

<blockquote>
<p>显示暂存区和工作区的差异。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git diff --cached [file]</span><br><span class="line">或</span><br><span class="line">git diff --staged [file]</span><br></pre></td></tr></table></figure>

<blockquote>
<p>显示暂存区和上一次提交(commit)的差异。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git diff [first-branch]...[second-branch]</span><br></pre></td></tr></table></figure>

<blockquote>
<p>显示两次提交之间的差异。</p>
</blockquote>
<h4 id="git-mv"><a href="#git-mv" class="headerlink" title="git mv"></a>git mv</h4><blockquote>
<p>用于移动或重命名一个文件、目录或软连接。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git mv [file] [newfile] [-f]</span><br></pre></td></tr></table></figure>

<blockquote>
<p>在git中移动文件</p>
<p><code>-f</code>: 强制文件移动(如果已经存在该文件则会覆盖)</p>
</blockquote>
<h4 id="git-status"><a href="#git-status" class="headerlink" title="git status"></a>git status</h4><blockquote>
<p>查看仓库当前的状态，显示有变更的文件，用于查看在你上次提交之后是否有对文件进行再次修改。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure>

<blockquote>
<p>详细显示工作区和暂存区的修改、提交状态。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">On branch master</span><br><span class="line">On branch master</span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use &quot;git restore --staged &lt;file&gt;...&quot; to unstage)</span><br><span class="line">        new file:   B</span><br><span class="line">        new file:   C</span><br><span class="line">        new file:   D</span><br><span class="line"></span><br><span class="line">Changes not staged for commit:</span><br><span class="line">  (use &quot;git add&#x2F;rm &lt;file&gt;...&quot; to update what will be committed)</span><br><span class="line">  (use &quot;git restore &lt;file&gt;...&quot; to discard changes in working directory)</span><br><span class="line">        deleted:    C</span><br><span class="line">        modified:   D</span><br><span class="line">        modified:   E</span><br><span class="line"></span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use &quot;git restore --staged &lt;file&gt;...&quot; to unstage)</span><br><span class="line">        renamed:    D -&gt; F</span><br><span class="line"></span><br><span class="line">Untracked files:</span><br><span class="line">  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)</span><br><span class="line">        A</span><br></pre></td></tr></table></figure>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git status -s</span><br></pre></td></tr></table></figure>

<blockquote>
<p>简略输出状态结果。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">A  B</span><br><span class="line">AD C</span><br><span class="line">AM D</span><br><span class="line"> M E</span><br><span class="line"> D a.txt</span><br><span class="line">R  D -&gt; F</span><br><span class="line">?? A</span><br></pre></td></tr></table></figure>

<ul>
<li>符号说明<ul>
<li><code>A(Added)</code>:  新添加到暂存区的文件</li>
<li><code>M(Modified)</code>:  已经提交过并被修改的文件</li>
<li><code>D(Deleted)</code>:  已经提交过并被直接删除的文件</li>
<li><code>R(Renamed)</code>: 重命名的文件</li>
<li><code>AD</code>: 已经提交到暂存区后被删除</li>
<li><code>AM</code>: 已经提交到暂存区后被修改</li>
<li><code>??(Untracked)</code>: 未追踪的文件</li>
</ul>
</li>
</ul>
</blockquote>
<h3 id="历史记录管理"><a href="#历史记录管理" class="headerlink" title="历史记录管理"></a>历史记录管理</h3><h4 id="git-log"><a href="#git-log" class="headerlink" title="git log"></a>git log</h4><blockquote>
<p>查看历史提交记录。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git log [--oneline]</span><br></pre></td></tr></table></figure>

<blockquote>
<p>显示提交记录</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git log</span><br><span class="line">commit 5ac3ea4f50f0f558d8ba36ef7b713054c4cfee69 (HEAD -&gt; master)</span><br><span class="line">Author: vvd-from-xiaobing&#39;s-notebook &lt;zywvvd@mail.ustc.edu.cn&gt;</span><br><span class="line">Date:   Sat Aug 29 16:11:56 2020 +0800</span><br><span class="line"></span><br><span class="line">    save</span><br><span class="line"></span><br><span class="line">commit 50f554063e4ca3502dfc318817522aee88863d62</span><br><span class="line">Author: vvd-from-xiaobing&#39;s-notebook &lt;zywvvd@mail.ustc.edu.cn&gt;</span><br><span class="line">Date:   Sat Aug 29 15:56:13 2020 +0800</span><br><span class="line"></span><br><span class="line">    add-e</span><br><span class="line"></span><br><span class="line">commit 3de3b277020322cd8f6991987fe38158d3fcdfea</span><br><span class="line">Author: vvd-from-xiaobing&#39;s-notebook &lt;zywvvd@mail.ustc.edu.cn&gt;</span><br><span class="line">Date:   Sat Aug 29 15:36:23 2020 +0800</span><br><span class="line"></span><br><span class="line">    save</span><br></pre></td></tr></table></figure>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git log [--oneline]</span><br></pre></td></tr></table></figure>

<blockquote>
<p><code>--oneline</code>: 简略显示提交记录日志</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git log --oneline</span><br><span class="line">5ac3ea4 (HEAD -&gt; master) save</span><br><span class="line">50f5540 add-e</span><br><span class="line">3de3b27 save</span><br><span class="line">9313997 save</span><br></pre></td></tr></table></figure>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git log [--graph] [--reverse]</span><br></pre></td></tr></table></figure>

<blockquote>
<p><code>--graph</code>:  查看历史中什么时候出现了分支、合并；</p>
<p><code>--reverse</code>: 正常上方显示最新的提交信息，该参数可以反向输出信息；</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git log [--author] [--since] [--before] [--until] [--after]</span><br></pre></td></tr></table></figure>

<blockquote>
<p><code>--author</code>: 只想查找指定用户的提交日志；</p>
<p><code>--since</code> <code>--until</code> <code>--until</code> <code>--after</code>: 按照时间过滤信息</p>
<p>实例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git log --oneline --before&#x3D;&#123;3.weeks.ago&#125; --after&#x3D;&#123;2010-04-18&#125; --no-merges</span><br></pre></td></tr></table></figure>
</blockquote>
<h4 id="git-blame"><a href="#git-blame" class="headerlink" title="git blame"></a>git blame</h4><blockquote>
<p>查看指定文件的修改记录。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git blame &lt;file&gt;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>查看 <code>file</code>文件的修改记录。</p>
</blockquote>
<h3 id="远程信息流管理"><a href="#远程信息流管理" class="headerlink" title="远程信息流管理"></a>远程信息流管理</h3><h4 id="git-remote"><a href="#git-remote" class="headerlink" title="git remote"></a>git remote</h4><blockquote>
<p>用于在远程仓库的操作。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git remote -v</span><br></pre></td></tr></table></figure>

<blockquote>
<p>显示所有远程仓库。</p>
<p>实例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git clone git@github.com:zywvvd&#x2F;Python_Practise.git</span><br><span class="line">$ cd Python_Practise</span><br><span class="line">$ git remote -v</span><br><span class="line">origin  git@github.com:zywvvd&#x2F;Python_Practise.git (fetch)</span><br><span class="line">origin  git@github.com:zywvvd&#x2F;Python_Practise.git (push)</span><br></pre></td></tr></table></figure>

<p><strong>origin</strong> 为远程地址的别名。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git remote show [remote]</span><br></pre></td></tr></table></figure>

<blockquote>
<p>显示某个远程仓库的信息。</p>
<p>实例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git remote show git@github.com:zywvvd&#x2F;Python_Practise.git</span><br><span class="line">* remote git@github.com:zywvvd&#x2F;Python_Practise.git</span><br><span class="line">  Fetch URL: git@github.com:zywvvd&#x2F;Python_Practise.git</span><br><span class="line">  Push  URL: git@github.com:zywvvd&#x2F;Python_Practise.git</span><br><span class="line">  HEAD branch: master</span><br><span class="line">  Local ref configured for &#39;git push&#39;:</span><br><span class="line">    master pushes to master (up to date)</span><br></pre></td></tr></table></figure>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git remote add [shortname] [url]</span><br></pre></td></tr></table></figure>

<blockquote>
<p>添加远程版本库。</p>
<p>实例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 提交到 Github</span><br><span class="line">$ git remote add origin git@github.com:zywvvd&#x2F;Python_Practise.git</span><br><span class="line">$ git push -u origin master</span><br></pre></td></tr></table></figure>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git remote rm name</span><br></pre></td></tr></table></figure>

<blockquote>
<p>删除远程仓库。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git remote rename old_name new_name</span><br></pre></td></tr></table></figure>

<blockquote>
<p>修改仓库名。</p>
</blockquote>
<h4 id="git-fetch"><a href="#git-fetch" class="headerlink" title="git fetch"></a>git fetch</h4><blockquote>
<p>用于从远程获取代码库。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git fetch &lt;remote&gt;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>获取远程<code>remote</code>仓库的信息，取回到本地。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git fetch &lt;remote&gt; &lt;branch&gt;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>取回特定分支的更新，可以指定分支名。</p>
<p>实例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git fetch origin master</span><br></pre></td></tr></table></figure>
</blockquote>
<h4 id="git-pull"><a href="#git-pull" class="headerlink" title="git pull"></a>git pull</h4><blockquote>
<p>从一个仓库或者本地的分支拉取并且整合代码。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git pull [&lt;options&gt;] [&lt;repository&gt; [&lt;refspec&gt;]]</span><br></pre></td></tr></table></figure>

<blockquote>
<p><code>git pull</code>相当于 <code>git fetch</code> 跟着一个 <code>git merge FETCH_HEAD</code>。<code>&lt;repository&gt;</code>是仓库的名字，<code>&lt;refspec&gt;</code> 是分支的名字。如果都不写，会有一个默认值。</p>
<p>实例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git pull origin master</span><br></pre></td></tr></table></figure>

<p>拉取远程服务器<code>origin</code>的<code>master</code>分支。</p>
</blockquote>
<p>注：git pull = git fetch + git merge。</p>
<h4 id="git-push"><a href="#git-push" class="headerlink" title="git push"></a>git push</h4><blockquote>
<p>用于将本地分支的更新，推送到远程主机。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git push &lt;远程主机名&gt; &lt;本地分支名&gt;:&lt;远程分支名&gt;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>分支推送顺序的写法是&lt;来源地&gt;:&lt;目的地&gt;，所以git pull是&lt;远程分支&gt;:&lt;本地分支&gt;，而git push是&lt;本地分支&gt;:&lt;远程分支&gt;。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git push origin master:master</span><br></pre></td></tr></table></figure>

<blockquote>
<p>将本地的master分支推送到origin主机的master分支，如果后者不存在，则会被新建。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git push origin master</span><br></pre></td></tr></table></figure>

<blockquote>
<p>如果省略远程分支名，则表示将本地分支推送与之存在”追踪关系”的远程分支(通常两者同名)，如果该远程分支不存在，则会被新建。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git push origin</span><br></pre></td></tr></table></figure>

<blockquote>
<p>如果当前分支与远程分支之间存在追踪关系，则本地分支和远程分支都可以省略。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git push</span><br></pre></td></tr></table></figure>

<blockquote>
<p>如果当前分支只有一个追踪分支，那么主机名都可以省略。</p>
</blockquote>
<p>注：不带任何参数的git push，默认只推送当前分支，这叫做simple方式。此外，还有一种matching方式，会推送所有有对应的远程分支的本地分支。Git 2.0版本之前，默认采用matching方法，现在改为默认采用simple方式。如果要修改这个设置，可以采用git config命令。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global push.default matching</span><br><span class="line">或</span><br><span class="line">git config --global push.default simple</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure>

<blockquote>
<p>如果当前分支与多个主机存在追踪关系，则可以使用-u选项指定一个默认主机，这样后面就可以不加任何参数使用git push。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git push --all origin</span><br></pre></td></tr></table></figure>

<blockquote>
<p>将所有本地分支都推送到origin主机。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git push origin :master</span><br><span class="line">或</span><br><span class="line">git push origin --delete master</span><br></pre></td></tr></table></figure>

<blockquote>
<p>如果省略本地分支名，则表示删除指定的远程分支，因为这等同于推送一个空的本地分支到远程分支。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git push --force origin</span><br></pre></td></tr></table></figure>

<blockquote>
<p>如果远程主机的版本比本地版本更新，推送时Git会报错，要求先在本地做git pull合并差异，然后再推送到远程主机。这时，如果你一定要推送，可以使用–force选项。</p>
<p>上面命令使用–force选项，结果导致在远程主机产生一个”非直进式”的合并(non-fast-forward merge)。除非你很确定要这样做，否则应该尽量避免使用–force选项。</p>
</blockquote>
<h3 id="分支管理"><a href="#分支管理" class="headerlink" title="分支管理"></a>分支管理</h3><h4 id="git-branch"><a href="#git-branch" class="headerlink" title="git branch"></a>git branch</h4><p>git branch //查看本地所有分支  git branch -r //查看远程所有分支 git branch -a //查看本地和远程的所有分支 git branch <branchname> //新建分支 git branch -d <branchname> //删除本地分支 git branch -d -r <branchname> //删除远程分支，删除后还需推送到服务器 git push origin:<branchname>  //删除后推送至服务器 git branch -m <oldbranch> <newbranch> //重命名本地分支</p>
<h4 id="git-checkout-1"><a href="#git-checkout-1" class="headerlink" title="git checkout"></a>git checkout</h4><h4 id="git-merge"><a href="#git-merge" class="headerlink" title="git merge"></a>git merge</h4><h4 id="git-rebase"><a href="#git-rebase" class="headerlink" title="git rebase"></a>git rebase</h4><h3 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h3><h4 id="git-tag"><a href="#git-tag" class="headerlink" title="git tag"></a>git tag</h4><h3 id="进阶命令"><a href="#进阶命令" class="headerlink" title="进阶命令"></a>进阶命令</h3><h4 id="git-submodule"><a href="#git-submodule" class="headerlink" title="git submodule"></a>git submodule</h4><h4 id="自定义配置"><a href="#自定义配置" class="headerlink" title="自定义配置"></a>自定义配置</h4><h3 id="代码回退总结"><a href="#代码回退总结" class="headerlink" title="代码回退总结"></a>代码回退总结</h3><ul>
<li>未使用 git add 缓存代码时</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git checkout -- [file]</span><br></pre></td></tr></table></figure>

<blockquote>
<p>将缓存区的文件覆盖到工作区中，在文件名与分支名没有歧义时可以省略<code>--</code>。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git checkout .</span><br></pre></td></tr></table></figure>


<blockquote>
<p>放弃所有的工作区文件修改。</p>
</blockquote>
<ul>
<li>使用 git add 缓存代码后</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git reset HEAD filepathname</span><br></pre></td></tr></table></figure>

<blockquote>
<p>对于已经提交到缓存区的修改，此命令用来清除 git 对于文件修改的缓存。相当于撤销 git add 命令所在的工作，在使用本命令后，本地的修改并不会消失。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git reset HEAD .</span><br></pre></td></tr></table></figure>

<blockquote>
<p>放弃所有的缓存。</p>
</blockquote>
<ul>
<li>使用 git commit 提交了代码后</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git reset --hard HEAD^</span><br></pre></td></tr></table></figure>

<blockquote>
<p>回退到上一次commit的状态。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git reset --hard commit-id</span><br></pre></td></tr></table></figure>

<blockquote>
<p>回退到任意版本。</p>
</blockquote>
<h4 id="git-选项"><a href="#git-选项" class="headerlink" title="git 选项"></a>git 选项</h4><p>-d –delete：删除 -D –delete –force的快捷键 -f –force：强制 -m –move：移动或重命名 -M –move –force的快捷键 -r –remote：远程 -a –all：所有</p>
<h3 id="git-工作原理"><a href="#git-工作原理" class="headerlink" title="git 工作原理"></a>git 工作原理</h3><h3 id="参考资料："><a href="#参考资料：" class="headerlink" title="参考资料："></a>参考资料：</h3><ul>
<li><a href="https://www.runoob.com/git/git-basic-operations.html" target="_blank" rel="noopener">https://www.runoob.com/git/git-basic-operations.html</a></li>
<li><a href="https://www.jianshu.com/p/37f3a7e4a193" target="_blank" rel="noopener">https://www.jianshu.com/p/37f3a7e4a193</a></li>
<li><a href="https://blog.csdn.net/chaiyu2002/article/details/82120256" target="_blank" rel="noopener">https://blog.csdn.net/chaiyu2002/article/details/82120256</a></li>
<li><a href="https://www.cnblogs.com/djiankuo/p/6492533.html" target="_blank" rel="noopener">https://www.cnblogs.com/djiankuo/p/6492533.html</a></li>
</ul>
]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>机器学习-基础知识- 目标检测相关概念解释</title>
    <url>/2020/05/05/machine_learning/basic_knowledge/key_words/key-words-in-machine-lerning/</url>
    <content><![CDATA[<blockquote>
<p>本文介绍机器学习目标检测相关各种基础概念的介绍。</p>
</blockquote>
<a id="more"></a>

<h2 id="目标检测"><a href="#目标检测" class="headerlink" title="目标检测"></a>目标检测</h2><blockquote>
<p>目标检测，也叫目标提取，是一种基于目标几何和统计特征的图像分割，它将目标的分割和识别合二为一，其准确性和实时性是整个系统的一项重要能力。</p>
<p>目标检测是计算机视觉和数字图像处理的一个热门方向，广泛应用于机器人导航、智能视频监控、工业检测、航空航天等诸多领域，通过计算机视觉减少对人力资本的消耗，具有重要的现实意义。因此，目标检测也就成为了近年来理论和应用的研究热点，它是图像处理和计算机视觉学科的重要分支，也是智能监控系统的核心部分，同时目标检测也是泛身份识别领域的一个基础性的算法，对后续的人脸识别、步态识别、人群计数、实例分割等任务起着至关重要的作用。由于深度学习的广泛运用，目标检测算法得到了较为快速的发展。</p>
</blockquote>
<h2 id="Ground-Truth"><a href="#Ground-Truth" class="headerlink" title="Ground Truth"></a>Ground Truth</h2><blockquote>
<p>Ground Truth(GT) 代表通过人工等方式为数据赋予的真实标签，用于训练模型与验证、测试模型性能。</p>
</blockquote>
<h2 id="Bounding-Box-bbox"><a href="#Bounding-Box-bbox" class="headerlink" title="Bounding Box (bbox)"></a>Bounding Box (bbox)</h2><blockquote>
<p>目标检测需要定位图像中的目标位置和类别，反映在数据上的形式就是使用矩形框框出目标区域，并标记类别标签，这就是目标检测的Bounding Box ，标注与算法输出都使用该形式，以便机器学习并对比实验结果。</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image/20200505191519.png" alt=""></p>
<h2 id="ROI-region-of-interest"><a href="#ROI-region-of-interest" class="headerlink" title="ROI (region of interest)"></a>ROI (region of interest)</h2><blockquote>
<p>感兴趣区域，与bbox概念类似，定义图像中我们感兴趣的部分，交给机器进行学习。</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image/20200505192257.png" alt=""></p>
<h2 id="IoU-Intersection-over-Union"><a href="#IoU-Intersection-over-Union" class="headerlink" title="IoU (Intersection over Union)"></a>IoU (Intersection over Union)</h2><blockquote>
<p>交集并集比（交并比），在已有的数据库中，我们会用某种方法 标注数据，赋予数据中目标区域与类别，也就是标注ROI，检测算法学习数据后得到检测模型，模型作用于某个图像输出检测结果bbox。</p>
<p>IoU就是用于评价检测模型输出结果的，计算方法就是输出bbox与标记bbox交集面积与并集面积的比值。比值越高表明结果越准，反之亦然。</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image/20200505192424.png" alt=""></p>
<h2 id="confidence"><a href="#confidence" class="headerlink" title="confidence"></a>confidence</h2><blockquote>
<p>confidence（置信度）表明检测模型对于自己检测出目标的置信程度，值越大表明模型更加笃定自己检测结果的准确性。</p>
</blockquote>
<h2 id="检测判定"><a href="#检测判定" class="headerlink" title="检测判定"></a>检测判定</h2><blockquote>
<p>在分类任务中，分类模型输出的结果作为其分类的类别，将该输出与真实类别标签比较即可确定此次预测是否正确，相应地得可以将此次预测划定到TP、FP、TN、FN中。</p>
<p>而目标检测任务中的输出结果不同于分类，该结果 包含了图像中某位置属于某类别的信息，而且很可能包含多个目标，而事实上，输出结果与标注标签完全一致是不现实的，那么如何判定检测结果是否正确呢。</p>
<p>在目标检测中判定结果正确需要预先设定IoU阈值，然后逐个类别判定检测框：</p>
<ul>
<li>遍历每个类别</li>
<li>将该类别的预测框按confidence降序排列</li>
<li>对于每个预测bbox，找出与其有最大IoU的gt_bbox</li>
<li>如果该gt_bbox之前没有被分配且IoU大于给定的阈值（比如0.5），那将该gt_bbox分配该给预测bbox，设置该预测bbox为TP；否则设置该预测bbox为FP</li>
<li>没有被正确预测到的gt_bbox设置为FN</li>
<li>在检测结果中没有显式的TN</li>
</ul>
</blockquote>
<h2 id="性能评估"><a href="#性能评估" class="headerlink" title="性能评估"></a>性能评估</h2><p>判定出结果后就可以用分类的评价体系计算性能指标了：</p>
<p><a href="https://www.zywvvd.com/2020/02/27/machine_learning/basic_knowledge/performance_evaluation/Performance-evaluation/">机器学习-基础知识 - Precision, Recall, Sensitivity, Specificity, Accuracy, FNR, FPR, TPR, TNR, F1 Score, Balanced F Score</a></p>
<p>也可以绘制ROC、PR曲线：</p>
<p><a href="https://www.zywvvd.com/2020/02/27/machine_learning/basic_knowledge/PR_and_ROC/PR-and-ROC/">机器学习-基础知识 - PR、ROC曲线与AUC</a></p>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>机器学习</tag>
      </tags>
  </entry>
  <entry>
    <title>Next -24- 添加相册系列 -4- 将本地相册信息部署到hexo</title>
    <url>/2020/04/28/next/24_build_online_albums/build-online-albums/</url>
    <content><![CDATA[<blockquote>
<p> 在之前基础工作完成后，来到了距离我们相册最接近的一步，本文介绍上线相册的一种思路，供大家参考。</p>
</blockquote>
<a id="more"></a>

<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul>
<li><a href="https://www.zywvvd.com/2020/03/29/next/21_add_photos/add-photos/">Next -21- 添加相册系列 - 1- 框架设置</a></li>
<li><a href="https://www.zywvvd.com/2020/03/31/next/22_qiniuyun_qshell/qiniuyun-qshell/">Next -22- 添加相册系列 -2- 使用七牛云qshell同步图像目录</a></li>
<li><a href="https://www.zywvvd.com/2020/04/22/next/23_get_image_info/get-image-info/">Next -23- 添加相册系列 -3- 获取图像信息、保存为json文件并上传图像</a></li>
</ul>
<h2 id="上线思路"><a href="#上线思路" class="headerlink" title="上线思路"></a>上线思路</h2><blockquote>
<p>现在我们已经有了基础的photos框架，图像文件夹已经整理完毕，提取了信息放在了json文件，并且将图像上传到了七牛云图床，在hexo source文件夹内创建了相册对应index.md 和json文件。仅需要将这些串联起来，部署到hexo即可。</p>
</blockquote>
<ul>
<li>在next主题中存在为二级文件夹配置内容的文件，修改该文件，在具有二级文件夹结构的index.html中加入特定类</li>
<li>建立js文件向类中添加内容</li>
<li>内容为读取json文件得到的相册信息，这样便建立起了逐个页面的相册</li>
<li>同理在photos中加入特定类</li>
<li>建立js文件读取相册json文件并建立链接目录，即完成了整个相册的基础框架</li>
<li>之后的优化、美化便水到渠成了</li>
</ul>
<h2 id="建立相册"><a href="#建立相册" class="headerlink" title="建立相册"></a>建立相册</h2><h3 id="向二级目录的index-html加入类"><a href="#向二级目录的index-html加入类" class="headerlink" title="向二级目录的index.html加入类"></a>向二级目录的index.html加入类</h3><blockquote>
<p>在 Hexo/themes/next/layout/_partials/page文件夹中 修改page-header.swig文件，加入类别为<code>album_image_grid</code>的div，并引用js文件，此时对应的二级文件夹内的index.html中便多了一个空div</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;header class&#x3D;&quot;post-header&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#123;%- if theme.seo %&#125;h2&#123;% else %&#125;h1&#123;%- endif %&#125; class&#x3D;&quot;post-title&quot; itemprop&#x3D;&quot;name headline&quot;&gt;</span><br><span class="line">  &#123;&#123;- page.title &#125;&#125;</span><br><span class="line">  &#123;&#123;- post_edit(page.source) &#125;&#125;</span><br><span class="line">&lt;&#x2F;&#123;%- if theme.seo %&#125;h2&#123;% else %&#125;h1&#123;%- endif %&#125;&gt;</span><br><span class="line"></span><br><span class="line">&lt;div class&#x3D;&quot;post-meta&quot;&gt;</span><br><span class="line">  &#123;%- if page.description %&#125;</span><br><span class="line">    &lt;div class&#x3D;&quot;post-description&quot;&gt;&#123;&#123; page.description &#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">  &#123;%- endif %&#125;</span><br><span class="line"></span><br><span class="line">	&#123;%- if page.type &#x3D;&#x3D; &#39;photography&#39; %&#125;</span><br><span class="line">	  </span><br><span class="line">	  &lt;div class&#x3D;&quot;album_image_grid&quot;&gt;</span><br><span class="line"></span><br><span class="line">	  &lt;&#x2F;div&gt;</span><br><span class="line">	  &lt;script src&#x3D;&quot;&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;jquery@3&#x2F;dist&#x2F;jquery.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">	  &lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#x2F;photos&#x2F;album.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">	&#123;%- endif %&#125;</span><br><span class="line">  &#123;% include &#39;_partials&#x2F;page&#x2F;breadcrumb.swig&#39; %&#125;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;header&gt;</span><br></pre></td></tr></table></figure>

<p><img src="https://photos.zywvvd.com/image/20200428235933.png" alt=""></p>
<h3 id="建立album-js文件"><a href="#建立album-js文件" class="headerlink" title="建立album.js文件"></a>建立album.js文件</h3><blockquote>
<p>在Hexo/themes/next/source/photos文件夹内建立相册js文件 <code>album.js</code>，写入如下内容：</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">'album js Hello World'</span>)</span><br><span class="line"></span><br><span class="line">photo =&#123;</span><br><span class="line">    page: <span class="number">1</span>,</span><br><span class="line">    offset: <span class="number">20</span>,</span><br><span class="line">    init: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> that = <span class="keyword">this</span>;</span><br><span class="line">        $.getJSON(<span class="string">"readme.json"</span>, <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">            that.render(that.page, data);</span><br><span class="line">            <span class="comment">//that.scroll(data);</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    render: <span class="function"><span class="keyword">function</span> (<span class="params">page, data</span>) </span>&#123;</span><br><span class="line">    	<span class="keyword">var</span> year = data[<span class="string">"time"</span>][<span class="string">"year"</span>]</span><br><span class="line">    	<span class="keyword">var</span> month = data[<span class="string">"time"</span>][<span class="string">"month"</span>]</span><br><span class="line">    	<span class="keyword">var</span> day = data[<span class="string">"time"</span>][<span class="string">"day"</span>]</span><br><span class="line">    	<span class="keyword">var</span> type = data[<span class="string">"type"</span>]</span><br><span class="line">    	<span class="keyword">var</span> model = data[<span class="string">"model"</span>]</span><br><span class="line">    	<span class="keyword">var</span> city = data[<span class="string">"position"</span>][<span class="string">'city'</span>]</span><br><span class="line">    	<span class="keyword">var</span> street = data[<span class="string">"position"</span>][<span class="string">'street'</span>]</span><br><span class="line">    	<span class="keyword">var</span> title = data[<span class="string">"title"</span>]</span><br><span class="line">    	<span class="keyword">var</span> balabala = data[<span class="string">"balabala"</span>]</span><br><span class="line"></span><br><span class="line">    	<span class="keyword">var</span> image_info_list = data[<span class="string">"image_info"</span>]</span><br><span class="line">    	<span class="built_in">console</span>.log(image_info_list[<span class="number">0</span>][<span class="string">"Image_Model"</span>])</span><br><span class="line"></span><br><span class="line">    	<span class="built_in">console</span>.log(year)</span><br><span class="line">        <span class="comment">//var begin = (page - 1) * this.offset;</span></span><br><span class="line">        <span class="comment">//var end = page * this.offset;</span></span><br><span class="line">        <span class="comment">//if (begin &gt;= data.length) return;</span></span><br><span class="line">        <span class="keyword">var</span> html, imgNameWithPattern, imgName, imageSize, imageX, imageY, li = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">		$(<span class="string">".album_image_grid"</span>).append(<span class="string">'&lt;br&gt;'</span>);</span><br><span class="line">		$(<span class="string">".album_image_grid"</span>).append(<span class="string">'&lt;br&gt;'</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; image_info_list.length ; i++) &#123;</span><br><span class="line">        	sub_image = image_info_list[i]</span><br><span class="line">        	nbsp = <span class="string">"&amp;nbsp&amp;nbsp&amp;nbsp&amp;nbsp&amp;nbsp&amp;nbsp&amp;nbsp&amp;nbsp"</span></span><br><span class="line">        	href_str = <span class="string">""</span></span><br><span class="line"></span><br><span class="line">        	image_model = sub_image[<span class="string">"Image_Model"</span>] <span class="comment">//相机型号</span></span><br><span class="line">        	<span class="keyword">if</span> (image_model!=<span class="string">""</span>)</span><br><span class="line">        	&#123;</span><br><span class="line">        		href_str = href_str+<span class="string">'相机：'</span>+image_model+nbsp</span><br><span class="line">        	&#125;</span><br><span class="line"></span><br><span class="line">        	EXIF_fnumber = sub_image[<span class="string">"EXIF_FNumber"</span>] <span class="comment">//光圈	</span></span><br><span class="line">        	<span class="keyword">if</span> (EXIF_fnumber!=<span class="string">""</span>)</span><br><span class="line">        	&#123;</span><br><span class="line">        		href_str = href_str+<span class="string">' 光圈：'</span> +EXIF_fnumber +nbsp</span><br><span class="line">        	&#125;</span><br><span class="line"></span><br><span class="line">        	EXIF_FocalLength = sub_image[<span class="string">"EXIF_FocalLength"</span>] <span class="comment">//焦距</span></span><br><span class="line">        	<span class="keyword">if</span> (EXIF_FocalLength!=<span class="string">""</span>)</span><br><span class="line">        	&#123;</span><br><span class="line">        		href_str = href_str+<span class="string">' 焦距：'</span> +EXIF_FocalLength +nbsp</span><br><span class="line">        	&#125;</span><br><span class="line"></span><br><span class="line">        	EXIF_exposureMode = sub_image[<span class="string">"EXIF_ExposureMode"</span>] <span class="comment">//曝光模式</span></span><br><span class="line">        	<span class="keyword">if</span> (EXIF_exposureMode!=<span class="string">""</span>)</span><br><span class="line">        	&#123;</span><br><span class="line">        		href_str = href_str+<span class="string">' 曝光模式：'</span> +EXIF_exposureMode +nbsp</span><br><span class="line">        	&#125;		</span><br><span class="line"></span><br><span class="line">        	EXIF_exposureTime = sub_image[<span class="string">"EXIF_ExposureTime"</span>] <span class="comment">//曝光时间</span></span><br><span class="line">        	<span class="keyword">if</span> (EXIF_exposureTime!=<span class="string">""</span>)</span><br><span class="line">        	&#123;</span><br><span class="line">        		href_str = href_str+<span class="string">' 曝光时间：'</span> +EXIF_exposureTime +nbsp</span><br><span class="line">        	&#125;	</span><br><span class="line"></span><br><span class="line">        	EXIF_ISOSpeedRatings = sub_image[<span class="string">"EXIF_ISOSpeedRatings"</span>] <span class="comment">//ISO</span></span><br><span class="line">        	<span class="keyword">if</span> (EXIF_ISOSpeedRatings!=<span class="string">""</span>)</span><br><span class="line">        	&#123;</span><br><span class="line">        		href_str = href_str+<span class="string">' ISO：'</span> +EXIF_ISOSpeedRatings +nbsp</span><br><span class="line">        	&#125;</span><br><span class="line"></span><br><span class="line">        	image_url = sub_image[<span class="string">"url"</span>]</span><br><span class="line"></span><br><span class="line">            li += <span class="string">'&lt;div class="card" style="width:100%"&gt;'</span> +</span><br><span class="line">                    <span class="string">'&lt;div class="ImageInCard"&gt;'</span> +</span><br><span class="line">                      <span class="string">'&lt;a data-fancybox="gallery" href="'</span> + image_url + <span class="string">'?raw=true" data-caption="'</span> + href_str +<span class="string">'"&gt;'</span> +</span><br><span class="line">                        <span class="string">'&lt;img src="'</span> + image_url + <span class="string">'?raw=true"/&gt;'</span> +</span><br><span class="line">                      <span class="string">'&lt;/a&gt;'</span> + <span class="string">'&lt;br&gt;'</span> +</span><br><span class="line">                    <span class="string">'&lt;/div&gt;'</span> +</span><br><span class="line">                    <span class="comment">// '&lt;div class="TextInCard"&gt;' + imgName + '&lt;/div&gt;' +</span></span><br><span class="line">                  <span class="string">'&lt;/div&gt;'</span></span><br><span class="line">        &#125;</span><br><span class="line">        $(<span class="string">".album_image_grid"</span>).append(li);</span><br><span class="line">        <span class="comment">//$(".album_image_grid").lazyload();</span></span><br><span class="line">        <span class="comment">//this.minigrid();</span></span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">photo.init();</span><br></pre></td></tr></table></figure>

<blockquote>
<p>此时访问某个二级目录的地址可以看到图像已经上线</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image/20200429000313.png" alt=""></p>
<h2 id="建立相册目录"><a href="#建立相册目录" class="headerlink" title="建立相册目录"></a>建立相册目录</h2><h3 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h3><blockquote>
<p>在Hexo/themes/next/layout文件夹内，修改page.swig，在schedule的elif后面加入内容：</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% elif page.type &#x3D;&#x3D;&#x3D; &#39;schedule&#39; %&#125;</span><br><span class="line">          &lt;div class&#x3D;&quot;event-list&quot;&gt;</span><br><span class="line">          &lt;&#x2F;div&gt;</span><br><span class="line">          &#123;% include &#39;_scripts&#x2F;pages&#x2F;schedule.swig&#39; %&#125;</span><br><span class="line">        </span><br><span class="line">        &#123;% elif page.type &#x3D;&#x3D;&#x3D; &#39;photos&#39; %&#125;</span><br><span class="line"></span><br><span class="line">           &lt;div class&#x3D;&quot;album_link_list&quot;&gt;</span><br><span class="line"></span><br><span class="line">           &lt;&#x2F;div&gt;</span><br><span class="line">	   </span><br><span class="line">	   &lt;script src&#x3D;&quot;&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;jquery@3&#x2F;dist&#x2F;jquery.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">	   &lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;minigrid@3.1.1&#x2F;dist&#x2F;minigrid.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">	   &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;&#x2F;photos&#x2F;photos.css&quot;&gt;</span><br><span class="line">	   &lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#x2F;photos&#x2F;photo.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">        &#123;% else %&#125;</span><br><span class="line">          &#123;&#123; page.content &#125;&#125;</span><br><span class="line">        &#123;%- endif %&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>在同文件夹内建立文件 photos.swig 写入内容</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% extends &#39;_layout.swig&#39; %&#125;</span><br><span class="line">&#123;% import &#39;_macro&#x2F;post-collapse.swig&#39; as post_template with context %&#125;</span><br><span class="line">&#123;% import &#39;_macro&#x2F;sidebar.swig&#39; as sidebar_template with context %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% block title %&#125;&#123;&#123; __(&#39;title.photos&#39;) &#125;&#125;: &#123;&#123; page.photos &#125;&#125; | &#123;&#123; title &#125;&#125;&#123;% endblock %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% block content %&#125;</span><br><span class="line"></span><br><span class="line">  &#123;#################&#125;</span><br><span class="line">  &#123;### photos BLOCK ###&#125;</span><br><span class="line">  &#123;#################&#125;</span><br><span class="line">  &lt;div class&#x3D;&quot;post-block&quot;&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;posts-collapse&quot;&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;collection-title&quot;&gt;</span><br><span class="line">        &lt;&#123;%- if theme.seo %&#125;h2&#123;% else %&#125;h1&#123;%- endif %&#125; class&#x3D;&quot;collection-header&quot;&gt;</span><br><span class="line">          &#123;&#123;- page.photos &#125;&#125;</span><br><span class="line">          &lt;small&gt;&#123;&#123; __(&#39;title.photos&#39;) &#125;&#125;&lt;&#x2F;small&gt;</span><br><span class="line">        &lt;&#x2F;&#123;%- if theme.seo %&#125;h2&#123;% else %&#125;h1&#123;%- endif %&#125;&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">      &#123;&#123; post_template.render(page.posts) &#125;&#125;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">  &#123;#####################&#125;</span><br><span class="line">  &#123;### END photos BLOCK ###&#125;</span><br><span class="line">  &#123;#####################&#125;</span><br><span class="line"></span><br><span class="line">  &#123;% include &#39;_partials&#x2F;pagination.swig&#39; %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endblock %&#125;</span><br><span class="line">&#123;&#123; page.date &#125;&#125;</span><br><span class="line"></span><br><span class="line">&#123;% block sidebar %&#125;</span><br><span class="line">  &#123;&#123; sidebar_template.render(false) &#125;&#125;</span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure>

<h3 id="建立photos-js文件"><a href="#建立photos-js文件" class="headerlink" title="建立photos.js文件"></a>建立photos.js文件</h3><blockquote>
<p>在Hexo/themes/next/source/photos文件夹内建立相册js文件 <code>photos.js</code>，写入如下内容：</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">'Photos js Hello World'</span>)</span><br><span class="line"></span><br><span class="line">photo =&#123;</span><br><span class="line">    init: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> that = <span class="keyword">this</span>;</span><br><span class="line">        $.getJSON(<span class="string">"album.json"</span>, <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">            that.render(that.page, data);</span><br><span class="line">            <span class="comment">//that.scroll(data);</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    render: <span class="function"><span class="keyword">function</span> (<span class="params">page, data</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> album_list = data[<span class="string">'album'</span>];</span><br><span class="line">        <span class="keyword">var</span> html, imgNameWithPattern, imgName, imageSize, imageX, imageY, li = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">var</span> link_profix = <span class="string">"/photos/"</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; album_list.length; i++) &#123;</span><br><span class="line"></span><br><span class="line">            album_info = album_list[i]</span><br><span class="line"></span><br><span class="line">            dir_name = album_info[<span class="string">"directory"</span>]</span><br><span class="line"></span><br><span class="line">            title = album_info[<span class="string">"title"</span>]</span><br><span class="line">            <span class="comment">/*console.log(album_info)</span></span><br><span class="line"><span class="comment">            imgNameWithPattern = data[i].split(' ')[1];</span></span><br><span class="line"><span class="comment">            imgName = imgNameWithPattern.split('.')[0]</span></span><br><span class="line"><span class="comment">            imageSize = data[i].split(' ')[0];</span></span><br><span class="line"><span class="comment">            imageX = imageSize.split('.')[0];</span></span><br><span class="line"><span class="comment">            imageY = imageSize.split('.')[1];*/</span></span><br><span class="line">            li += <span class="string">'&lt;div&gt;'</span> +</span><br><span class="line">                      <span class="string">'&lt;a href="'</span> +link_profix + dir_name + <span class="string">'/"&gt;'</span> +</span><br><span class="line">                          title + <span class="string">'&lt;br&gt;'</span> + </span><br><span class="line">                      <span class="string">'&lt;/a&gt;'</span> +</span><br><span class="line">                    <span class="comment">// '&lt;div class="TextInCard"&gt;' + imgName + '&lt;/div&gt;' +</span></span><br><span class="line">                  <span class="string">'&lt;/div&gt;'</span></span><br><span class="line">        &#125;</span><br><span class="line">        $(<span class="string">".album_link_list"</span>).append(li);</span><br><span class="line">        <span class="comment">//$(".ImageGrid").lazyload();</span></span><br><span class="line">        <span class="keyword">this</span>.minigrid();</span><br><span class="line">    &#125;,</span><br><span class="line">    minigrid: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> grid = <span class="keyword">new</span> Minigrid(&#123;</span><br><span class="line">            container: <span class="string">'.ImageGrid'</span>,</span><br><span class="line">            item: <span class="string">'.card'</span>,</span><br><span class="line">            gutter: <span class="number">12</span></span><br><span class="line">        &#125;);</span><br><span class="line">        grid.mount();</span><br><span class="line">        $(<span class="built_in">window</span>).resize(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">           grid.mount();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">photo.init();</span><br></pre></td></tr></table></figure>

<blockquote>
<p>此时便有了相册目录：</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image/20200429001245.png" alt=""></p>
<blockquote>
<p>至此我们已经完成了相册的基础框架，美化等工作仅需在此基础上顺水推舟即可。</p>
</blockquote>
]]></content>
      <categories>
        <category>Next</category>
      </categories>
      <tags>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>Next -23- 添加相册系列 -3- 获取图像信息、保存为json文件并上传图像</title>
    <url>/2020/04/22/next/23_get_image_info/get-image-info/</url>
    <content><![CDATA[<blockquote>
<p>相册需要在本地建立文件夹，为了维护相册，需要自动生成对应图像的json文件，并自动压缩上传，本文分享我的python程序，提供一种解决方案供大家使用参考。</p>
</blockquote>
<a id="more"></a>

<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul>
<li><p>qshell 上传至七牛云图床 <a href="https://www.zywvvd.com/2020/03/31/next/22_qiniuyun_qshell/qiniuyun-qshell/">Next -22- 添加相册系列 -2- 使用七牛云qshell同步图像目录</a></p>
</li>
<li><p>python 运行环境</p>
</li>
<li><p>准备好的图像文件夹</p>
</li>
</ul>
<h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><ul>
<li>自动读取文件夹中的所有图像</li>
<li>压缩到固定尺寸</li>
<li>转存到指定的临时文件夹</li>
<li>自动上传至七牛云</li>
<li>自动提取图像信息并保存到json</li>
<li>整合所有相册信息到json</li>
</ul>
<h2 id="工程代码"><a href="#工程代码" class="headerlink" title="工程代码"></a>工程代码</h2><blockquote>
<p>配置文件</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> platform</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Parameters</span>:</span></span><br><span class="line">    </span><br><span class="line">    Image_Root_Path = <span class="string">r'/media/vvd/新加卷/pic'</span>                                   <span class="comment"># root of source raw images</span></span><br><span class="line">    Hexo_Root_Path =<span class="string">r'/home/vvd/VVD_Work/Hexo/VVD_Hexo'</span>                         <span class="comment"># root of Hexo dir  </span></span><br><span class="line">    Hexo_Sub_Dir_to_Photos = <span class="string">r'source/photos'</span>                                   <span class="comment"># my source dir for album</span></span><br><span class="line">    Uploading_Temp_Image_Path = <span class="string">r'/home/vvd/VVD_Work/Hexo/Album_Temp'</span>           <span class="comment"># root of temp image dir</span></span><br><span class="line">    Album_Ddescription_File_Name = <span class="string">'readme.json'</span>                                <span class="comment"># name of json file in each image dir</span></span><br><span class="line">    Log_File_Name = <span class="string">'Album_Log.log'</span>                                             <span class="comment"># name of log file</span></span><br><span class="line">    Album_Total_Json = <span class="string">'album.json'</span>                                             <span class="comment"># json info of album</span></span><br><span class="line">    Album_Md_File_Name = <span class="string">'index.md'</span>                                             <span class="comment"># name of markdown file of hexo </span></span><br><span class="line">    Qshell_Config_File_Name = <span class="string">'upload.conf'</span>                                     <span class="comment"># qiniu qshell config file name </span></span><br><span class="line">    </span><br><span class="line">    Logging_Object = <span class="literal">None</span>                                                       <span class="comment"># object of logging class</span></span><br><span class="line">    Image_Info_Get_Object = <span class="literal">None</span>                                                <span class="comment"># instance of PhotoExifInfo</span></span><br><span class="line">    </span><br><span class="line">    Image_Extension_List =[<span class="string">'jpg'</span>,<span class="string">'png'</span>,<span class="string">'jpeg'</span>,<span class="string">'bmp'</span>]                            <span class="comment"># list of common image extensions </span></span><br><span class="line">    Image_Resize_Width = <span class="number">2000</span>                                                   <span class="comment"># image width after resize</span></span><br><span class="line">    Whether_Overwrite_Old_Temp_File = <span class="literal">False</span>                                     <span class="comment"># whether overwrite old file while the program run again</span></span><br><span class="line">    Image_Url_Prefix =<span class="string">r'https://photos.zywvvd.com/vvd_hexo/'</span>                    <span class="comment"># prefix of image url</span></span><br><span class="line">    Force_Upload = <span class="literal">False</span>                                                        <span class="comment"># upload images no matter what happens</span></span><br><span class="line"></span><br><span class="line">    Current_System = platform.system()                                          <span class="comment"># current operating system</span></span><br><span class="line">    <span class="keyword">if</span> Current_System == <span class="string">'Linux'</span>:</span><br><span class="line">        Split_Char =<span class="string">'/'</span>                                                         <span class="comment"># split char of current operating system</span></span><br><span class="line">    <span class="keyword">elif</span> Current_System == <span class="string">'Windows'</span>:</span><br><span class="line">        Split_Char =<span class="string">'\\'</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>图像信息提取</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># getinfo.py</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PhotoExifInfo</span><span class="params">()</span>:</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> os.path.exists(<span class="string">'vvdkey.py'</span>):</span><br><span class="line">            <span class="keyword">from</span> vvdkey <span class="keyword">import</span> baidu_key <span class="comment"># 使用你自己的百度key</span></span><br><span class="line">            self.baidu_map_ak = baidu_key</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment">## set your baidu map key here</span></span><br><span class="line">            self.baidu_map_ak = <span class="string">""</span></span><br><span class="line">            </span><br><span class="line">        self.interested_keys = &#123;</span><br><span class="line">            <span class="comment"># camera Model</span></span><br><span class="line">            <span class="string">'Image Model'</span>:<span class="string">'Image_Model'</span>,<span class="comment">#'相机型号',</span></span><br><span class="line">            <span class="comment"># Aperture 1/value</span></span><br><span class="line">            <span class="string">'EXIF FNumber'</span>:<span class="string">'EXIF_FNumber'</span>,<span class="comment">#'光圈',</span></span><br><span class="line">            <span class="comment"># Focal Length</span></span><br><span class="line">            <span class="string">'EXIF FocalLength'</span>:<span class="string">'EXIF_FocalLength'</span>,<span class="comment">#'焦距',</span></span><br><span class="line">            <span class="comment"># Exposure Mode</span></span><br><span class="line">            <span class="string">'EXIF ExposureMode'</span>:<span class="string">'EXIF_ExposureMode'</span>,<span class="comment">#'曝光模式',</span></span><br><span class="line">            <span class="comment"># ExposureTime in seconds</span></span><br><span class="line">            <span class="string">'EXIF ExposureTime'</span>:<span class="string">'EXIF_ExposureTime'</span>,<span class="comment">#'曝光时间',</span></span><br><span class="line">            <span class="comment"># ISO</span></span><br><span class="line">            <span class="string">'EXIF ISOSpeedRatings'</span>:<span class="string">'EXIF_ISOSpeedRatings'</span>,<span class="comment">#'ISO',</span></span><br><span class="line">            <span class="comment"># date of photo</span></span><br><span class="line">            <span class="string">'Image DateTime'</span>:<span class="string">'Image_DateTime'</span><span class="comment">#'拍摄时间',</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_image_info</span><span class="params">(self,image_path)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        获取照片信息</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        image_info_dict=&#123;&#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">with</span> open(image_path, <span class="string">'rb'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">            tags = exifread.process_file(fp)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> tags:</span><br><span class="line">            print(<span class="string">f"<span class="subst">&#123;j&#125;</span> :<span class="subst">&#123;tags[j]&#125;</span>"</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> tuple(self.interested_keys):</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                info = tags[item].printable</span><br><span class="line">                <span class="keyword">if</span> item == <span class="string">'EXIF FNumber'</span>:</span><br><span class="line">                    <span class="keyword">if</span> <span class="string">'/'</span> <span class="keyword">in</span> info:</span><br><span class="line">                        A,B = info.split(<span class="string">'/'</span>)</span><br><span class="line">                        info = <span class="string">'f'</span>+format(int(A)/int(B),<span class="string">'.1f'</span>)</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        info = <span class="string">'f'</span>+info</span><br><span class="line">                <span class="keyword">if</span> item == <span class="string">'EXIF FocalLength'</span>:</span><br><span class="line">                    info = info+<span class="string">'mm'</span></span><br><span class="line">                <span class="keyword">if</span> item == <span class="string">'EXIF ExposureTime'</span>:</span><br><span class="line">                    info = info+<span class="string">'s'</span></span><br><span class="line">                image_info_dict[self.interested_keys[item]] = info</span><br><span class="line">                </span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                print(<span class="string">f'<span class="subst">&#123;image_path&#125;</span> has no attribute of <span class="subst">&#123;item&#125;</span>'</span>)                </span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            </span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            localcation = self._get_city_info(tags)</span><br><span class="line">            <span class="keyword">if</span> localcation != <span class="string">""</span>:</span><br><span class="line">                image_info_dict[<span class="string">'positon'</span>] = localcation</span><br><span class="line">                </span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            print(<span class="string">f'<span class="subst">&#123;image_path&#125;</span> has no GPS info'</span>)    </span><br><span class="line">            </span><br><span class="line">        <span class="keyword">return</span> image_info_dict</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_get_lng_lat</span><span class="params">(self, tags)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        经纬度转换</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 纬度</span></span><br><span class="line">            LatRef = tags[<span class="string">"GPS GPSLatitudeRef"</span>].printable</span><br><span class="line">            Lat = tags[<span class="string">"GPS GPSLatitude"</span>].printable[<span class="number">1</span>:<span class="number">-1</span>].replace(<span class="string">" "</span>, <span class="string">""</span>).replace(<span class="string">"/"</span>, <span class="string">","</span>).split(<span class="string">","</span>)</span><br><span class="line">            Lat = float(Lat[<span class="number">0</span>]) + float(Lat[<span class="number">1</span>]) / <span class="number">60</span> + float(Lat[<span class="number">2</span>]) / <span class="number">3600</span></span><br><span class="line">            <span class="keyword">if</span> LatRef != <span class="string">"N"</span>:</span><br><span class="line">                Lat = Lat * (<span class="number">-1</span>)</span><br><span class="line">                </span><br><span class="line">            <span class="comment"># 经度</span></span><br><span class="line">            LonRef = tags[<span class="string">"GPS GPSLongitudeRef"</span>].printable</span><br><span class="line">            Lon = tags[<span class="string">"GPS GPSLongitude"</span>].printable[<span class="number">1</span>:<span class="number">-1</span>].replace(<span class="string">" "</span>, <span class="string">""</span>).replace(<span class="string">"/"</span>, <span class="string">","</span>).split(<span class="string">","</span>)</span><br><span class="line">            Lon = float(Lon[<span class="number">0</span>]) + float(Lon[<span class="number">1</span>]) / <span class="number">60</span> + float(Lon[<span class="number">2</span>]) / <span class="number">3600</span></span><br><span class="line">            <span class="keyword">if</span> LonRef != <span class="string">"E"</span>:</span><br><span class="line">                Lon = Lon * (<span class="number">-1</span>)</span><br><span class="line">            <span class="keyword">return</span> Lat,Lon</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            print(<span class="string">'Unable to get'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_get_city_info</span><span class="params">(self, tags)</span>:</span></span><br><span class="line">        </span><br><span class="line">        result = self._get_lng_lat(tags)</span><br><span class="line">        <span class="keyword">if</span> result:</span><br><span class="line">            Lat, Lon = result</span><br><span class="line">            url = <span class="string">"https://api.map.baidu.com/reverse_geocoding/v3/?ak="</span>+self.baidu_map_ak+<span class="string">"&amp;output=json&amp;coordtype=wgs84ll&amp;location="</span> + str(Lat) + <span class="string">','</span> + str(Lon)</span><br><span class="line">            <span class="comment">#url = "https://api.map.baidu.com/reverse_geocoding/v3/?ak="+self.baidu_map_ak+"&amp;output=json&amp;coordtype=wgs84ll&amp;location=31.225696563611,121.49884033194"</span></span><br><span class="line">            response = requests.get(url).json()</span><br><span class="line">            status = response[<span class="string">'status'</span>]</span><br><span class="line">            <span class="keyword">if</span> status == <span class="number">0</span>:</span><br><span class="line">                address = response[<span class="string">'result'</span>][<span class="string">'formatted_address'</span>]</span><br><span class="line">                <span class="keyword">if</span> address != <span class="string">""</span>:</span><br><span class="line">                    <span class="keyword">return</span>(address)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(<span class="string">'baidu_map error'</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>主要功能函数</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> config</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> os </span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> getinfo <span class="keyword">import</span> PhotoExifInfo</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">log_init</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    initialize logging </span></span><br><span class="line"><span class="string">    save the logging object in `config.Parameters.Logging_Object`</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    after this operation,</span></span><br><span class="line"><span class="string">    we could save logs with sample orders such as `logging.debug('test debug')` `logging.info('test info')` </span></span><br><span class="line"><span class="string">    logging level : debug &lt; info &lt; warning &lt;error &lt; critica</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    log_file_path = os.path.join(config.Parameters.Uploading_Temp_Image_Path, config.Parameters.Log_File_Name)</span><br><span class="line">    <span class="keyword">if</span> os.path.exists(log_file_path):</span><br><span class="line">        <span class="comment"># open log file as  mode of append</span></span><br><span class="line">        open_type = <span class="string">'a'</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># open log file as  mode of write</span></span><br><span class="line">        open_type = <span class="string">'w'</span></span><br><span class="line">        </span><br><span class="line">    logging.basicConfig(</span><br><span class="line">    </span><br><span class="line">        <span class="comment"># 日志级别,logging.DEBUG,logging.ERROR</span></span><br><span class="line">        level = logging.INFO,  </span><br><span class="line"></span><br><span class="line">    <span class="comment"># 日志格式: 时间、代码所在文件名、代码行号、日志级别名字、日志信息</span></span><br><span class="line">        <span class="comment">#format = '%(asctime)s %(filename)s[line:%(lineno)d] %(levelname)s %(message)s',</span></span><br><span class="line">        format = <span class="string">'%(asctime)s : %(message)s'</span>,</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 打印日志的时间</span></span><br><span class="line">        datefmt = <span class="string">'%Y-%m-%d %H:%M:%S'</span>,</span><br><span class="line">    </span><br><span class="line">        <span class="comment"># 日志文件存放的目录（目录必须存在）及日志文件名</span></span><br><span class="line">        filename = log_file_path, </span><br><span class="line">    </span><br><span class="line">        <span class="comment"># 打开日志文件的方式</span></span><br><span class="line">        filemode = open_type</span><br><span class="line">    )    </span><br><span class="line">    </span><br><span class="line">    config.Parameters.Logging_Object = logging</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">log</span><span class="params">(message)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    print message to console and than save it to log </span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    print(message)</span><br><span class="line">    <span class="keyword">if</span> config.Parameters.Logging_Object:</span><br><span class="line">        config.Parameters.Logging_Object.info(message)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">raise</span> TypeError(<span class="string">'there is sth wrong with the object of logging in config '</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dir_check</span><span class="params">(dir_path)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    check if `dir_path` is a real directory path</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(dir_path):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            os.makedirs(dir_path) </span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> err:</span><br><span class="line">            print(<span class="string">f'failed to make dir <span class="subst">&#123;dir_path&#125;</span>, error <span class="subst">&#123;err&#125;</span>'</span>)</span><br><span class="line">        <span class="keyword">finally</span>:</span><br><span class="line">            log(<span class="string">f'<span class="subst">&#123;dir_path&#125;</span> does not exist and we have built it for you '</span>)</span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">environment_check</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    check album environment, try to fix the matters if sth goes wrong</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">## check important dirs</span></span><br><span class="line">    <span class="keyword">assert</span> os.path.isdir(config.Parameters.Image_Root_Path) ,<span class="string">f"image root dir <span class="subst">&#123;config.Parameters.Image_Root_Path&#125;</span> does not exist"</span></span><br><span class="line">    <span class="keyword">assert</span> os.path.isdir(config.Parameters.Hexo_Root_Path) ,<span class="string">f"hexo root dir <span class="subst">&#123;config.Parameters.Hexo_Root_Path&#125;</span> does not exist"</span></span><br><span class="line">    </span><br><span class="line">    dir_check(config.Parameters.Uploading_Temp_Image_Path)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">## check image width, I think it shold not &lt; 200</span></span><br><span class="line">    config.Parameters.Image_Resize_Width = max(int(config.Parameters.Image_Resize_Width), <span class="number">200</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">## initialize logging</span></span><br><span class="line">    log_init()</span><br><span class="line">    </span><br><span class="line">    <span class="comment">## image_info_get object</span></span><br><span class="line">    config.Parameters.Image_Info_Get_Object = PhotoExifInfo()</span><br><span class="line">    </span><br><span class="line">      </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">init_json_create</span><span class="params">(json_path)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    init a json file to `json_path`</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">assert</span> os.path.basename(json_path).split(<span class="string">'.'</span>)[<span class="number">-1</span>]==<span class="string">'json'</span>,<span class="string">f'<span class="subst">&#123;json_path&#125;</span> should be a path of json file '</span></span><br><span class="line">    <span class="keyword">assert</span> os.path.isdir(os.path.split(json_path)[<span class="number">0</span>]), <span class="string">'the folder does not exist'</span></span><br><span class="line">    </span><br><span class="line">    now = time.localtime()</span><br><span class="line">    info_dict=&#123;&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">## time</span></span><br><span class="line">    my_time=&#123;</span><br><span class="line">        <span class="string">'year'</span>:now.tm_year,\</span><br><span class="line">        <span class="string">'month'</span>:now.tm_mon,\</span><br><span class="line">        <span class="string">'day'</span>:now.tm_mday</span><br><span class="line">          &#125;</span><br><span class="line">    info_dict[<span class="string">'time'</span>] = my_time</span><br><span class="line">    </span><br><span class="line">    <span class="comment">## type</span></span><br><span class="line">    info_dict[<span class="string">'type'</span>] = <span class="string">'album type'</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">## model</span></span><br><span class="line">    info_dict[<span class="string">'model'</span>] = <span class="string">''</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">## position</span></span><br><span class="line">    position = &#123;</span><br><span class="line">        <span class="string">'city'</span>:<span class="string">'beijing'</span>,\</span><br><span class="line">        <span class="string">'street'</span>:<span class="string">'Tiananmen'</span></span><br><span class="line">    &#125;</span><br><span class="line">    info_dict[<span class="string">'position'</span>] = position</span><br><span class="line">    </span><br><span class="line">    <span class="comment">## title</span></span><br><span class="line">    info_dict[<span class="string">'title'</span>] = <span class="string">'Album title'</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">## balabala</span></span><br><span class="line">    info_dict[<span class="string">'balabala'</span>] = <span class="string">'description of album'</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">with</span> open(json_path, mode=<span class="string">'w'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        json.dump(info_dict, fp, indent=<span class="number">3</span>)</span><br><span class="line">        log(<span class="string">f'make initial json file <span class="subst">&#123;json_path&#125;</span>'</span>)</span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">image_compression_and_save</span><span class="params">(src_dir, tar_dir)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    compress and move images from src to tar </span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    sub_image_dirs = os.listdir(src_dir)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> sub_image_dir <span class="keyword">in</span> sub_image_dirs:</span><br><span class="line">        src_sub_image_path = os.path.join(src_dir, sub_image_dir)</span><br><span class="line">        tar_sub_image_path = os.path.join(tar_dir, sub_image_dir)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">## check tar dir</span></span><br><span class="line">        dir_check(tar_sub_image_path)</span><br><span class="line">        </span><br><span class="line">        file_list = os.listdir(src_sub_image_path)</span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> file_list:</span><br><span class="line">            extension = item.split(<span class="string">'.'</span>)[<span class="number">-1</span>]</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> extension.lower() <span class="keyword">in</span> config.Parameters.Image_Extension_List:</span><br><span class="line">                <span class="comment">## is image file</span></span><br><span class="line">                image_path = os.path.join(src_sub_image_path, item)</span><br><span class="line">                </span><br><span class="line">                tar_image_path = os.path.join(tar_sub_image_path, item)</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(tar_image_path) <span class="keyword">or</span> config.Parameters.Whether_Overwrite_Old_Temp_File:</span><br><span class="line">                    <span class="comment">## new file or overwrite</span></span><br><span class="line">                    </span><br><span class="line">                    image = cv2.imread(image_path)</span><br><span class="line">                    image_shape = image.shape</span><br><span class="line">                    </span><br><span class="line">                    <span class="keyword">if</span> image_shape[<span class="number">1</span>] &gt;= config.Parameters.Image_Resize_Width:</span><br><span class="line">                        <span class="comment">## need compression</span></span><br><span class="line">                        new_width = int(config.Parameters.Image_Resize_Width)</span><br><span class="line">                        new_height = int(config.Parameters.Image_Resize_Width/image_shape[<span class="number">1</span>]*image_shape[<span class="number">0</span>])</span><br><span class="line">                        </span><br><span class="line">                        new_image = cv2.resize(image,(new_width, new_height) )</span><br><span class="line">                        cv2.imwrite(tar_image_path, new_image)</span><br><span class="line">                        log(<span class="string">f'image <span class="subst">&#123;os.path.join(sub_image_dir,item)&#125;</span> has been resized to <span class="subst">&#123;(new_width, new_height)&#125;</span> and moved to temp dir'</span>)</span><br><span class="line">                        </span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        <span class="comment">## small image, copy directly</span></span><br><span class="line">                        shutil.copy(image_path, tar_image_path)</span><br><span class="line">                        log(<span class="string">f'image <span class="subst">&#123;os.path.join(sub_image_dir,item)&#125;</span> has been moved to temp dir'</span>)</span><br><span class="line">                           </span><br><span class="line">        </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">deal_with_sub_json</span><span class="params">(src_dir, tar_dir)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    deal with sub json files in each sub dir</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    sub_image_dirs = os.listdir(src_dir)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> sub_image_dir <span class="keyword">in</span> sub_image_dirs:</span><br><span class="line">        </span><br><span class="line">        src_sub_image_path = os.path.join(src_dir, sub_image_dir)</span><br><span class="line">        tar_sub_image_path = os.path.join(tar_dir, sub_image_dir)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">## check tar dir</span></span><br><span class="line">        dir_check(tar_sub_image_path)    </span><br><span class="line">        </span><br><span class="line">        src_info_json_file_path = os.path.join(src_sub_image_path, config.Parameters.Album_Ddescription_File_Name)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(src_info_json_file_path):</span><br><span class="line">            init_json_create(src_info_json_file_path)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">f'<span class="subst">&#123;src_info_json_file_path&#125;</span> found'</span>)</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">with</span> open(src_info_json_file_path) <span class="keyword">as</span> fp:</span><br><span class="line">            album_info = json.load(fp)</span><br><span class="line">        </span><br><span class="line">        file_list = os.listdir(src_sub_image_path)</span><br><span class="line">        </span><br><span class="line">        image_info_list = []</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> file_list:</span><br><span class="line">            extension = item.split(<span class="string">'.'</span>)[<span class="number">-1</span>]</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> extension.lower() <span class="keyword">in</span> config.Parameters.Image_Extension_List:</span><br><span class="line">                <span class="comment">## is image file</span></span><br><span class="line">                image_path = os.path.join(src_sub_image_path, item)</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">assert</span> <span class="keyword">not</span> config.Parameters.Image_Info_Get_Object <span class="keyword">is</span> <span class="literal">None</span>, <span class="string">"Image_Info_Get_Object should be a instance "</span></span><br><span class="line">                image_info_dict = config.Parameters.Image_Info_Get_Object.get_image_info(image_path)                </span><br><span class="line">                </span><br><span class="line">                image_info_dict[<span class="string">'url'</span>] = config.Parameters.Image_Url_Prefix+sub_image_dir+<span class="string">'/'</span>+item</span><br><span class="line">                </span><br><span class="line">                image_info_list.append(image_info_dict)</span><br><span class="line">                </span><br><span class="line">        album_info[<span class="string">'image_info'</span>] = image_info_list</span><br><span class="line">        album_info[<span class="string">'directory'</span>] = sub_image_dir</span><br><span class="line">        </span><br><span class="line">        tar_info_json_file_path = os.path.join(tar_sub_image_path, config.Parameters.Album_Ddescription_File_Name)      </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">with</span> open(tar_info_json_file_path,<span class="string">'w'</span>,encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">            json.dump(album_info, fp, indent=<span class="number">3</span>, ensure_ascii=<span class="literal">False</span>)</span><br><span class="line">            log(<span class="string">f'json file of image dir <span class="subst">&#123;sub_image_dir&#125;</span> created'</span>)</span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">json_integrate</span><span class="params">(temp_root)</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    integrate json files to a single file</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    sub_image_dirs = os.listdir(temp_root)</span><br><span class="line">    </span><br><span class="line">    album_dict = &#123;&#125;</span><br><span class="line">    </span><br><span class="line">    album_json_list = []</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> sub_image_dir <span class="keyword">in</span> sub_image_dirs:  </span><br><span class="line">        <span class="keyword">if</span> os.path.isdir(os.path.join(temp_root,sub_image_dir)):</span><br><span class="line">            json_file_path = os.path.join(temp_root,sub_image_dir, config.Parameters.Album_Ddescription_File_Name)   </span><br><span class="line">            <span class="keyword">assert</span> os.path.exists(json_file_path),<span class="string">f'file <span class="subst">&#123;json_file_path&#125;</span> not flund'</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">with</span> open(json_file_path) <span class="keyword">as</span> fp:</span><br><span class="line">                json_dict = json.load(fp)</span><br><span class="line">            </span><br><span class="line">            album_json_list.append(json_dict)</span><br><span class="line">            </span><br><span class="line">    album_dict[<span class="string">'album'</span>] = album_json_list</span><br><span class="line">    </span><br><span class="line">    integrate_json_path = os.path.join(temp_root, config.Parameters.Album_Total_Json)</span><br><span class="line">    <span class="keyword">with</span> open(integrate_json_path, mode=<span class="string">'w'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        json.dump(album_dict, fp, ensure_ascii=<span class="literal">False</span>, indent=<span class="number">3</span>)</span><br><span class="line">        log(<span class="string">f'total json <span class="subst">&#123;integrate_json_path&#125;</span> saved'</span>)</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> album_dict</span><br><span class="line">        </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">make_dir_json_md_of_album</span><span class="params">(temp_root, hexo_photos_path, album_dict)</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    save md files to hexo source/photos dir</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    <span class="keyword">assert</span> os.path.isdir(hexo_photos_path) ,<span class="string">'hexo photos path &#123;hexo_photos_path&#125; does not exist'</span></span><br><span class="line">    </span><br><span class="line">    src_album_json_path = os.path.join(temp_root, config.Parameters.Album_Total_Json)</span><br><span class="line">    <span class="keyword">assert</span> os.path.exists(src_album_json_path), <span class="string">f'album json file <span class="subst">&#123;src_album_json_path&#125;</span> not found'</span></span><br><span class="line">    tar_album_json_path = os.path.join(hexo_photos_path, config.Parameters.Album_Total_Json)</span><br><span class="line">    </span><br><span class="line">    shutil.copy(src_album_json_path, tar_album_json_path)</span><br><span class="line">    log(<span class="string">f"json file <span class="subst">&#123;config.Parameters.Album_Total_Json&#125;</span> moved to hexo dir"</span>)</span><br><span class="line">    <span class="keyword">for</span> sub_image_dict <span class="keyword">in</span> album_dict[<span class="string">'album'</span>]:</span><br><span class="line">        src_json_path = os.path.join(temp_root, sub_image_dict[<span class="string">'directory'</span>], config.Parameters.Album_Ddescription_File_Name)</span><br><span class="line">        <span class="keyword">assert</span> os.path.exists(src_json_path), <span class="string">f'sub json file <span class="subst">&#123;src_json_path&#125;</span> not found'</span></span><br><span class="line">        </span><br><span class="line">        tar_json_path = os.path.join(hexo_photos_path, sub_image_dict[<span class="string">'directory'</span>], config.Parameters.Album_Ddescription_File_Name)</span><br><span class="line">        image_dir = os.path.join(hexo_photos_path, sub_image_dict[<span class="string">'directory'</span>])</span><br><span class="line">        dir_check(image_dir)</span><br><span class="line">        </span><br><span class="line">        shutil.copyfile(src_json_path, tar_json_path)</span><br><span class="line">        log(<span class="string">f"json file <span class="subst">&#123;sub_image_dict[<span class="string">'directory'</span>] +<span class="string">'_'</span>+ config.Parameters.Album_Ddescription_File_Name&#125;</span> moved to hexo dir"</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">with</span> open(os.path.join(image_dir,config.Parameters.Album_Md_File_Name),<span class="string">'w'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">            fp.writelines(<span class="string">'---'</span>+<span class="string">'\n'</span>)</span><br><span class="line">            fp.writelines(<span class="string">'title: '</span>+sub_image_dict[<span class="string">'title'</span>]+<span class="string">'\n'</span>)</span><br><span class="line">            fp.writelines(<span class="string">'date: '</span>+str(sub_image_dict[<span class="string">'time'</span>][<span class="string">'year'</span>])+<span class="string">'-'</span>+str(sub_image_dict[<span class="string">'time'</span>][<span class="string">'month'</span>])+<span class="string">'-'</span>+str(sub_image_dict[<span class="string">'time'</span>][<span class="string">'day'</span>])+<span class="string">'\n'</span>)</span><br><span class="line">            fp.writelines(<span class="string">'type: photography'</span>+<span class="string">'\n'</span>)</span><br><span class="line">            fp.writelines(<span class="string">'album: '</span>+sub_image_dict[<span class="string">'directory'</span>]+<span class="string">'\n'</span>)</span><br><span class="line">            fp.writelines(<span class="string">'---'</span>+<span class="string">'\n'</span>)</span><br><span class="line">            log(<span class="string">f'create md file of <span class="subst">&#123;os.path.join(image_dir,config.Parameters.Album_Md_File_Name)&#125;</span>'</span>)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>主函数</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> config</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> funs <span class="keyword">import</span> environment_check</span><br><span class="line"><span class="keyword">from</span> funs <span class="keyword">import</span> deal_with_sub_json</span><br><span class="line"><span class="keyword">from</span> funs <span class="keyword">import</span> json_integrate</span><br><span class="line"><span class="keyword">from</span> funs <span class="keyword">import</span> image_compression_and_save</span><br><span class="line"><span class="keyword">from</span> funs <span class="keyword">import</span> make_dir_json_md_of_album</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ ==<span class="string">'__main__'</span>:</span><br><span class="line">    </span><br><span class="line">    src_image_root = config.Parameters.Image_Root_Path</span><br><span class="line">    temp_image_root = config.Parameters.Uploading_Temp_Image_Path</span><br><span class="line">    hexo_photos_path = os.path.join(config.Parameters.Hexo_Root_Path,config.Parameters.Hexo_Sub_Dir_to_Photos)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">## check config environment</span></span><br><span class="line">    environment_check()</span><br><span class="line">    </span><br><span class="line">    <span class="comment">## compress and save images</span></span><br><span class="line">    image_compression_and_save(src_image_root, temp_image_root)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">## get info of images and save json of each dir</span></span><br><span class="line">    deal_with_sub_json(src_image_root, temp_image_root)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">## integrate jsons</span></span><br><span class="line">    album_dict = json_integrate(temp_image_root)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">## make folders and markdowns in dir of photos</span></span><br><span class="line">    make_dir_json_md_of_album(temp_image_root, hexo_photos_path, album_dict)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">## upload images with qshell</span></span><br><span class="line">    <span class="keyword">if</span> config.Parameters.Force_Upload:</span><br><span class="line">        os.system(<span class="string">"rm -rf ~/.qshell/qupload"</span>)</span><br><span class="line">        </span><br><span class="line">    cmd = <span class="string">"qshell qupload "</span>+os.path.join(config.Parameters.Uploading_Temp_Image_Path,config.Parameters.Qshell_Config_File_Name)</span><br><span class="line">    os.system(cmd)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>主要函数做了注释，希望可以给大家启发，如果想使用我这套代码可以到 <a href="https://github.com/zywvvd/hexo_album_process" target="_blank" rel="noopener">hexo_album_process</a> 下载</p>
</blockquote>
<h2 id="运行图示"><a href="#运行图示" class="headerlink" title="运行图示"></a>运行图示</h2><ul>
<li>初始相册文件夹pic</li>
</ul>
<p><img src="https://photos.zywvvd.com/image/20200428001615.png" alt=""></p>
<ul>
<li>相册内部</li>
</ul>
<p><img src="https://photos.zywvvd.com/image/20200428001650.png" alt=""></p>
<ul>
<li>每个文件夹需要有readme.json记录文件夹信息，程序会自动提取，示例如下：</li>
</ul>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">	<span class="attr">"time"</span>:</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="attr">"year"</span>:<span class="number">2015</span>,</span><br><span class="line">		<span class="attr">"month"</span>:<span class="number">11</span>,</span><br><span class="line">		<span class="attr">"day"</span>:<span class="number">28</span></span><br><span class="line">	&#125;,</span><br><span class="line">	<span class="attr">"type"</span>:<span class="string">"风光"</span>,</span><br><span class="line">	<span class="attr">"model"</span>:<span class="string">""</span>,</span><br><span class="line">	<span class="attr">"position"</span>:</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="attr">"city"</span>:<span class="string">"合肥"</span>,</span><br><span class="line">		<span class="attr">"street"</span>:<span class="string">"ustc"</span></span><br><span class="line">	&#125;,</span><br><span class="line">	<span class="attr">"title"</span>:<span class="string">"USTC"</span>,</span><br><span class="line">	<span class="attr">"balabala"</span>:</span><br><span class="line">		<span class="string">"关于母校。"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>配置config.py </li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Image_Root_Path = <span class="string">r'/media/vvd/新加卷/pic'</span>                                   												<span class="comment"># root of source raw images</span></span><br><span class="line">Hexo_Root_Path =<span class="string">r'/home/vvd/VVD_Work/Hexo/VVD_Hexo'</span>                        		 					 <span class="comment"># root of Hexo dir  </span></span><br><span class="line">Hexo_Sub_Dir_to_Photos = <span class="string">r'source/photos'</span>                                  												   <span class="comment"># my source dir for album</span></span><br><span class="line">Uploading_Temp_Image_Path = <span class="string">r'/home/vvd/VVD_Work/Hexo/Album_Temp'</span>           	<span class="comment"># root of temp image dir</span></span><br><span class="line">Image_Url_Prefix =<span class="string">r'https://photos.zywvvd.com/vvd_hexo/'</span>                    							  <span class="comment"># prefix of image url</span></span><br></pre></td></tr></table></figure>

<ul>
<li>运行main.py</li>
</ul>
<p><img src="https://photos.zywvvd.com/image/20200428002036.png" alt=""></p>
<ul>
<li>临时文件夹产生压缩后的图像文件夹与json文件</li>
</ul>
<p><img src="https://photos.zywvvd.com/image/20200428002127.png" alt=""></p>
<ul>
<li>程序会在hexo-&gt;source-&gt; photos文件夹内写入相册文件夹层级结构与对应json文件</li>
</ul>
<p><img src="20200428235033.png" alt=""></p>
<ul>
<li>文件夹内的json加入了图像的信息</li>
</ul>
<p><img src="https://photos.zywvvd.com/image/20200428002202.png" alt=""></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   <span class="attr">"time"</span>: &#123;</span><br><span class="line">      <span class="attr">"year"</span>: <span class="number">2015</span>,</span><br><span class="line">      <span class="attr">"month"</span>: <span class="number">11</span>,</span><br><span class="line">      <span class="attr">"day"</span>: <span class="number">28</span></span><br><span class="line">   &#125;,</span><br><span class="line">   <span class="attr">"type"</span>: <span class="string">"风光"</span>,</span><br><span class="line">   <span class="attr">"model"</span>: <span class="string">""</span>,</span><br><span class="line">   <span class="attr">"position"</span>: &#123;</span><br><span class="line">      <span class="attr">"city"</span>: <span class="string">"合肥"</span>,</span><br><span class="line">      <span class="attr">"street"</span>: <span class="string">"ustc"</span></span><br><span class="line">   &#125;,</span><br><span class="line">   <span class="attr">"title"</span>: <span class="string">"USTC"</span>,</span><br><span class="line">   <span class="attr">"balabala"</span>: <span class="string">"关于母校。"</span>,</span><br><span class="line">   <span class="attr">"image_info"</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">         <span class="attr">"Image_Model"</span>: <span class="string">"NIKON D610"</span>,</span><br><span class="line">         <span class="attr">"EXIF_FNumber"</span>: <span class="string">"f11"</span>,</span><br><span class="line">         <span class="attr">"EXIF_FocalLength"</span>: <span class="string">"35mm"</span>,</span><br><span class="line">         <span class="attr">"EXIF_ExposureMode"</span>: <span class="string">"Auto Exposure"</span>,</span><br><span class="line">         <span class="attr">"EXIF_ExposureTime"</span>: <span class="string">"6s"</span>,</span><br><span class="line">         <span class="attr">"EXIF_ISOSpeedRatings"</span>: <span class="string">"100"</span>,</span><br><span class="line">         <span class="attr">"Image_DateTime"</span>: <span class="string">"2015:11:28 00:07:05"</span>,</span><br><span class="line">         <span class="attr">"url"</span>: <span class="string">"https://photos.zywvvd.com/vvd_hexo/2015_11_28_hefei_ustc_fengjing/1.jpg"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">         <span class="attr">"Image_Model"</span>: <span class="string">"NIKON D610"</span>,</span><br><span class="line">         <span class="attr">"EXIF_FNumber"</span>: <span class="string">"f4"</span>,</span><br><span class="line">         <span class="attr">"EXIF_FocalLength"</span>: <span class="string">"34mm"</span>,</span><br><span class="line">         <span class="attr">"EXIF_ExposureMode"</span>: <span class="string">"Manual Exposure"</span>,</span><br><span class="line">         <span class="attr">"EXIF_ExposureTime"</span>: <span class="string">"25s"</span>,</span><br><span class="line">         <span class="attr">"Image_DateTime"</span>: <span class="string">"2015:11:28 22:13:29"</span>,</span><br><span class="line">         <span class="attr">"url"</span>: <span class="string">"https://photos.zywvvd.com/vvd_hexo/2015_11_28_hefei_ustc_fengjing/2.jpg"</span></span><br><span class="line">      &#125;</span><br><span class="line">   ],</span><br><span class="line">   <span class="attr">"directory"</span>: <span class="string">"2015_11_28_hefei_ustc_fengjing"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>图像会自动上传到七牛云</li>
</ul>
<p><img src="https://photos.zywvvd.com/image/20200428002346.png" alt=""></p>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><blockquote>
<p>文中没有太先进的技术，主要提供了为静态页面自动维护相册问题的解决思路，并分享了json生成与图像上传的工程，有更好的实现方法欢迎交流。</p>
</blockquote>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p>本文启发自 <a href="https://asdfv1929.github.io/2018/05/26/next-add-photos/" target="_blank" rel="noopener">https://asdfv1929.github.io/2018/05/26/next-add-photos/</a> 感谢前辈分享</p>
]]></content>
      <categories>
        <category>Next</category>
      </categories>
      <tags>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>Python - 使用logging模块管理日志文件</title>
    <url>/2020/04/11/python/logging/python-logging/</url>
    <content><![CDATA[<blockquote>
<p>logging是很友好的python日志管理包，轻便好用，本文介绍logging使用方法。</p>
</blockquote>
<a id="more"></a>

<h2 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h2><blockquote>
<p>在程序中引入包：</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> logging</span><br></pre></td></tr></table></figure>

<blockquote>
<p>配置日志设置</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">logging.basicConfig(</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 日志级别,logging.DEBUG,logging.ERROR</span></span><br><span class="line">    level = logging.INFO,  </span><br><span class="line"></span><br><span class="line">    <span class="comment"># 日志格式: 时间、代码所在文件名、代码行号、日志级别名字、日志信息</span></span><br><span class="line">    format = <span class="string">'%(asctime)s %(filename)s[line:%(lineno)d] %(levelname)s %(message)s'</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 打印日志的时间</span></span><br><span class="line">    datefmt = <span class="string">'%a, %Y-%m-%d %H:%M:%S'</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 日志文件存放的目录（目录必须存在）及日志文件名</span></span><br><span class="line">    filename = log_file_path, </span><br><span class="line"></span><br><span class="line">    <span class="comment"># 打开日志文件的方式</span></span><br><span class="line">    filemode = open_type</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>配置说明</p>
</blockquote>
<ul>
<li><p><code>level</code></p>
<p>表示日志记录级别</p>
<p>所谓级别包括：调试级(debug) ，信息级(info)，警告级(warning)，错误级(error)，严重级(critical)</p>
<p>其中的优先级关系为：debug &lt; info &lt; warning &lt;error &lt; critical</p>
<p>日志本身设置有级别（如本例为INFO)，只会记录不小于自身级别的的信息（如本例设置就不会记录DEBUG级别信息）</p>
</li>
<li><p><code>format</code></p>
<p> 格式配置，核心信息为我们需要记录的<code>%(message)s</code>，此外还可以记录时间、文件名、行号、日志级别等信息</p>
</li>
<li><p><code>datefmt</code></p>
<p>时间格式设置<code>&#39;%a, %Y-%m-%d %H:%M:%S&#39;</code>分别表示 -星期 -年 -月 -日 -时 -分 -秒</p>
</li>
<li><p><code>filename</code></p>
<p>日志文件路径</p>
</li>
<li><p><code>filemode</code></p>
<p>日志文件打开模式，一般为<code>w</code>（写入）或<code>a</code>（追加）</p>
</li>
</ul>
<blockquote>
<p>日志记录示例</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">logging.debug(<span class="string">'debug'</span>)  <span class="comment"># this message won't be wrote to the log file, for the priority of DEBUG is lower than INFO</span></span><br><span class="line">    logging.info(<span class="string">'info'</span>)</span><br><span class="line">    logging.warning(<span class="string">'warning'</span>)</span><br><span class="line">    logging.error(<span class="string">'error'</span>)</span><br><span class="line">    logging.critical(<span class="string">'critical'</span>)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>日志文件信息</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Sat, 2020-04-11 15:08:38 logging_test.py[line:51] INFO info</span><br><span class="line">Sat, 2020-04-11 15:08:38 logging_test.py[line:52] WARNING warning</span><br><span class="line">Sat, 2020-04-11 15:08:38 logging_test.py[line:53] ERROR error</span><br><span class="line">Sat, 2020-04-11 15:08:38 logging_test.py[line:54] CRITICAL critical</span><br></pre></td></tr></table></figure>

<h2 id="获取源码"><a href="#获取源码" class="headerlink" title="获取源码"></a>获取源码</h2><blockquote>
<p>文中测试环境与所有源码可在<a href="https://github.com/zywvvd/Python_Practise" target="_blank" rel="noopener">Github</a>下载。</p>
</blockquote>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>在谷歌浏览器调试JavaScript</title>
    <url>/2020/04/03/coding/java_script/js-debug/</url>
    <content><![CDATA[<blockquote>
<p>本文介绍在谷歌浏览器调试JavaScript的方法。</p>
</blockquote>
<a id="more"></a>

<h2 id="测试代码"><a href="#测试代码" class="headerlink" title="测试代码"></a>测试代码</h2><blockquote>
<p>新建test.html文件，写入：</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Insert title here<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line">		</span><br><span class="line"><span class="actionscript">        alert(<span class="string">"Hello World!"</span>);</span></span><br><span class="line"><span class="javascript">	<span class="built_in">document</span>.write(<span class="string">"Hello World"</span>)</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> vAlert=&#123;&#125;;</span></span><br><span class="line"><span class="actionscript">        vAlert.show=<span class="function"><span class="keyword">function</span><span class="params">(msg)</span></span>&#123;</span></span><br><span class="line">            alert(msg);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> test_var = <span class="string">'test world'</span></span></span><br><span class="line"><span class="actionscript">        vAlert.show(<span class="string">"测试"</span>);</span></span><br><span class="line"><span class="javascript">	<span class="built_in">console</span>.log(<span class="string">'Hello World'</span>)</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(test_var)</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="调试运行"><a href="#调试运行" class="headerlink" title="调试运行"></a>调试运行</h2><ul>
<li><p>打开谷歌浏览器</p>
</li>
<li><p>运行test.html</p>
</li>
<li><p>F12 ，呼出开发者模式</p>
</li>
<li><p>进入Sources选项卡</p>
</li>
</ul>
<p><img src="https://photos.zywvvd.com/image/20200403001407.png" alt="谷歌浏览器开发者模式"></p>
<ul>
<li>在js 代码加入断点，F5刷新，单步运行</li>
</ul>
<p><img src="https://photos.zywvvd.com/image/20200403001539.png" alt="断点调试"></p>
<ul>
<li>期间网页会显示代码执行效果，并且在控制台有相应输出，自己也可以在控制台调试当前环境代码</li>
</ul>
<p><img src="https://photos.zywvvd.com/image/20200403001726.png" alt="控制台调试"></p>
]]></content>
      <categories>
        <category>编程知识</category>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>编程知识</tag>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>Python - 获取图像Exif详细信息</title>
    <url>/2020/04/01/python/get_image_exif/get-image-exif/</url>
    <content><![CDATA[<blockquote>
<p>相机拍摄照片会在文件中记录拍摄的重要参数，包括机身信息、光圈、焦距、感光度、时间、拍摄地点等等。本文介绍获取此类信息的方法。</p>
</blockquote>
<a id="more"></a>

<h2 id="安装python包"><a href="#安装python包" class="headerlink" title="安装python包"></a>安装python包</h2><blockquote>
<p>安装exifread：</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip install exifread</span><br></pre></td></tr></table></figure>

<h2 id="上代码"><a href="#上代码" class="headerlink" title="上代码"></a>上代码</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> exifread</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PhotoExifInfo</span><span class="params">()</span>:</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,photo_path)</span>:</span></span><br><span class="line">        self.photo_path = photo_path</span><br><span class="line">        self.baidu_map_ak = <span class="string">"your baidu map api key"</span></span><br><span class="line">        self.image_info_dict=&#123;&#125;</span><br><span class="line">        self.tags =&#123;&#125;</span><br><span class="line">        self.interested_keys = [</span><br><span class="line">            <span class="string">'EXIF ExposureMode'</span>,\</span><br><span class="line">            <span class="string">'EXIF ExposureTime'</span>,\</span><br><span class="line">            <span class="string">'EXIF Flash'</span>,\</span><br><span class="line">            <span class="string">'EXIF ISOSpeedRatings'</span>,\</span><br><span class="line">            <span class="string">'Image Model'</span>,\</span><br><span class="line">            <span class="string">'EXIF ExifImageWidth'</span>,\</span><br><span class="line">            <span class="string">'EXIF ExifImageLength'</span>,\</span><br><span class="line">            <span class="string">'Image DateTime'</span>,\</span><br><span class="line">            <span class="string">'EXIF DateTimeOriginal'</span>,\</span><br><span class="line">            <span class="string">'Image Make'</span>,\</span><br><span class="line"></span><br><span class="line">            <span class="comment"># lens</span></span><br><span class="line">            <span class="comment"># jiaoju</span></span><br><span class="line">        ]</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_tags</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        获取照片信息</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        image_content = open(self.photo_path, <span class="string">'rb'</span>)</span><br><span class="line">        tags = exifread.process_file(image_content)</span><br><span class="line">        self.tags = tags</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> self.interested_keys:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                info = tags[item]</span><br><span class="line">                self.image_info_dict[item] = info</span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                print(<span class="string">f'<span class="subst">&#123;self.photo_path&#125;</span> has no attribute of <span class="subst">&#123;item&#125;</span>'</span>)                </span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            </span><br><span class="line">        <span class="comment"># 遍历获取照片所有信息</span></span><br><span class="line">        <span class="comment">#for j, k in tags.items():</span></span><br><span class="line">            <span class="comment">#print(f"&#123;j&#125; : &#123;k&#125;")</span></span><br><span class="line">            <span class="comment">#print('拍摄时间：', tags['EXIF DateTimeOriginal'])</span></span><br><span class="line">            <span class="comment">#print('照相机制造商：', tags['Image Make'])</span></span><br><span class="line">            <span class="comment">#print('照相机型号：', tags['Image Model'])</span></span><br><span class="line">            <span class="comment">#print('照片尺寸：', tags['EXIF ExifImageWidth'], tags['EXIF ExifImageLength'])</span></span><br><span class="line">            </span><br><span class="line">     </span><br><span class="line">        image_content.close()</span><br><span class="line">       </span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_lng_lat</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""经纬度转换"""</span></span><br><span class="line">        tags = self.tags</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="comment"># 纬度</span></span><br><span class="line">            LatRef = tags[<span class="string">"GPS GPSLatitudeRef"</span>].printable</span><br><span class="line">            Lat = tags[<span class="string">"GPS GPSLatitude"</span>].printable[<span class="number">1</span>:<span class="number">-1</span>].replace(<span class="string">" "</span>, <span class="string">""</span>).replace(<span class="string">"/"</span>, <span class="string">","</span>).split(<span class="string">","</span>)</span><br><span class="line">            Lat = float(Lat[<span class="number">0</span>]) + float(Lat[<span class="number">1</span>]) / <span class="number">60</span> + float(Lat[<span class="number">2</span>]) / <span class="number">3600</span></span><br><span class="line">            <span class="keyword">if</span> LatRef != <span class="string">"N"</span>:</span><br><span class="line">                Lat = Lat * (<span class="number">-1</span>)</span><br><span class="line">            <span class="comment"># 经度</span></span><br><span class="line">            LonRef = tags[<span class="string">"GPS GPSLongitudeRef"</span>].printable</span><br><span class="line">            Lon = tags[<span class="string">"GPS GPSLongitude"</span>].printable[<span class="number">1</span>:<span class="number">-1</span>].replace(<span class="string">" "</span>, <span class="string">""</span>).replace(<span class="string">"/"</span>, <span class="string">","</span>).split(<span class="string">","</span>)</span><br><span class="line">            Lon = float(Lon[<span class="number">0</span>]) + float(Lon[<span class="number">1</span>]) / <span class="number">60</span> + float(Lon[<span class="number">2</span>]) / <span class="number">3600</span></span><br><span class="line">            <span class="keyword">if</span> LonRef != <span class="string">"E"</span>:</span><br><span class="line">                Lon = Lon * (<span class="number">-1</span>)</span><br><span class="line">            <span class="keyword">return</span> Lat,Lon</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            print(<span class="string">'Unable to get'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_city_info</span><span class="params">(self)</span>:</span></span><br><span class="line">        result = self.get_lng_lat()</span><br><span class="line">        <span class="keyword">if</span> result:</span><br><span class="line">            Lat, Lon = result</span><br><span class="line">            url = <span class="string">"https://api.map.baidu.com/reverse_geocoding/v3/?ak="</span>+self.baidu_map_ak+<span class="string">"&amp;output=json&amp;coordtype=wgs84ll&amp;location="</span> + str(Lat) + <span class="string">','</span> + str(Lon)</span><br><span class="line">            <span class="comment">#url = "https://api.map.baidu.com/reverse_geocoding/v3/?ak="+self.baidu_map_ak+"&amp;output=json&amp;coordtype=wgs84ll&amp;location=31.225696563611,121.49884033194"</span></span><br><span class="line">            response = requests.get(url).json()</span><br><span class="line">            status = response[<span class="string">'status'</span>]</span><br><span class="line">            <span class="keyword">if</span> status == <span class="number">0</span>:</span><br><span class="line">                address = response[<span class="string">'result'</span>][<span class="string">'formatted_address'</span>]</span><br><span class="line">                <span class="keyword">if</span> address != <span class="string">""</span>:</span><br><span class="line">                    self.image_info_dict[<span class="string">'Position'</span>] = address</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(<span class="string">'baidu_map error'</span>)</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_image_info</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.get_tags()</span><br><span class="line">        self.get_city_info()</span><br><span class="line">        <span class="keyword">return</span> self.image_info_dict</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    result = PhotoExifInfo(<span class="string">"test.jpeg"</span>).get_image_info()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> j, k <span class="keyword">in</span> result.items():</span><br><span class="line">        print(<span class="string">f"<span class="subst">&#123;j&#125;</span> : <span class="subst">&#123;k&#125;</span>"</span>)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>示例输出</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">EXIF ExposureMode : Auto Exposure</span><br><span class="line">EXIF ExposureTime : 10/24723</span><br><span class="line">EXIF Flash : Flash did not fire, auto mode</span><br><span class="line">EXIF ISOSpeedRatings : 50</span><br><span class="line">Image Model : vivo Z1</span><br><span class="line">EXIF ExifImageWidth : 4144</span><br><span class="line">EXIF ExifImageLength : 1968</span><br><span class="line">Image DateTime : 2019:11:03 11:34:24</span><br><span class="line">EXIF DateTimeOriginal : 2019:11:03 11:34:24</span><br><span class="line">Image Make : vivo</span><br><span class="line">Position : 上海市黄浦区中山南路187</span><br></pre></td></tr></table></figure>

<blockquote>
<p>代码中的<code>self.baidu_map_ak</code>需要去百度地图申请，具体方法移步: <a href="https://www.zywvvd.com/2020/04/01/coding/utils/baidumap-ak/">申请百度地图API Key进行百度地图开发，获取经纬度对应地点</a></p>
</blockquote>
<h2 id="获取源码"><a href="#获取源码" class="headerlink" title="获取源码"></a>获取源码</h2><blockquote>
<p>文中测试环境与所有源码可在<a href="https://github.com/zywvvd/Python_Practise" target="_blank" rel="noopener">Github</a>下载。</p>
</blockquote>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>申请百度地图API Key进行百度地图开发，获取经纬度对应地点</title>
    <url>/2020/04/01/coding/utils/baidumap-ak/</url>
    <content><![CDATA[<blockquote>
<p> 在程序中获取到了经纬度信息，使用百度地图的开发工具可以将其转换为地点名称。本文介绍申请百度AK（API Key），并用于提取地理信息位置名称的方法。</p>
</blockquote>
<a id="more"></a>

<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul>
<li>申请百度账号</li>
</ul>
<h2 id="申请百度AK"><a href="#申请百度AK" class="headerlink" title="申请百度AK"></a>申请百度AK</h2><ul>
<li>到 <a href="[https://lbsyun.baidu.com/index.php?title=%E9%A6%96%E9%A1%B5](https://lbsyun.baidu.com/index.php?title=首页)">百度地图平台</a> ，进入控制台</li>
</ul>
<p><img src="https://photos.zywvvd.com/image/20200401221918.png" alt="百度地图平台"></p>
<ul>
<li>注册开发者</li>
</ul>
<p><img src="https://photos.zywvvd.com/image/20200401222749.png" alt="注册"></p>
<ul>
<li><p>申请密钥</p>
<p><img src="https://photos.zywvvd.com/image/20200401223600.png" alt="申请密钥">)<img src="https://photos.zywvvd.com/image/20200401223600.png" alt=""></p>
</li>
<li><p>创建应用</p>
<p><img src="https://photos.zywvvd.com/image/20200401224843.png" alt=""></p>
</li>
<li><p>获得API Key</p>
</li>
</ul>
<p><img src="https://photos.zywvvd.com/image/20200401225152.png" alt="AK"></p>
<h2 id="全球逆地理编码"><a href="#全球逆地理编码" class="headerlink" title="全球逆地理编码"></a>全球逆地理编码</h2><blockquote>
<p>百度地图提供将经纬度转为地理位置的服务—— 全球逆地理编码:</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image/20200401231121.png" alt="逆地理编码"></p>
<ul>
<li>使用语法：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;api.map.baidu.com&#x2F;reverse_geocoding&#x2F;v3&#x2F;?ak&#x3D;您的ak&amp;output&#x3D;json&amp;coordtype&#x3D;wgs84ll&amp;location&#x3D;31.225696563611,121.49884033194  &#x2F;&#x2F;GET请求</span><br></pre></td></tr></table></figure>

<ul>
<li>使用示例，在Python中：</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">baidu_map_ak = <span class="comment">#你的百度ak</span></span><br><span class="line">url = <span class="string">"https://api.map.baidu.com/reverse_geocoding/v3/?ak="</span>+baidu_map_ak+<span class="string">"&amp;output=json&amp;coordtype=wgs84ll&amp;location=31.225696563611,121.49884033194"</span></span><br><span class="line">response = requests.get(url).json()</span><br><span class="line">status = response[<span class="string">'status'</span>]</span><br><span class="line">            <span class="keyword">if</span> status == <span class="number">0</span>:</span><br><span class="line">                	address = response[<span class="string">'result'</span>][<span class="string">'formatted_address'</span>]</span><br><span class="line">            		print( <span class="string">f"拍摄地点：<span class="subst">&#123;address&#125;</span>"</span> )</span><br><span class="line"></span><br><span class="line"><span class="comment"># -&gt; 拍摄地点：上海市黄浦区中山南路187</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>程序人生</category>
        <category>实用工具</category>
      </categories>
      <tags>
        <tag>程序人生</tag>
        <tag>实用工具</tag>
      </tags>
  </entry>
  <entry>
    <title>Next -22- 添加相册系列 -2- 使用七牛云qshell同步图像目录</title>
    <url>/2020/03/31/next/22_qiniuyun_qshell/qiniuyun-qshell/</url>
    <content><![CDATA[<blockquote>
<p>本文介绍使用 qshell 同步本地文件目录到存储空间并体现出层级结构的方法。</p>
</blockquote>
<a id="more"></a>

<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul>
<li>需要图床管理图片文件夹的需求</li>
<li>申请七牛云账号</li>
<li>开启七牛云图床，<a href="https://www.zywvvd.com/2020/03/25/hexo/9_add_image_bed/add-image-bed/">Hexo -9- 添加七牛云图床</a></li>
</ul>
<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><blockquote>
<p>要上传的资源目录：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> tree</span></span><br><span class="line">.</span><br><span class="line">├── 1</span><br><span class="line">│   ├── a.jpg</span><br><span class="line">│   ├── b.jpg</span><br><span class="line">│   └── c.jpg</span><br><span class="line">├── 2</span><br><span class="line">│   ├── d.jpg</span><br><span class="line">│   ├── e.jpg</span><br><span class="line">│   └── f.jpg</span><br><span class="line">├── g.jpg</span><br><span class="line">├── h.jpg</span><br><span class="line">├── i.jpg</span><br><span class="line">└── j.jpg</span><br></pre></td></tr></table></figure>



<h2 id="工具下载"><a href="#工具下载" class="headerlink" title="工具下载"></a>工具下载</h2><blockquote>
<p>命令行工具 qshell <a href="https://developer.qiniu.com/kodo/tools/1302/qshell" target="_blank" rel="noopener">传送门</a></p>
<ul>
<li>各种操作系统需要下载的版本文档说得很清楚，我的ubuntu18.04 x64下载了qshell-linux-x64-v2.4.1.zip</li>
<li>解压得到 qshell-linux-x64-v2.4.1</li>
<li>重命名为 qshell，并赋予可执行权限</li>
</ul>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mv qshell-linux-x64 qshell</span><br><span class="line">chmod +x qshell</span><br></pre></td></tr></table></figure>



<h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><blockquote>
<p>将qshell文件所在位置加入到 ~/.bashrc</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export PATH="/path of qshell:$PATH"</span><br></pre></td></tr></table></figure>

<blockquote>
<p>加载.bashrc使路径立即生效</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure>

<blockquote>
<p>测试，输入qshell -v 出现版本信息表明配置成功</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">qshell -v</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">qshell version v2.4.1</span></span><br></pre></td></tr></table></figure>



<h2 id="配置账户"><a href="#配置账户" class="headerlink" title="配置账户"></a>配置账户</h2><blockquote>
<p>需要鉴权的命令都需要依赖七牛账号下的 AccessKey 和 SecretKey ，位于个人中心 -&gt; 秘钥管理</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image/20200331231941.png" alt="秘钥管理"></p>
<blockquote>
<p>配置账户:</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">qshell account [&lt;AccessKey&gt; &lt;SecretKey&gt; &lt;Name&gt;]</span><br></pre></td></tr></table></figure>

<blockquote>
<p>之后再次输入 qshell account 命令验证设置是否成功</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">qshell account</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">Name: zywvvd</span></span><br><span class="line"><span class="meta">#</span><span class="bash">AccessKey: Bd0UYk1e9pFWK×××××××××××××××</span></span><br><span class="line"><span class="meta">#</span><span class="bash">SecretKey: ZFsdguzYE3QUl×××××××××××××××</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>此处操作后在当前用户主目录中生成 qshell 目录：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ls ~/.qshell/</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> account.json</span></span><br></pre></td></tr></table></figure>



<h2 id="编写同步目录文件"><a href="#编写同步目录文件" class="headerlink" title="编写同步目录文件"></a>编写同步目录文件</h2><blockquote>
<p>在上文提到的~/.qshell 目录中创建配置文件，文件内容如下：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> cat upload.conf </span></span><br><span class="line">&#123;</span><br><span class="line">    "src_dir" : "/home/vvd/VVD_Work/test",</span><br><span class="line">    "bucket" : "vvd-space"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<ul>
<li><p>src_dir 为刚刚我存放照片的路径</p>
</li>
<li><p>bucket 为你的七牛云空间名称</p>
</li>
</ul>
</blockquote>
<h2 id="同步文件"><a href="#同步文件" class="headerlink" title="同步文件"></a>同步文件</h2><blockquote>
<p>在~/.qshell文件夹下执行命令：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">qshell qupload upload.conf</span><br></pre></td></tr></table></figure>

<blockquote>
<p>返回上传日志：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Writing upload log to file /home/vvd/.qshell/qupload/040adc5d316ff8cfc274b2e099628234/040adc5d316ff8cfc274b2e099628234.log</span><br><span class="line"></span><br><span class="line">Uploading /home/vvd/VVD_Work/test/1/a.jpg =&gt; 1/a.jpg [1/10, 10.0%] ...</span><br><span class="line">Uploading /home/vvd/VVD_Work/test/1/b.jpg =&gt; 1/b.jpg [2/10, 20.0%] ...</span><br><span class="line">Uploading /home/vvd/VVD_Work/test/1/c.jpg =&gt; 1/c.jpg [3/10, 30.0%] ...</span><br><span class="line">Uploading /home/vvd/VVD_Work/test/2/d.jpg =&gt; 2/d.jpg [4/10, 40.0%] ...</span><br><span class="line">Uploading /home/vvd/VVD_Work/test/2/e.jpg =&gt; 2/e.jpg [5/10, 50.0%] ...</span><br><span class="line">Uploading /home/vvd/VVD_Work/test/2/f.jpg =&gt; 2/f.jpg [6/10, 60.0%] ...</span><br><span class="line">Uploading /home/vvd/VVD_Work/test/g.jpg =&gt; g.jpg [7/10, 70.0%] ...</span><br><span class="line">Uploading /home/vvd/VVD_Work/test/h.jpg =&gt; h.jpg [8/10, 80.0%] ...</span><br><span class="line">Uploading /home/vvd/VVD_Work/test/i.jpg =&gt; i.jpg [9/10, 90.0%] ...</span><br><span class="line">Uploading /home/vvd/VVD_Work/test/j.jpg =&gt; j.jpg [10/10, 100.0%] ...</span><br><span class="line"></span><br><span class="line">See upload log at path /home/vvd/.qshell/qupload/040adc5d</span><br></pre></td></tr></table></figure>



<h2 id="查看同步日志"><a href="#查看同步日志" class="headerlink" title="查看同步日志"></a>查看同步日志</h2><blockquote>
<p>日志存放在 ~/.qshell 文件夹下qupload文件夹内：</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image/20200331234827.png" alt="查看日志"></p>
<h2 id="进入七牛云控制台查看上传的文件"><a href="#进入七牛云控制台查看上传的文件" class="headerlink" title="进入七牛云控制台查看上传的文件"></a>进入七牛云控制台查看上传的文件</h2><blockquote>
<p>在控制台-&gt; 空间管理 -&gt; 文件管理 可以看到同步的文件</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image/20200331234935.png" alt="空间图片"></p>
<h2 id="图片文件目录更新"><a href="#图片文件目录更新" class="headerlink" title="图片文件目录更新"></a>图片文件目录更新</h2><blockquote>
<p>当我们更新了原始图片目录时（新建文件夹new，图片new.jpg）：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tree</span><br><span class="line">.</span><br><span class="line">├── 1</span><br><span class="line">│   ├── a.jpg</span><br><span class="line">│   ├── b.jpg</span><br><span class="line">│   └── c.jpg</span><br><span class="line">├── 2</span><br><span class="line">│   ├── d.jpg</span><br><span class="line">│   ├── e.jpg</span><br><span class="line">│   └── f.jpg</span><br><span class="line">├── g.jpg</span><br><span class="line">├── h.jpg</span><br><span class="line">├── i.jpg</span><br><span class="line">├── j.jpg</span><br><span class="line">└── new</span><br><span class="line">    └── new.jpg</span><br></pre></td></tr></table></figure>

<h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><blockquote>
<p>回到~/.qshell 上传文件：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"> qshell qupload upload.conf </span><br><span class="line">Writing upload log to file /home/vvd/.qshell/qupload/c50b44d8de5ae468d8080f1f37fb946c/c50b44d8de5ae468d8080f1f37fb946c.log</span><br><span class="line"></span><br><span class="line">Uploading /home/vvd/VVD_Work/test/1/a.jpg =&gt; 1/a.jpg [1/8, 12.5%] ...</span><br><span class="line">Uploading /home/vvd/VVD_Work/test/1/b.jpg =&gt; 1/b.jpg [2/8, 25.0%] ...</span><br><span class="line">Uploading /home/vvd/VVD_Work/test/1/c.jpg =&gt; 1/c.jpg [3/8, 37.5%] ...</span><br><span class="line">Uploading /home/vvd/VVD_Work/test/2/d.jpg =&gt; 2/d.jpg [4/8, 50.0%] ...</span><br><span class="line">Uploading /home/vvd/VVD_Work/test/2/e.jpg =&gt; 2/e.jpg [5/8, 62.5%] ...</span><br><span class="line">Uploading /home/vvd/VVD_Work/test/2/f.jpg =&gt; 2/f.jpg [6/8, 75.0%] ...</span><br><span class="line">Uploading /home/vvd/VVD_Work/test/g.jpg =&gt; g.jpg [7/8, 87.5%] ...</span><br><span class="line">Uploading /home/vvd/VVD_Work/test/h.jpg =&gt; h.jpg [8/8, 100.0%] ...</span><br><span class="line"></span><br><span class="line">See upload log at path /home/vvd/.qshell/qupload/c50b44d8de5ae468d8080f1f37fb946c/c50b44d8de5ae468d8080f1f37fb946c.log</span><br></pre></td></tr></table></figure>

<blockquote>
<p>发现并没有更新，不知道是不是有别的函数来完成这个功能。</p>
<p>于是写了简单脚本upload.sh可以实现实时同步：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">rm  -rf  ~/.qshell/qupload</span><br><span class="line">qshell  qupload  ~/.qshell/upload.conf</span><br></pre></td></tr></table></figure>

<blockquote>
<p>使用时只需sh upload.sh即可，正好不用每次都找那个 upload.conf 了</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image/20200401002653.png" alt="真 - 同步文件夹"></p>
<h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><blockquote>
<p>咳咳，人家七牛云有这个设定的，不用自己费劲删人家日志。</p>
<p>在upload.conf中加入配置：</p>
<ul>
<li><p><strong>rescan_local</strong>：支持本地增量上传</p>
</li>
<li><p><strong>overwrite</strong> ：支持本地文件覆盖上传</p>
</li>
</ul>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;src_dir&quot; : &quot;&#x2F;home&#x2F;vvd&#x2F;VVD_Work&#x2F;test&quot;,</span><br><span class="line">    &quot;bucket&quot; : &quot;vvd-space&quot;,</span><br><span class="line">    &quot;rescan_local&quot; : true,</span><br><span class="line">    &quot;overwrite&quot; : true</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>再上传就好：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"> qshell qupload upload.conf </span><br><span class="line">Writing upload log to file /home/vvd/.qshell/qupload/c50b44d8de5ae468d8080f1f37fb946c/c50b44d8de5ae468d8080f1f37fb946c.log</span><br><span class="line"></span><br><span class="line">Uploading /home/vvd/VVD_Work/test/1/a.jpg =&gt; 1/a.jpg [1/12, 8.3%] ...</span><br><span class="line">Uploading /home/vvd/VVD_Work/test/1/b.jpg =&gt; 1/b.jpg [2/12, 16.7%] ...</span><br><span class="line">Uploading /home/vvd/VVD_Work/test/1/c.jpg =&gt; 1/c.jpg [3/12, 25.0%] ...</span><br><span class="line">Uploading /home/vvd/VVD_Work/test/2/d.jpg =&gt; 2/d.jpg [4/12, 33.3%] ...</span><br><span class="line">Uploading /home/vvd/VVD_Work/test/2/e.jpg =&gt; 2/e.jpg [5/12, 41.7%] ...</span><br><span class="line">Uploading /home/vvd/VVD_Work/test/2/f.jpg =&gt; 2/f.jpg [6/12, 50.0%] ...</span><br><span class="line">Uploading /home/vvd/VVD_Work/test/3/g.jpg =&gt; 3/g.jpg [7/12, 58.3%] ...</span><br><span class="line">Uploading /home/vvd/VVD_Work/test/g.jpg =&gt; g.jpg [8/12, 66.7%] ...</span><br><span class="line">Uploading /home/vvd/VVD_Work/test/h.jpg =&gt; h.jpg [9/12, 75.0%] ...</span><br><span class="line">Uploading /home/vvd/VVD_Work/test/i.jpg =&gt; i.jpg [10/12, 83.3%] ...</span><br><span class="line">Uploading /home/vvd/VVD_Work/test/j.jpg =&gt; j.jpg [11/12, 91.7%] ...</span><br><span class="line">Uploading /home/vvd/VVD_Work/test/new/new.jpg =&gt; new/new.jpg [12/12, 100.0%] ...</span><br><span class="line"></span><br><span class="line">See upload log at path /home/vvd/.qshell/qupload/c50b44d8de5ae468d8080f1f37fb946c/c50b44d8de5ae468d8080f1f37fb946c.log</span><br></pre></td></tr></table></figure>



<h2 id="qshell-qupload-配置"><a href="#qshell-qupload-配置" class="headerlink" title="qshell qupload 配置"></a>qshell qupload 配置</h2><blockquote>
<p><code>qupload</code> 功能需要配置文件的支持，配置文件支持的全部参数如下：</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   &quot;src_dir&quot;            :   &quot;&lt;LocalPath&gt;&quot;,</span><br><span class="line">   &quot;bucket&quot;             :   &quot;&lt;Bucket&gt;&quot;,</span><br><span class="line">   &quot;file_list&quot;          :   &quot;&lt;FileList&gt;&quot;,</span><br><span class="line">   &quot;key_prefix&quot;         :   &quot;&lt;Key Prefix&gt;&quot;,</span><br><span class="line">   &quot;up_host&quot;            :   &quot;&lt;Upload Host&gt;&quot;,</span><br><span class="line">   &quot;ignore_dir&quot;         :   false,</span><br><span class="line">   &quot;overwrite&quot;          :   false,</span><br><span class="line">   &quot;check_exists&quot;       :   false,</span><br><span class="line">   &quot;check_hash&quot;         :   false,</span><br><span class="line">   &quot;check_size&quot;         :   false,</span><br><span class="line">   &quot;rescan_local&quot;       :   true,</span><br><span class="line">   &quot;skip_file_prefixes&quot; :   &quot;test,demo,&quot;,</span><br><span class="line">   &quot;skip_path_prefixes&quot; :   &quot;hello&#x2F;,temp&#x2F;&quot;,</span><br><span class="line">   &quot;skip_fixed_strings&quot; :   &quot;.svn,.git&quot;,</span><br><span class="line">   &quot;skip_suffixes&quot;      :   &quot;.DS_Store,.exe&quot;,</span><br><span class="line">   &quot;log_file&quot;           :   &quot;upload.log&quot;,</span><br><span class="line">   &quot;log_level&quot;          :   &quot;info&quot;,</span><br><span class="line">   &quot;log_rotate&quot;         :   1,</span><br><span class="line">   &quot;log_stdout&quot;         :   false,</span><br><span class="line">   &quot;file_type&quot;          :   0</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>参数名</th>
<th>描述</th>
<th>可选参数</th>
</tr>
</thead>
<tbody><tr>
<td>src_dir</td>
<td>本地同步路径，为全路径格式，工具将同步该目录下面所有的文件；不支持本地路径下的目录软连接。在Windows系统下面使用的时候，注意<code>src_dir</code>的设置遵循<code>D:\\jemy\\backup</code>这种方式。也就是路径里面的<code>\</code>要有两个（<code>\\</code>）</td>
<td>N</td>
</tr>
<tr>
<td>bucket</td>
<td>同步数据的目标空间名称，可以为公开空间或私有空间</td>
<td>N</td>
</tr>
<tr>
<td>file_list</td>
<td>待同步文件列表，该文件列表内容必须是相对于<code>src_dir</code>的文件相对路径列表，可以不指定，工具将自动获取<code>src_dir</code>下面的文件列表。请使用 <code>dircache</code> 命令生成这个文件列表，生成之后可以手动删除不需要的行</td>
<td>Y</td>
</tr>
<tr>
<td>up_host</td>
<td>上传域名，可选设置，一般情况下不需要指定</td>
<td>Y</td>
</tr>
<tr>
<td>ignore_dir</td>
<td>保存文件在七牛空间时，使用的文件名是否忽略本地路径，默认为false</td>
<td>Y</td>
</tr>
<tr>
<td>key_prefix</td>
<td>在保存文件在七牛空间时，使用的文件名的前缀，默认为空字符串</td>
<td>Y</td>
</tr>
<tr>
<td>overwrite</td>
<td>是否覆盖空间中已有的同名文件，默认不覆盖。</td>
<td>Y</td>
</tr>
<tr>
<td>check_exists</td>
<td>每个文件上传之前是否检查空间中是否存在同名文件，默认为false，不检查</td>
<td>Y</td>
</tr>
<tr>
<td>check_hash</td>
<td>在<code>check_exists</code>设置为<code>true</code>的情况下生效，是否检查本地文件hash和空间文件hash一致，默认不检查，节约同步时间</td>
<td>Y</td>
</tr>
<tr>
<td>check_size</td>
<td>在<code>check_exists</code>设置为<code>true</code>的情况下，如果<code>check_hash</code>为<code>false</code>，那么你可以设置<code>check_size</code>为<code>true</code>做简单的大小检查，以查看本地文件和空间文件大小是否一致，默认不检查</td>
<td>Y</td>
</tr>
<tr>
<td>skip_file_prefixes</td>
<td>跳过所有文件名（不带相对路径）以该前缀列表里面字符串为前缀的文件</td>
<td>Y</td>
</tr>
<tr>
<td>skip_path_prefixes</td>
<td>跳过所有文件路径（相对路径）以该前缀列表里面字符串为前缀的文件</td>
<td>Y</td>
</tr>
<tr>
<td>skip_fixed_strings</td>
<td>跳过所有文件路径（相对路径）中包含该字符串列表中字符串的文件</td>
<td>Y</td>
</tr>
<tr>
<td>skip_suffixes</td>
<td>跳过所有以该后缀列表里面字符串为后缀的文件或者目录</td>
<td>Y</td>
</tr>
<tr>
<td>rescan_local</td>
<td>默认情况下，本地新增的文件不会被同步，需要手动设置为true才会去检测新增文件。</td>
<td>Y</td>
</tr>
<tr>
<td>log_level</td>
<td>上传日志输出级别，可选值为<code>debug</code>,<code>info</code>,<code>warn</code>,<code>error</code>,默认<code>info</code></td>
<td>Y</td>
</tr>
<tr>
<td>log_file</td>
<td>上传日志的输出文件，如果不指定会输出到qshell工作目录下默认的文件中，文件名可以在终端输出看到</td>
<td>Y</td>
</tr>
<tr>
<td>log_rotate</td>
<td>上传日志文件的切换周期，单位为天，默认为1天即切换到新的上传日志文件</td>
<td>Y</td>
</tr>
<tr>
<td>log_stdout</td>
<td>上传日志是否同时输出一份到标准终端，默认为false，主要在调试上传功能时可以指定为true</td>
<td>Y</td>
</tr>
<tr>
<td>file_type</td>
<td>文件存储类型，默认为<code>0</code>(标准存储） <code>1</code>为低频存储</td>
<td>Y</td>
</tr>
<tr>
<td>delete_on_success</td>
<td>上传成功的文件，同时删除本地文件，以达到节约磁盘的目的，比如日志归档的场景，默认为<code>false</code>，如果需要开启功能，设置为<code>true</code>即可。</td>
<td>Y</td>
</tr>
</tbody></table>
<h3 id="配置文件示例"><a href="#配置文件示例" class="headerlink" title="配置文件示例"></a>配置文件示例</h3><blockquote>
<p>我的配置文件使用了常用的实用配置，供大家参考：</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    	&quot;src_dir&quot; : &quot;&#x2F;Hexo&#x2F;Album_Temp&quot;,       	### 上传文件夹路径（必选）</span><br><span class="line">    	&quot;bucket&quot; : &quot;vvd-space&quot;,								### 七牛云空间名称（必选）</span><br><span class="line">    	&quot;rescan_local&quot; : true,								   ### 支持增量上传（重要）</span><br><span class="line">		&quot;key_prefix&quot;: &quot;vvd_hexo&#x2F;&quot;,						### 上传图像的前缀</span><br><span class="line">		&quot;check_exists&quot;: true,								   ### 上传前是否检查文件是否存在</span><br><span class="line">		&quot;check_size&quot;:true,										 ### 如果存在同名文件检查大小是否相同（比哈希快一些）</span><br><span class="line">		&quot;skip_suffixes&quot;: &quot;.json,.log,.conf&quot;,		### 后缀列表，在上传文件夹路径中文件有这些后缀的就忽略不上传</span><br><span class="line">    	&quot;overwrite&quot; : true										  ### 可否覆盖原文件</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>上传后的一张图片链接：</p>
</blockquote>
<p><a href="https://photos.zywvvd.com/vvd_hexo/2015_11_28_hefei_ustc_fengjing/1.jpg" target="_blank" rel="noopener">https://photos.zywvvd.com/vvd_hexo/2015_11_28_hefei_ustc_fengjing/1.jpg</a></p>
]]></content>
      <categories>
        <category>Next</category>
      </categories>
      <tags>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>swig 语法介绍</title>
    <url>/2020/03/31/coding/front_end/swig/swig-grammar/</url>
    <content><![CDATA[<blockquote>
<p>Next 主题使用swig引擎，swig 是node端的一个优秀简洁的模板引擎，本文介绍swig基本语法。</p>
</blockquote>
<a id="more"></a>



<h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ul>
<li>支持大多数主流浏览器。</li>
<li>表达式兼容性好。</li>
<li>面向对象的模板继承。</li>
<li>将过滤器和转换应用到模板中的输出。</li>
<li>可根据路劲渲染页面。</li>
<li>支持页面复用。</li>
<li>支持动态页面。</li>
<li>可扩展、可定制。</li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install swig --save</span></span><br></pre></td></tr></table></figure>



<h2 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h2><blockquote>
<p>swig有多种实现方式来编译和渲染模板</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> swig = <span class="built_in">require</span>(<span class="string">'swig'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Compile a file and store it, rendering it later</span></span><br><span class="line"><span class="keyword">var</span> tpl = swig.compileFile(<span class="string">'/path/to/template.html'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(tpl(&#123; <span class="attr">article</span>: &#123; <span class="attr">title</span>: <span class="string">'Swig is fun!'</span> &#125;&#125;));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 直接渲染字符串模板</span></span><br><span class="line"><span class="built_in">console</span>.log(swig.render(<span class="string">'&#123;% if foo %&#125;Hooray!&#123;% endif %&#125;'</span>, &#123; <span class="attr">locals</span>: &#123; <span class="attr">foo</span>: <span class="literal">true</span> &#125;&#125;));</span><br></pre></td></tr></table></figure>



<h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><blockquote>
<p>模板中的变量使用双大括号来声明。例如</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&#123;a&#125;&#125;</span><br></pre></td></tr></table></figure>



<h3 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h3><blockquote>
<p>变量的属性可以使用<code>.</code>或者<code>[ ]</code>来访问，如下两个是等价的:</p>
</blockquote>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">&#123;&#123; foo.bar &#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// is equivalent to</span></span><br><span class="line">&#123;&#123; foo[<span class="string">'bar'</span>] &#125;&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>他遵循和javascript一样的原则，如果关键词中有<code>-</code>，则必须使用<code>[]</code>来访问属性，不能使用<code>.</code></p>
</blockquote>
<p><strong>Bad!</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&#123; foo.chicken-tacos &#125;&#125;</span><br></pre></td></tr></table></figure>

<p><strong>Good!</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;&#123; foo[<span class="string">'chicken-tacos'</span>] &#125;&#125;</span><br></pre></td></tr></table></figure>



<h3 id="未定义和空值"><a href="#未定义和空值" class="headerlink" title="未定义和空值"></a>未定义和空值</h3><blockquote>
<p>如果一个变量未定义或者是空值，在渲染的时候，将会在相应的位置输出一个空的字符串，而不会报异常。</p>
</blockquote>
<h3 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h3><blockquote>
<p>变量可以用特殊的链式结构进行修改过滤。</p>
</blockquote>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">&#123;&#123; name|title &#125;&#125; was born <span class="keyword">on</span> &#123;&#123; birthday|date(<span class="string">'F jS, Y'</span>) &#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// =&gt; Jane was born on July 6th, 1985</span></span><br></pre></td></tr></table></figure>



<h3 id="方法（函数）"><a href="#方法（函数）" class="headerlink" title="方法（函数）"></a>方法（函数）</h3><blockquote>
<p>变量也可以是 JavaScript functions. 值得注意的是，不管你的 autoescape设定是什么样的，方法都不会被 auto-escaped.</p>
</blockquote>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> locals = &#123; <span class="attr">mystuff</span>: <span class="function"><span class="keyword">function</span> <span class="title">mystuff</span>(<span class="params"></span>) </span>&#123; <span class="keyword">return</span> <span class="string">'&lt;p&gt;Things!&lt;/p&gt;'</span>; &#125;&#125;;</span><br><span class="line">swig.render(<span class="string">'&#123;&#123; mystuff() &#125;&#125;'</span>, &#123; <span class="attr">locals</span>: locals &#125;);</span><br><span class="line"><span class="comment">// =&gt; &lt;p&gt;Things!&lt;/p&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p> 如果要对函数强制转义输出，只需通过管道将其传递到转义筛选器。</p>
</blockquote>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&#123;&#123; mystuff()|<span class="built_in">escape</span> &#125;&#125;</span><br><span class="line"><span class="comment">// =&gt; &lt;p&gt;Things&lt;/p&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="逻辑标签"><a href="#逻辑标签" class="headerlink" title="逻辑标签"></a>逻辑标签</h2><blockquote>
<p>Swig包含一些基本的可选的代码块，叫做标签，使用标签可以更好的控制模板的渲染输出。标签示例如下：</p>
</blockquote>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> foo %&#125;bar&#123;% <span class="keyword">endif</span> %&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Create a list of people, only if there are items in the people array</span></span><br><span class="line">&#123;% <span class="keyword">for</span> person in people %&#125;</span><br><span class="line">  &#123;% <span class="keyword">if</span> loop.first %&#125;&lt;ol&gt;&#123;% <span class="keyword">endif</span> %&#125;</span><br><span class="line">  &lt;li&gt;&#123;&#123; person.name &#125;&#125;&lt;/li&gt;</span><br><span class="line">  &#123;% <span class="keyword">if</span> loop.last %&#125;&lt;/ol&gt;&#123;% <span class="keyword">endif</span> %&#125;</span><br><span class="line">&#123;% <span class="keyword">endfor</span> %&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>其中<code>{ %  endif  % }</code>和<code>{ %  endfor  % }</code>是结束标签，用于表明代码块的的结束。</p>
</blockquote>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&#123;% block tacos %&#125;</span><br><span class="line">  <span class="comment">//...</span></span><br><span class="line">&#123;% endblock tacos %&#125;</span><br><span class="line">&#123;% block burritos %&#125;</span><br><span class="line">  &#123;% <span class="keyword">if</span> foo %&#125;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">  &#123;% <span class="keyword">endif</span> %&#125; <span class="comment">//the above will render if foo == true</span></span><br><span class="line">&#123;% endblock burritos %&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>更多关于tag的信息，请查看<a href="https://link.jianshu.com?t=http://node-swig.github.io/swig-templates/docs/tags/" target="_blank" rel="noopener">官方文档</a>，这里挑几个重点的经常见到的说说。</p>
</blockquote>
<h3 id="block标签"><a href="#block标签" class="headerlink" title="block标签"></a>block标签</h3><blockquote>
<p>用于声明一个代码块，继承的子模板中间可以改写或者拓展父模板中同名的代码块。也可查看#继承</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% block body %&#125;...&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure>



<h3 id="if-else-endif和if-elseif-endif标签"><a href="#if-else-endif和if-elseif-endif标签" class="headerlink" title="if-else-endif和if-elseif-endif标签"></a><code>if-else-endif</code>和<code>if-elseif-endif</code>标签</h3><blockquote>
<p>这个与java中的if功能类似，做条件判断时使用。满足条件的内容将会被输出。</p>
</blockquote>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> x|lower === <span class="string">'tacos'</span> %&#125;</span><br><span class="line">  You can use filters <span class="keyword">on</span> any operand <span class="keyword">in</span> the statement.</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> x <span class="keyword">in</span> y %&#125;</span><br><span class="line">  If x <span class="keyword">is</span> a value that <span class="keyword">is</span> present <span class="keyword">in</span> y, <span class="keyword">this</span> will <span class="keyword">return</span> <span class="literal">true</span>.</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> <span class="keyword">false</span> %&#125;</span><br><span class="line">  Tacos</span><br><span class="line">&#123;% <span class="keyword">elseif</span> <span class="keyword">true</span> %&#125;</span><br><span class="line">  Burritos</span><br><span class="line">&#123;% <span class="keyword">else</span> %&#125;</span><br><span class="line">  Churros</span><br><span class="line">&#123;% <span class="keyword">endif</span> %&#125;</span><br><span class="line"><span class="comment">// =&gt; Burritos</span></span><br></pre></td></tr></table></figure>



<h3 id="extends-标签"><a href="#extends-标签" class="headerlink" title="extends 标签"></a>extends 标签</h3><blockquote>
<p>使当前的模板继承一个父模板，这个标签必须位于模板的最前面。其他查看#继承</p>
</blockquote>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line">&#123;% <span class="keyword">extends</span> <span class="string">"./layout.html"</span> %&#125;</span><br></pre></td></tr></table></figure>

<h3 id="for标签"><a href="#for标签" class="headerlink" title="for标签"></a>for标签</h3><p>用于遍历对象和数组时使用。</p>
<h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><table>
<thead>
<tr>
<th>Name</th>
<th>Type</th>
<th>可选</th>
<th>Default</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>key</td>
<td><code>literal</code></td>
<td>✔</td>
<td><code>undefined</code></td>
<td>A shortcut to the index of the array or current key accessor.</td>
</tr>
<tr>
<td>variable</td>
<td><code>literal</code></td>
<td></td>
<td><code>undefined</code></td>
<td>The current value will be assigned to this variable name temporarily. The variable will be reset upon ending the for tag.</td>
</tr>
<tr>
<td>in</td>
<td><code>literal</code></td>
<td></td>
<td><code>undefined</code></td>
<td>Literally, “in”. This token is required.</td>
</tr>
<tr>
<td>object</td>
<td><code>object</code></td>
<td></td>
<td><code>undefined</code></td>
<td>An enumerable object that will be iterated over.</td>
</tr>
</tbody></table>
<h4 id="Returns"><a href="#Returns" class="headerlink" title="Returns"></a>Returns</h4><p><code>loop.index</code>: The current iteration of the loop (1-indexed)</p>
<p><code>loop.index0</code>: The current iteration of the loop (0-indexed)</p>
<p><code>loop.revindex</code>: The number of iterations from the end of the loop (1-indexed)</p>
<p><code>loop.revindex0</code>: The number of iterations from the end of the loop (0-indexed)</p>
<p><code>loop.key</code>: If the iterator is an object, this will be the key of the current item, otherwise it will be the same as the loop.index.</p>
<p><code>loop.first</code>: True if the current object is the first in the object or array.</p>
<p><code>loop.last</code>: True if the current object is the last in the object or array.</p>
<h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">// obj = &#123; one: 'hi', two: 'bye' &#125;;</span><br><span class="line">&#123;% for x in obj %&#125;</span><br><span class="line">  &#123;% if loop.first %&#125;<span class="tag">&lt;<span class="name">ul</span>&gt;</span>&#123;% endif %&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123; loop.index &#125;&#125; - &#123;&#123; loop.key &#125;&#125;: &#123;&#123; x &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  &#123;% if loop.last %&#125;<span class="tag">&lt;/<span class="name">ul</span>&gt;</span>&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line">// =&gt; <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">//    <span class="tag">&lt;<span class="name">li</span>&gt;</span>1 - one: hi<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">//    <span class="tag">&lt;<span class="name">li</span>&gt;</span>2 - two: bye<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">//    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">// arr = [1, 2, 3]</span></span><br><span class="line"><span class="comment">// Reverse the array, shortcut the key/index to `key`</span></span><br><span class="line">&#123;% <span class="keyword">for</span> key, <span class="keyword">val</span> <span class="keyword">in</span> arr|reverse %&#125;</span><br><span class="line">&#123;&#123; key &#125;&#125; -- &#123;&#123; <span class="keyword">val</span> &#125;&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line"><span class="comment">// =&gt; 0 -- 3</span></span><br><span class="line"><span class="comment">//    1 -- 2</span></span><br><span class="line"><span class="comment">//    2 -- 1</span></span><br></pre></td></tr></table></figure>





<h3 id="import"><a href="#import" class="headerlink" title="import"></a>import</h3><blockquote>
<p>Source: <a href="https://link.jianshu.com?t=https://github.com/paularmstrong/swig/blob/v2.0.0/lib/tags/import.js" target="_blank" rel="noopener">lib/tags/import.js</a></p>
</blockquote>
<blockquote>
<p>允许你引入定义在别的文件当中的宏到你当前的模板文件当中。</p>
</blockquote>
<blockquote>
<p>The import tag is specifically designed for importing macros into your template with a specific context scope. This is very useful for keeping your macros from overriding template context that is being injected by your server-side page generation.</p>
</blockquote>
<h4 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h4><table>
<thead>
<tr>
<th>Name</th>
<th>Type</th>
<th>Optional</th>
<th>Default</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>file</td>
<td><code>string orvar</code></td>
<td></td>
<td><code>undefined</code></td>
<td>Relative path from the current template file to the file to import macros from.</td>
</tr>
<tr>
<td>as</td>
<td><code>literal</code></td>
<td></td>
<td><code>undefined</code></td>
<td>Literally, “as”.</td>
</tr>
<tr>
<td>varname</td>
<td><code>literal</code></td>
<td></td>
<td><code>undefined</code></td>
<td>Local-accessible object name to assign the macros to.</td>
</tr>
</tbody></table>
<h4 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a>示例</h4><figure class="highlight dart"><table><tr><td class="code"><pre><span class="line">&#123;% <span class="keyword">import</span> <span class="string">'./formmacros.html'</span> <span class="keyword">as</span> form %&#125;</span><br><span class="line">&#123;&#123; form.input(<span class="string">"text"</span>, <span class="string">"name"</span>) &#125;&#125;</span><br><span class="line"><span class="comment">// =&gt; &lt;input type="text" name="name"&gt;</span></span><br><span class="line">&#123;% <span class="keyword">import</span> <span class="string">"../shared/tags.html"</span> <span class="keyword">as</span> tags %&#125;</span><br><span class="line">&#123;&#123; tags.stylesheet(<span class="string">'global'</span>) &#125;&#125;</span><br><span class="line"><span class="comment">// =&gt; &lt;link rel="stylesheet" href="/global.css"&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><blockquote>
<p>Comments注释在渲染时将会被忽略，他们在渲染之前就会移除，所以没人能看到你的注释，除非他们查看你的源代码。</p>
</blockquote>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">&#123; <span class="meta">#</span></span><br><span class="line">This <span class="keyword">is</span> a comment.</span><br><span class="line">It will be fully stripped and ignored during parsing.</span><br><span class="line"><span class="meta"># &#125;</span></span><br></pre></td></tr></table></figure>





<h2 id="空格控制符"><a href="#空格控制符" class="headerlink" title="空格控制符"></a>空格控制符</h2><blockquote>
<p>模板中的任何空格都会被输出在最终生成的页面上。然而，你可以使用空格控制符来消除空格。</p>
</blockquote>
<blockquote>
<p>在tag的前面或者后面添加<code>-</code>来移除前面或者后面的空格。</p>
</blockquote>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// seq = [1, 2, 3, 4, 5]</span></span><br><span class="line">&#123;% <span class="keyword">for</span> item in seq -%&#125;&#123;&#123; item &#125;&#125;</span><br><span class="line">&#123;%- <span class="keyword">endfor</span> %&#125;</span><br><span class="line"><span class="comment">// =&gt; 12345</span></span><br></pre></td></tr></table></figure>

<p><code>注意</code> 没有任何空格输出</p>
<h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><blockquote>
<p>swig使用<code>extends</code>关键字来对模板进行继承</p>
</blockquote>
<ul>
<li>layout.html</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>&#123;% block title %&#125;My Site&#123;% endblock %&#125;<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  &#123;% block head %&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"main.css"</span>&gt;</span></span><br><span class="line">  &#123;% endblock %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  &#123;% block content %&#125;&#123;% endblock %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>index.html</li>
</ul>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line">&#123;% <span class="keyword">extends</span> <span class="string">'layout.html'</span> %&#125;</span><br><span class="line">&#123;% block title %&#125;My Page&#123;% endblock %&#125;</span><br><span class="line">&#123;% block head %&#125;</span><br><span class="line">  &#123;% parent %&#125;</span><br><span class="line">  &lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"custom.css"</span>&gt;</span><br><span class="line">&#123;% endblock %&#125;</span><br><span class="line">&#123;% block content %&#125;</span><br><span class="line">&lt;p&gt;This <span class="keyword">is</span> just an awesome page.&lt;/p&gt;</span><br><span class="line">&#123;% endblock %&#125;d</span><br></pre></td></tr></table></figure>

<blockquote>
<p>模板<code>index.html</code>继承自<code>layout.html</code>，并且改写或者实现了其中的内容。</p>
</blockquote>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考:"></a>参考:</h3><p><a href="https://www.jianshu.com/p/c5d333e6353c" target="_blank" rel="noopener">https://www.jianshu.com/p/c5d333e6353c</a><br><a href="http://node-swig.github.io/swig-templates/docs/api/#CacheOptionshttp://node-swig.github.io/swig-templates/docs/api/#CacheOptions" target="_blank" rel="noopener">http://node-swig.github.io/swig-templates/docs/api/#CacheOptionshttp://node-swig.github.io/swig-templates/docs/api/#CacheOptions</a></p>
]]></content>
      <categories>
        <category>编程知识</category>
        <category>前端</category>
        <category>swig</category>
      </categories>
      <tags>
        <tag>编程知识</tag>
        <tag>前端</tag>
        <tag>swig</tag>
      </tags>
  </entry>
  <entry>
    <title>pip 命令添加国内源</title>
    <url>/2020/03/30/coding/environment/pip-chinese-source/pip-chinese-source/</url>
    <content><![CDATA[<blockquote>
<p>pip默认源存在速度慢的问题，本文介绍pip命令添加国内源的方法。</p>
</blockquote>
<a id="more"></a>

<h2 id="国内源"><a href="#国内源" class="headerlink" title="国内源"></a>国内源</h2><blockquote>
<p>常用的国内镜像包括：</p>
</blockquote>
<ul>
<li>阿里云 <a href="http://mirrors.aliyun.com/pypi/simple/" target="_blank" rel="noopener">http://mirrors.aliyun.com/pypi/simple/</a></li>
<li>豆瓣<a href="http://pypi.douban.com/simple/" target="_blank" rel="noopener">http://pypi.douban.com/simple/</a></li>
<li>清华大学 <a href="https://pypi.tuna.tsinghua.edu.cn/simple/" target="_blank" rel="noopener">https://pypi.tuna.tsinghua.edu.cn/simple/</a></li>
<li>中国科学技术大学 <a href="http://pypi.mirrors.ustc.edu.cn/simple/" target="_blank" rel="noopener">http://pypi.mirrors.ustc.edu.cn/simple/</a></li>
<li>华中科技大学<a href="http://pypi.hustunique.com/" target="_blank" rel="noopener">http://pypi.hustunique.com/</a></li>
</ul>
<p><strong>新版ubuntu要求使用https源，要注意。</strong></p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="临时使用"><a href="#临时使用" class="headerlink" title="临时使用"></a>临时使用</h3><blockquote>
<p>在使用pip的时候，加上参数 <code>-i</code> 和镜像地址</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple tensorboard</span><br></pre></td></tr></table></figure>

<blockquote>
<p>从清华源安装tensorboard</p>
</blockquote>
<h3 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h3><ul>
<li><p>Linux修改 <code>~/.pip/pip.conf</code></p>
</li>
<li><p>Windows 修改<code>C:\Users\pip\pip.ini</code>，即 %HOMEPATH%\pip\pip.ini</p>
</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">[global]</span></span><br><span class="line"><span class="string">index-url</span> <span class="string">=</span> <span class="string">http://pypi.douban.com/simple</span></span><br><span class="line"><span class="string">[install]</span></span><br><span class="line"><span class="string">trusted-host</span> <span class="string">=</span> <span class="string">pypi.douban.com</span></span><br></pre></td></tr></table></figure>

<h3 id="命令配置"><a href="#命令配置" class="headerlink" title="命令配置"></a>命令配置</h3><blockquote>
<p>在终端输入命令：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip install pip -U    # 升级pip到最新版本</span><br><span class="line">pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>程序人生</category>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>程序人生</tag>
        <tag>环境配置</tag>
      </tags>
  </entry>
  <entry>
    <title>Next -21- 添加相册系列 - 1- 框架设置</title>
    <url>/2020/03/29/next/21_add_photos/add-photos/</url>
    <content><![CDATA[<blockquote>
<p> Next 主题原生没有相册功能，我又是摄影爱好者，不得不下点功夫在这了。本系列介绍添加相册的方法，本文是开篇，记录Next主题下开启相册按钮和开启相应页面，后面的一边研究一边发。</p>
</blockquote>
<a id="more"></a>

<h2 id="Next设置"><a href="#Next设置" class="headerlink" title="Next设置"></a>Next设置</h2><ul>
<li>新建hexo page</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new page photos</span><br></pre></td></tr></table></figure>

<blockquote>
<p>将会在<code>source/</code>下创建<code>photos/index.md</code></p>
</blockquote>
<ul>
<li>在index.md中添加<code>type: photos</code></li>
</ul>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">title: photos</span><br><span class="line">date: 2020-03-22 23:03:55</span><br><span class="line">type: photos</span><br></pre></td></tr></table></figure>

<ul>
<li>修改<code>主题配置文件</code>，在<code>menu</code>字段中加入<code>photos: /photos/ || image</code></li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Usage: `Key: /link/ || icon`</span></span><br><span class="line"><span class="comment"># Key is the name of menu item. If the translation for this item is available, the translated text will be loaded, otherwise the Key name will be used. Key is case-senstive.</span></span><br><span class="line"><span class="comment"># Value before `||` delimiter is the target link, value after `||` delimiter is the name of Font Awesome icon.</span></span><br><span class="line"><span class="comment"># When running the site in a subdirectory (e.g. yoursite.com/blog), remove the leading slash from link value (/archives -&gt; archives).</span></span><br><span class="line"><span class="comment"># External url should start with http:// or https://</span></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">home</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">user</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">tags</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">th</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">archive</span></span><br><span class="line">  <span class="attr">photos:</span> <span class="string">/photos/</span> <span class="string">||</span> <span class="string">image</span></span><br><span class="line">  <span class="comment">#schedule: /schedule/ || calendar</span></span><br><span class="line">  <span class="attr">sitemap:</span> <span class="string">/sitemap.xml</span> <span class="string">||</span> <span class="string">sitemap</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || heartbeat</span></span><br></pre></td></tr></table></figure>

<ul>
<li>修改 themes/next/languages/zh-Hans.yml，添加photos字段</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">首页</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">归档</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">分类</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">标签</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">关于</span></span><br><span class="line">  <span class="attr">search:</span> <span class="string">搜索</span></span><br><span class="line">  <span class="attr">commonweal:</span> <span class="string">公益404</span></span><br><span class="line">  <span class="attr">something:</span> <span class="string">有料</span></span><br><span class="line">  <span class="attr">sitemap:</span> <span class="string">站点地图</span></span><br><span class="line">  <span class="attr">photos:</span> <span class="string">相册</span></span><br></pre></td></tr></table></figure>

<ul>
<li>此时效果</li>
</ul>
<p><img src="https://photos.zywvvd.com/image/20200329233209.png" alt="相册"></p>
]]></content>
      <categories>
        <category>Next</category>
      </categories>
      <tags>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo -12- 强制使用https协议</title>
    <url>/2020/03/28/hexo/12_force_https/force-https/</url>
    <content><![CDATA[<blockquote>
<p>https 是一种通过计算机网络进行安全通信的传输协议，经由HTTP进行通信，利用SSL/TLS建立全信道，加密数据包，相比与http更加安全。本文介绍Hexo博客强制用户https协议访问的方法。</p>
</blockquote>
<a id="more"></a>

<h2 id="修改-Pages-设置"><a href="#修改-Pages-设置" class="headerlink" title="修改 Pages 设置"></a>修改 Pages 设置</h2><blockquote>
<p>在hexo 挂载的pages中设置（例如我的是github pages），勾选 Enforce HTTPS</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image/20200329221359.png" alt="pages"></p>
<blockquote>
<p>此时用户访问您链接时必须使用https协议</p>
</blockquote>
<h2 id="CDN加速设置"><a href="#CDN加速设置" class="headerlink" title="CDN加速设置"></a>CDN加速设置</h2><blockquote>
<p>设置了CDN加速的同志也要在相应的控制台进行设置，不然可能会因为pages强制https，但CDN没有这样的要求，使用http协议访问你的加速域名，当转到源时发现协议不对，又跳转使用源的原始链接，导致CDN加速失效。</p>
<p>进入控制台（我的是七牛云，具体加速设置参考：<a href="https://www.zywvvd.com/2020/03/19/hexo/7_hexo_speed_up/hexo-speed-up/">Hexo -7- Github源七牛云CDN加速教程（详细）</a>）-&gt; CDN -&gt; 域名管理 -&gt; 配置相应的域名</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image/20200329222035.png" alt="配置域名"></p>
<blockquote>
<p>修改Https配置</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image/20200329222136.png" alt="Https配置"></p>
<blockquote>
<p>开启强制https</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image/20200329222240.png" alt="强制https开关"></p>
<blockquote>
<p>配置完毕，用户只能用https访问你的站点了。</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image/20200329222408.png" alt="安全链接"></p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo -11- 修改网站Logo</title>
    <url>/2020/03/28/hexo/11_change_logo/change-logo/</url>
    <content><![CDATA[<blockquote>
<p> Next 主题默认的网站logo是字母N，本文介绍如何更换成自己的logo。</p>
</blockquote>
<a id="more"></a>

<h2 id="编辑logo图像文件"><a href="#编辑logo图像文件" class="headerlink" title="编辑logo图像文件"></a>编辑logo图像文件</h2><blockquote>
<p>Next主题logo一共四个：</p>
<ul>
<li>16×16 png</li>
<li>32×32 png</li>
<li>180×180 png</li>
<li>512 ×512 svn</li>
</ul>
</blockquote>
<blockquote>
<p>设计好自己的logo后在前三种尺寸下保存成png</p>
</blockquote>
<blockquote>
<p>在 <a href="https://c.runoob.com/more/svgeditor/" target="_blank" rel="noopener">https://c.runoob.com/more/svgeditor/</a> 可以设计自己的svg图像</p>
</blockquote>
<h2 id="修改主题配置文件"><a href="#修改主题配置文件" class="headerlink" title="修改主题配置文件"></a>修改主题配置文件</h2><blockquote>
<p>将图像放入 themes -&gt; next -&gt; source -&gt; images 文件夹下，修改主题配置文件</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Site Information Settings</span></span><br><span class="line"><span class="comment"># See: https://theme-next.org/docs/getting-started/</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="attr">favicon:</span></span><br><span class="line">  <span class="attr">small:</span> <span class="string">/images/logo-16.png</span></span><br><span class="line">  <span class="attr">medium:</span> <span class="string">/images/logo-32.png</span></span><br><span class="line">  <span class="attr">apple_touch_icon:</span> <span class="string">/images/logo-180.png</span></span><br><span class="line">  <span class="attr">safari_pinned_tab:</span> <span class="string">/images/logo-512.svg</span></span><br><span class="line">  <span class="comment">#android_manifest: /images/manifest.json</span></span><br><span class="line">  <span class="comment">#ms_browserconfig: /images/browserconfig.xml</span></span><br></pre></td></tr></table></figure>

<h2 id="效果示例"><a href="#效果示例" class="headerlink" title="效果示例"></a>效果示例</h2><p><img src="https://photos.zywvvd.com/image/20200329220315.png" alt="logo效果"></p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Next -20- 使用自定义样式 （custom style)</title>
    <url>/2020/03/28/next/20_custom_style/custom-style/</url>
    <content><![CDATA[<blockquote>
<p>Next主题允许用户使用自定义样式个性化设置自己网站的主题，本文介绍使用自定义样式的方法。</p>
</blockquote>
<a id="more"></a>

<h2 id="修改主题配置文件"><a href="#修改主题配置文件" class="headerlink" title="修改主题配置文件"></a>修改主题配置文件</h2><blockquote>
<p>去掉<code>主题配置文件</code> 中<code>custom_file_path</code>字段<code>style</code>值的注释</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Define custom file paths.</span></span><br><span class="line"><span class="comment"># Create your custom files in site directory `source/_data` and uncomment needed files below.</span></span><br><span class="line"><span class="attr">custom_file_path:</span></span><br><span class="line">  <span class="comment">#head: source/_data/head.swig</span></span><br><span class="line">  <span class="comment">#header: source/_data/header.swig</span></span><br><span class="line">  <span class="comment">#sidebar: source/_data/sidebar.swig</span></span><br><span class="line">  <span class="comment">#postMeta: source/_data/post-meta.swig</span></span><br><span class="line">  <span class="comment">#postBodyEnd: source/_data/post-body-end.swig</span></span><br><span class="line">  <span class="comment">#footer: source/_data/footer.swig</span></span><br><span class="line">  <span class="comment">#bodyEnd: source/_data/body-end.swig</span></span><br><span class="line">  <span class="comment">#variable: source/_data/variables.styl</span></span><br><span class="line">  <span class="comment">#mixin: source/_data/mixins.styl</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">source/_data/styles.styl</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>此时我们已经允许博客运用<code>source/_data/styles.styl</code>中的样式，此处要说明的是，此处的source代表的是Hexo根目录的source文件夹，不是next主题中的source</p>
</blockquote>
<h2 id="创建样式文件"><a href="#创建样式文件" class="headerlink" title="创建样式文件"></a>创建样式文件</h2><blockquote>
<p>在Hexo -&gt; source文件夹下建立 <code>_data</code>文件夹，新建文件<code>styles.styl</code>文件，在文件中设置的css会被应用到站点中：</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image/20200328153349.png" alt="styles.styl"></p>
<blockquote>
<p>事实上在Next 7.7 主题中已经放置了用户自定义设置的styl文件，具体位置：</p>
<p>themes/next/source/css/custom.styl</p>
<p>将该文件内容复制到刚刚新建的<code>styles.styl</code>文件中，此时站点已经发生了一些变化</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image/20200328153732.png" alt="styles.styl效果"></p>
<blockquote>
<p>文件中的注释很友好，用户可以方便地修改成自己喜欢的样式。</p>
</blockquote>
<h2 id="我的修改方案"><a href="#我的修改方案" class="headerlink" title="我的修改方案"></a>我的修改方案</h2><blockquote>
<p>我简单按照自己的想法配置了<code>styles.styl</code>文件：</p>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">// Custom styles.</span><br><span class="line"></span><br><span class="line">// 网站最顶部条线的颜色</span><br><span class="line"><span class="selector-class">.headband</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#F2F4EF</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 设置背景图片</span><br><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>:<span class="built_in">url</span>(/images/bg.png);</span><br><span class="line">    <span class="attribute">background-repeat</span>:no-repeat;</span><br><span class="line">    <span class="attribute">background-attachment</span>:fixed;</span><br><span class="line">    <span class="attribute">background-position</span>:center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 设置侧边栏左上角网站标题和副标题区颜色</span><br><span class="line"><span class="selector-class">.site-meta</span> &#123;</span><br><span class="line">	<span class="attribute">background</span>: <span class="number">#222222</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 设置侧边栏网站标题样式</span><br><span class="line"><span class="selector-class">.site-title</span> &#123;</span><br><span class="line">	<span class="attribute">color</span>:<span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 设置侧边栏网站标题鼠标悬浮样式</span><br><span class="line"><span class="selector-class">.site-title</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">	<span class="attribute">letter-spacing</span>: <span class="number">0.4rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 侧边栏网站副标题样式</span><br><span class="line"><span class="selector-class">.site-subtitle</span> &#123;</span><br><span class="line">	<span class="attribute">color</span>:<span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.site-author-image</span>&#123;</span><br><span class="line"><span class="attribute">border</span>: <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 文章标题鼠标悬浮下划线样式</span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-title-link</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">	<span class="attribute">content</span>: <span class="string">""</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">2px</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#DfA710</span>;</span><br><span class="line">    <span class="attribute">visibility</span>: hidden;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">scaleX</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="attribute">transition-duration</span>: <span class="number">0.2s</span>;</span><br><span class="line">    <span class="attribute">transition-timing-function</span>: ease-in-out;</span><br><span class="line">    <span class="attribute">transition-delay</span>: <span class="number">0s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 文章标题颜色</span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-title-link</span> &#123;</span><br><span class="line">	<span class="attribute">color</span>:<span class="number">#DfA710</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 阅读全文按钮样式</span><br><span class="line"><span class="selector-class">.btn</span> &#123;</span><br><span class="line">	<span class="attribute">border</span>:<span class="number">2px</span> solid <span class="number">#DfA710</span>;</span><br><span class="line">	<span class="attribute">color</span>:<span class="number">#DfA710</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 阅读全文按钮鼠标悬浮样式</span><br><span class="line"><span class="selector-class">.btn</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">border-color</span>: <span class="number">#DfA710</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#DfA710</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 设置文章和侧边栏中链接样式</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-tag">span</span><span class="selector-class">.exturl</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#DfA710</span>;</span><br><span class="line">  <span class="attribute">border-bottom-color</span>: <span class="number">#DfA710</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 修改文章页侧边栏文章目录下面的第一个标题的鼠标悬浮样式</span><br><span class="line">// 真的有毒，文章目录第一个标题的样式还是单独设置的...一开始还没发现</span><br><span class="line"><span class="selector-class">.post-toc</span> <span class="selector-class">.nav</span> <span class="selector-class">.active-current</span> &gt; <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#DfA710</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 文章页面左边文章标题颜色</span><br><span class="line"><span class="selector-class">.post-toc</span> <span class="selector-tag">ol</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#DfA710</span>;</span><br><span class="line">  <span class="attribute">border-bottom-color</span>: <span class="number">#DfA710</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 文章页面左边文章标题active时颜色</span><br><span class="line"><span class="selector-class">.post-toc</span> <span class="selector-class">.nav</span> <span class="selector-class">.active</span> &gt; <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#DfA710</span>;</span><br><span class="line">  <span class="attribute">border-bottom-color</span>: <span class="number">#DfA710</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 文章页侧边栏文章目录和站点概况鼠标悬浮样式</span><br><span class="line"><span class="selector-class">.sidebar-nav</span> <span class="selector-tag">li</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#DfA710</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 文章页侧边栏文章目录和站点概况active时鼠标悬浮样式</span><br><span class="line"><span class="selector-class">.sidebar-nav</span> <span class="selector-class">.sidebar-nav-active</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#DfA710</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 文章页侧边栏文章目录和站点概况active时样式</span><br><span class="line"><span class="selector-class">.sidebar-nav</span> <span class="selector-class">.sidebar-nav-active</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#DfA710</span>;</span><br><span class="line">  <span class="attribute">border-bottom-color</span>: <span class="number">#DfA710</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 社交栏鼠标悬浮样式</span><br><span class="line"><span class="selector-id">#sidebar</span> <span class="selector-tag">div</span><span class="selector-class">.links-of-author</span><span class="selector-class">.motion-element</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#DfA710</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 友链鼠标悬浮样式</span><br><span class="line"><span class="selector-class">.sidebar</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-class">.sidebar</span> <span class="selector-tag">span</span><span class="selector-class">.exturl</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">border-bottom-color</span>: <span class="number">#DfA710</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#DfA710</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// RSS文字颜色</span><br><span class="line">//#sidebar div.feed-link.motion-element &gt; a &#123;</span><br><span class="line">//  color: #DfA710;</span><br><span class="line">//&#125;</span><br><span class="line"></span><br><span class="line">// RSS图标颜色</span><br><span class="line">//#sidebar div.feed-link.motion-element &gt; a i&#123;</span><br><span class="line">//  color: #DfA710;</span><br><span class="line">//&#125;</span><br><span class="line"></span><br><span class="line">// 侧边栏日志、分类、标签 上面的数字的颜色</span><br><span class="line"><span class="selector-class">.site-state-item-count</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#DfA710</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 设置底部文章分页数字鼠标悬浮上划线颜色</span><br><span class="line"><span class="selector-class">.pagination</span> <span class="selector-class">.prev</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-class">.pagination</span> <span class="selector-class">.next</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-class">.pagination</span> <span class="selector-class">.page-number</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">border-top-color</span>: <span class="number">#DfA710</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 设置文章页上一篇文章和下一篇文章鼠标悬浮样式</span><br><span class="line"><span class="selector-class">.post-nav-item</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#DfA710</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 修改鼠标选中字符的颜色</span><br><span class="line"><span class="comment">/* webkit, opera, IE9 */</span></span><br><span class="line"><span class="selector-pseudo">::selection</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#DfA710</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#f7f7f7</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* firefox */</span></span><br><span class="line"><span class="selector-pseudo">::-moz-selection</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#DfA710</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#f7f7f7</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 侧边栏返回顶部按钮鼠标悬浮样式</span><br><span class="line"><span class="selector-class">.back-to-top</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#eee</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#DfA710</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 当页面处于 首页、标签、分类、归档、关于页面其中之一时，处于哪个页面哪个选项就变蓝</span><br><span class="line"><span class="selector-id">#menu</span> &gt; <span class="selector-tag">li</span><span class="selector-class">.menu-item-active</span> &gt; <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#DfA710</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 侧边栏导航小圆点颜色</span><br><span class="line"><span class="selector-class">.menu-item-active</span> <span class="selector-tag">a</span><span class="selector-pseudo">:after</span>,</span><br><span class="line"><span class="selector-class">.menu</span> <span class="selector-class">.menu-item</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">:after</span>,</span><br><span class="line"><span class="selector-class">.menu</span> <span class="selector-class">.menu-item</span> <span class="selector-tag">span</span><span class="selector-class">.exturl</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#DfA710</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 侧边栏上半部分设置为透明</span><br><span class="line"><span class="selector-class">.menu-item-active</span> <span class="selector-tag">a</span>,</span><br><span class="line"><span class="selector-class">.menu</span> <span class="selector-class">.menu-item</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-class">.menu</span> <span class="selector-class">.menu-item</span> <span class="selector-tag">span</span><span class="selector-class">.exturl</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">242</span>, <span class="number">242</span>, <span class="number">242</span>, <span class="number">0.30</span>);</span><br><span class="line">  border-bottom-color: rgba(255, 255, 255, 0.2);;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 侧边栏下半部分设置为透明</span><br><span class="line"><span class="selector-class">.sidebar</span>&#123;</span><br><span class="line">	<span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.sidebar-inner</span>&#123;</span><br><span class="line">	<span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 设置底部文章分页部分为透明</span><br><span class="line"><span class="selector-class">.pagination</span>&#123;</span><br><span class="line">	<span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.pagination</span> <span class="selector-class">.page-number</span><span class="selector-class">.current</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#DfA710</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 导航栏底部百分比透明</span><br><span class="line"><span class="selector-class">.back-to-top</span>,</span><br><span class="line"><span class="selector-class">.back-to-top</span><span class="selector-pseudo">:hover</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.3</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 设置文章背景透明度</span><br><span class="line"><span class="selector-class">.post-block</span>&#123;</span><br><span class="line">	<span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 这里需要完全透明，不然就会在上面的0.2基础上再进行透明度计算</span><br><span class="line"><span class="selector-class">.btn</span>&#123;</span><br><span class="line">	<span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.header-inner</span>&#123;</span><br><span class="line">	<span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.main-inner</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.site-brand-container</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="attribute">background</span>: <span class="number">#222222</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 代码区背景</span><br><span class="line"><span class="selector-class">.table-container</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">240</span>, <span class="number">240</span>, <span class="number">222</span>, <span class="number">0.2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.table-container</span> <span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">237</span>,<span class="number">237</span>, <span class="number">225</span>, <span class="number">0.03</span>);</span><br><span class="line">&#125;</span><br><span class="line">// 代码背景</span><br><span class="line"><span class="selector-tag">table</span> &gt; <span class="selector-tag">tbody</span> &gt; <span class="selector-tag">tr</span><span class="selector-pseudo">:nth-of-type(odd)</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">table</span> &gt; <span class="selector-tag">tbody</span> &gt; <span class="selector-tag">tr</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">233</span>,<span class="number">230</span>, <span class="number">230</span>, <span class="number">0.0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">pre</span>,</span><br><span class="line"><span class="selector-class">.highlight</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">200</span>, <span class="number">31</span>, <span class="number">33</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">//代码行标背景</span><br><span class="line"><span class="selector-class">.highlight</span> <span class="selector-class">.gutter</span> <span class="selector-tag">pre</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgbargba</span>(<span class="number">227</span>, <span class="number">235</span>, <span class="number">227</span>, <span class="number">0.3</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.highlight</span> <span class="selector-class">.code</span> <span class="selector-tag">pre</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">29</span>, <span class="number">31</span>, <span class="number">100</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 评论</span><br><span class="line"><span class="selector-class">.comments</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 文章页内作者信息</span><br><span class="line"><span class="selector-class">.post-copyright</span> &#123;</span><br><span class="line">  <span class="attribute">border-left</span>: <span class="number">3px</span> solid <span class="number">#DfA710</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.3</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 行内代码块的自定义样式 */</span></span><br><span class="line"><span class="selector-tag">code</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#FFFFFF</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">239</span>, <span class="number">183</span>, <span class="number">48</span>, <span class="number">0.4</span>);</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">2px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">0px</span> solid <span class="number">#DfA710</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 底部动态的叶子图标</span><br><span class="line"><span class="selector-class">.with-love</span>&#123;</span><br><span class="line">	<span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 去掉文章白色背景</span><br><span class="line"><span class="selector-class">.main-inner</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0.0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 标签页链接下划线颜色</span><br><span class="line"><span class="selector-tag">a</span>,</span><br><span class="line"><span class="selector-tag">span</span><span class="selector-class">.exturl</span> &#123;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#DfA710</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 标签页链接鼠标悬浮颜色</span><br><span class="line"><span class="selector-class">.tag-cloud</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#DfA710</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>其中背景图像 bg.jpg 存放在主题source中的images文件夹内</p>
<p>初步效果：</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image/20200328182253.png" alt="示例效果"></p>
<h2 id="自定义修改样式"><a href="#自定义修改样式" class="headerlink" title="自定义修改样式"></a>自定义修改样式</h2><blockquote>
<p>当我们想修改页面的某个地方时，具体该添加哪个样式表呢？</p>
<p>解决这个问题可以用浏览器的调试工具（一般浏览器<code>F12</code>可以调出），查看感兴趣内容的名称，建立同名css可以覆盖原有样式，例如我要修改侧边栏导航部分的背景颜色</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image/20200328174513.png" alt="查看元素名称"></p>
<blockquote>
<p>确定了元素名为 <code>header-inner</code>，在styles.styl中配置相应的css：</p>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.header-inner</span>&#123;</span><br><span class="line">	<span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>然后，可以明显地看到效果</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image/20200328174723.png" alt="修改效果"></p>
<blockquote>
<p>妈耶，赶紧改回来。</p>
<p>反正就是这么改的啦。</p>
</blockquote>
]]></content>
      <categories>
        <category>Next</category>
      </categories>
      <tags>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>Next -19- 开启fancybox查看图片大图</title>
    <url>/2020/03/28/next/19_next_fancybox/next-fancybox/</url>
    <content><![CDATA[<blockquote>
<p>fancybox插件可以帮助我们查看博客大图，本文介绍Next 7.7.1 主题开启fancybox的方法。</p>
</blockquote>
<a id="more"></a>

<h2 id="修改主题配置文件"><a href="#修改主题配置文件" class="headerlink" title="修改主题配置文件"></a>修改主题配置文件</h2><blockquote>
<p>开启 fancybox开关即可：</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># FancyBox is a tool that offers a nice and elegant way to add zooming functionality for images.</span></span><br><span class="line"><span class="comment"># For more information: https://fancyapps.com/fancybox</span></span><br><span class="line"><span class="attr">fancybox:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>



<h2 id="示例效果"><a href="#示例效果" class="headerlink" title="示例效果"></a>示例效果</h2><p><img src="https://photos.zywvvd.com/image/20200328005031.png" alt="fancybox示例"></p>
]]></content>
      <categories>
        <category>Next</category>
      </categories>
      <tags>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>解决Ubuntu循环登陆问题 + Nvidia驱动、Cuda、Cudnn安装</title>
    <url>/2020/03/27/software/install/nvidia-install/nvidia-install/</url>
    <content><![CDATA[<blockquote>
<p>ubuntu系统显卡驱动偶尔会出现奇怪的问题，造成图形用户界面循环登陆，本文记录相关问题的解决方案。</p>
</blockquote>
<a id="more"></a>

<h3 id="卸载旧驱动"><a href="#卸载旧驱动" class="headerlink" title="卸载旧驱动"></a>卸载旧驱动</h3><ul>
<li>在登陆界面 ctrl+alt+F2 进入非图形界面控制台，登陆后输入命令：</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get remove nvidia-*</span><br><span class="line">sudo apt-get autoremove</span><br><span class="line">sudo apt-get purge nvidia*</span><br></pre></td></tr></table></figure>

<h3 id="安装驱动"><a href="#安装驱动" class="headerlink" title="安装驱动"></a>安装驱动</h3><blockquote>
<p>加入PPA，然后更新库</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository ppa:graphics-drivers</span><br><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure>

<blockquote>
<p>查看适合本机的nvidia驱动</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ubuntu-drivers devices</span><br></pre></td></tr></table></figure>

<blockquote>
<p>选择合适自己的版本</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install nvidia-driver-440 nvidia-settings nvidia-prime</span><br></pre></td></tr></table></figure>

<blockquote>
<p>使用nvidia-smi 查看是否已经读取到安装的驱动，如果提示没有找到命令重启后再试</p>
</blockquote>
<h3 id="安装Cuda"><a href="#安装Cuda" class="headerlink" title="安装Cuda"></a>安装Cuda</h3><blockquote>
<p>到Cuda <a href="https://developer.nvidia.com/cuda-downloads" target="_blank" rel="noopener">下载地址</a>下载适合自己的Cuda文件，建议下载runfile格式，比如我下载的<code>cuda_10.2.89_440.33.01_linux.run</code>，在文件所在文件夹安装：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo sh cuda_10.2.89_440.33.01_linux.run</span><br></pre></td></tr></table></figure>

<blockquote>
<ul>
<li>accept</li>
<li>n （不安装驱动）</li>
<li>y</li>
<li>y</li>
<li>y</li>
</ul>
</blockquote>
<blockquote>
<p>设置环境变量，在~/.bashrc 文件末尾加入：</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">export LD_LIBRARY_PATH&#x3D;$LD_LIBRARY_PATH:&#x2F;usr&#x2F;local&#x2F;cuda&#x2F;lib64</span><br><span class="line">export PATH&#x3D;$PATH:&#x2F;usr&#x2F;local&#x2F;cuda&#x2F;bin</span><br><span class="line">export CUDA_HOME&#x3D;$CUDA_HOME:&#x2F;usr&#x2F;local&#x2F;cuda</span><br></pre></td></tr></table></figure>

<blockquote>
<p>终端运行：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure>

<blockquote>
<p>运行：nvcc –version，如果显示类似如下信息说明安装成功</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nvcc: NVIDIA (R) Cuda compiler driver</span><br><span class="line">Copyright (c) 2005-2019 NVIDIA Corporation</span><br><span class="line">Built on Wed_Oct_23_19:24:38_PDT_2019</span><br><span class="line">Cuda compilation tools, release 10.2, V10.2.89</span><br></pre></td></tr></table></figure>

<h3 id="安装Cudnn"><a href="#安装Cudnn" class="headerlink" title="安装Cudnn"></a>安装Cudnn</h3><blockquote>
<p>到Cudnn<a href="https://developer.nvidia.com/rdp/form/cudnn-download-survey" target="_blank" rel="noopener">下载页面</a>下载与驱动、Cuda、需要运行软件要求相应的版本（需要注册Nvidia账号）。</p>
<p>Ubuntu可以下载<code>.solitairetheme8</code>格式文件，只要将扩展名改为<code>tgz</code>即可解压</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar -xvf cudnn-10.2-linux-x64-v7.6.5.32.tgz</span><br></pre></td></tr></table></figure>

<blockquote>
<p>得到名为cuda的文件夹，在当前目录（不要进入cuda）运行：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo cp cuda/include/cudnn.h /usr/local/cuda/include/</span><br><span class="line">sudo cp cuda/lib64/libcudnn* /usr/local/cuda/lib64/</span><br><span class="line">sudo chmod a+r /usr/local/cuda/include/cudnn.h</span><br><span class="line">sudo chmod a+r /usr/local/cuda/lib64/libcudnn*</span><br></pre></td></tr></table></figure>

<blockquote>
<p>输入<code>cat /usr/local/cuda/include/cudnn.h | grep CUDNN_MAJOR -A 2</code>可查看版本</p>
</blockquote>
<h3 id="安装测试"><a href="#安装测试" class="headerlink" title="安装测试"></a>安装测试</h3><blockquote>
<p>查看显卡信息：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nvidia-smi</span><br></pre></td></tr></table></figure>

<blockquote>
<p>查看Cuda版本：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nvcc -V</span><br></pre></td></tr></table></figure>

<blockquote>
<p>查看Cudnn版本</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat /usr/local/cuda/include/cudnn.h | grep CUDNN_MAJOR -A 2</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>软件</category>
        <category>软件安装</category>
        <category>故障排除</category>
      </categories>
      <tags>
        <tag>故障排除</tag>
        <tag>软件</tag>
        <tag>软件安装</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo -10- 使用PicGo配合七牛云图床实现Markdown图像无痛管理</title>
    <url>/2020/03/26/hexo/10_using_picgo/using-picgo/</url>
    <content><![CDATA[<blockquote>
<p> 在七牛云图床搭建好的情况下，我们可以有地方存放Markdown中的图像，而且速度很快，不占用Pages的空间，但是生成图像手动上传，名称管理实在是让人头疼。为了让图床管理不再反人类，PicGo应运而生，本文介绍PicGo结合七牛云管理Hexo图片的方法。</p>
</blockquote>
<a id="more"></a>

<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul>
<li>Hexo博客搭建并挂载在服务器</li>
<li>申请七牛云并搭建好图床，方法参考<a href="https://www.zywvvd.com/2020/03/25/hexo/9_add_image_bed/add-image-bed/">Hexo -9- 添加七牛云图床</a></li>
</ul>
<h2 id="工具下载"><a href="#工具下载" class="headerlink" title="工具下载"></a>工具下载</h2><ul>
<li><p>下载地址： <a href="https://github.com/Molunerfinn/PicGo/releases" target="_blank" rel="noopener">https://github.com/Molunerfinn/PicGo/releases</a></p>
</li>
<li><p>当前最高版本 2.2.2</p>
</li>
<li><p>Windows 下载 <a href="https://github.com/Molunerfinn/PicGo/releases/download/v2.2.2/PicGo-Setup-2.2.2.exe" target="_blank" rel="noopener">PicGo-Setup-2.2.2.exe</a></p>
</li>
<li><p>Max 下载 <a href="https://github.com/Molunerfinn/PicGo/releases/download/v2.2.2/PicGo-2.2.2-mac.zip" target="_blank" rel="noopener">PicGo-2.2.2-mac.zip</a></p>
</li>
<li><p>Linux 下载 <a href="https://github.com/Molunerfinn/PicGo/releases/download/v2.2.2/PicGo-2.2.2.AppImage" target="_blank" rel="noopener">PicGo-2.2.2.AppImage</a></p>
</li>
</ul>
<h2 id="AppImage"><a href="#AppImage" class="headerlink" title="AppImage"></a>AppImage</h2><blockquote>
<p>AppImage是个啥？</p>
<p>资料来源：<a href="https://blog.csdn.net/aboutmn/article/details/87254930" target="_blank" rel="noopener">https://blog.csdn.net/aboutmn/article/details/87254930</a></p>
</blockquote>
<ul>
<li><p>AppImage 使用通用的软件格式，通过将整个软件打包成AppImage,一个包包含了所有的功能. 并且几乎可以在所有的linux发行版本中使用。</p>
</li>
<li><p>通常我们安装linux软件将会在不同的目录生成多个文件，并且需要root权限来对系统进行修改。</p>
</li>
<li><p>AppImage 不需要这么做。事实上，AppImage 并不需要安装。AppImage 是一个压缩的镜像文件，它包含所有运行所需要的依赖和库文件。</p>
</li>
<li><p>你可以直接执行AppImage 文件不需要安装。当你把AppImage 文件删除，整个软件也被删除了。你可以把它当成windows系统中的那些免安装的exe文件。</p>
</li>
<li><p>优点：</p>
<ul>
<li>可以运行在各种平台</li>
<li>不需要安装，直接执行</li>
<li>不需要root权限，不需要修改系统文件</li>
<li>便携性：可以在位置执行</li>
<li>App 只读</li>
<li>卸载便利，只需要删除AppImage文件即可</li>
</ul>
</li>
<li><p>使用AppImage 文件</p>
<ul>
<li>下载AppImage 文件</li>
<li>赋予可执行权限</li>
<li>双击或者在命令行中执行</li>
</ul>
</li>
</ul>
<h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><blockquote>
<p>在程序中上传剪贴板图片需要用到xclip</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install xclip</span><br></pre></td></tr></table></figure>



<h2 id="图床设置"><a href="#图床设置" class="headerlink" title="图床设置"></a>图床设置</h2><ul>
<li>运行程序，仔细找找，会发现桌面多了个蓝方块，不要慌乱，这就是PicGo</li>
</ul>
<p><img src="https://photos.zywvvd.com/image/20200326230922.png" alt="PicGo 迷你形态"></p>
<ul>
<li>在方块上右键 -&gt; 打开详细窗口 -&gt; 图床设置 -&gt; 七牛图床</li>
</ul>
<p><img src="https://photos.zywvvd.com/image/20200326231131.png" alt="七牛图床设置"></p>
<ul>
<li>其中AccessKey在七牛云控制台 -&gt; 头像 -&gt; 个人中心</li>
</ul>
<p><img src="https://photos.zywvvd.com/image/20200326231309.png" alt="个人中心"></p>
<ul>
<li>密钥管理中SecretKey保管好，这是私钥不宜外传</li>
</ul>
<p><img src="https://photos.zywvvd.com/image/20200326231405.png" alt="秘钥管理"></p>
<ul>
<li><p>存储空间名称为七牛云空间名称</p>
</li>
<li><p>访问网址为七牛云外链域名，我们已经在配置七牛云时设置成了空间加速域名</p>
</li>
<li><p>存储区域填写相应代号</p>
</li>
</ul>
<p><img src="https://photos.zywvvd.com/image/20200326231725.png" alt="存储区域代号"></p>
<ul>
<li>剩下两项根据个人情况填，但不建议填后缀，毕竟文件后缀都是根据图片改变的</li>
<li>确定 -&gt; 设置为默认图床，此时图床配置已经成功</li>
</ul>
<h2 id="其他设置"><a href="#其他设置" class="headerlink" title="其他设置"></a>其他设置</h2><blockquote>
<p>因为我们大多的应用场景是在Markdown中加入图片链接，我们更需要PicGo直接将图片链接编辑为Markdown支持的图片格式，但自带的Markdown格式不包含协议，不带https://，因此我们自己设置。</p>
</blockquote>
<ul>
<li>PicGo设置 -&gt; 自定义链接设置</li>
</ul>
<p><img src="https://photos.zywvvd.com/image/20200326232155.png" alt="自定义链接"></p>
<ul>
<li>设置格式为<code>![](https://$url)</code></li>
</ul>
<p><img src="https://photos.zywvvd.com/image/20200326232244.png" alt="自定义格式"></p>
<ul>
<li>同时建议设置成时间戳重命名，保证图片不会重复</li>
</ul>
<p><img src="https://photos.zywvvd.com/image/20200326232705.png" alt=""></p>
<ul>
<li>回到上传区 -&gt; 将链接格式改为 Custom，此后每次上传图片后会复制相应格式的链接到剪贴板</li>
</ul>
<p><img src="https://photos.zywvvd.com/image/20200326232447.png" alt="链接格式"></p>
<ul>
<li>PicGo设置 -&gt; 修改快捷键，将上传设置成自己的快捷键</li>
</ul>
<p><img src="https://photos.zywvvd.com/image/20200326232942.png" alt="快捷键"></p>
<h2 id="无痛添加图片流程"><a href="#无痛添加图片流程" class="headerlink" title="无痛添加图片流程"></a>无痛添加图片流程</h2><ul>
<li><p>从此以后我们添加图片的流程为：</p>
<ul>
<li>Ctrl+Alt+A 截图 -&gt; 画框 -&gt; 编号 -&gt; 马赛克 -&gt; 写字 -&gt; Enter将图片添加到剪贴板 （还没有这种体验的同学参考<a href="https://www.zywvvd.com/2020/02/24/software/recommend/ubuntu/flameshot/Ubuntu-flameshot/">Ubuntu 软件<strong>推荐</strong> - 截图利器 flameshot-具有快捷键自由截图、截图涂鸦、截图添加文字等功能</a>）</li>
<li>Ctrl+Shift+Q 上传图片</li>
<li>Ctrl+V 粘贴链接</li>
</ul>
</li>
</ul>
<p><strong>舒服 。。。</strong></p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo -9- 添加七牛云图床</title>
    <url>/2020/03/25/hexo/9_add_image_bed/add-image-bed/</url>
    <content><![CDATA[<blockquote>
<p>Hexo 博客挂载在网页服务器上会出现图像加载缓慢、存储空间有限的问题，在各大网络加速运营商提供的图床服务可以有效解决此类问题，由于七牛云服务器物美价廉，还有免费10g空间，本文介绍使用七牛云作为Hexo图床的方法。</p>
</blockquote>
<a id="more"></a>

<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul>
<li>已经准备好了Hexo博客并挂载在某个服务器</li>
<li>申请<a href="https://www.qiniu.com/" target="_blank" rel="noopener">七牛云</a>账号</li>
<li>申请域名并备案</li>
</ul>
<h2 id="创建七牛云空间"><a href="#创建七牛云空间" class="headerlink" title="创建七牛云空间"></a>创建七牛云空间</h2><blockquote>
<p>创建空间</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/20200326000626.png" alt="创建空间"></p>
<blockquote>
<p>填写配置信息</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/20200326001145.png" alt="配置信息"></p>
<blockquote>
<p>创建二级域名，例如我的 ：photos.zywvvd.com ，并申请相应的ssl证书，具体可参考<a href="https://www.zywvvd.com/2020/03/19/hexo/7_hexo_speed_up/hexo-speed-up/#%E7%94%B3%E8%AF%B7SSL%E5%85%8D%E8%B4%B9%E8%AF%81%E4%B9%A6%EF%BC%88%E8%B2%8C%E4%BC%BC%E5%8F%AF%E9%80%89%EF%BC%89">SSL免费证书申请</a>。</p>
<p>配置加速域名：</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image/20200326001555.png" alt=""></p>
<blockquote>
<p>信息设置</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image/20200326002037.png" alt="配置其余信息"></p>
<blockquote>
<p>图床默认域名设置，将文件管理-&gt; 默认域名设置为我们加速的二级域名：</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image/20200326002404.png" alt="默认域名配置"></p>
<blockquote>
<p>域名运营商处将空间CNAME添加到加速二级域名的CNAME值中：</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image/20200326002718.png" alt="复制CNAME值"></p>
<p><img src="https://photos.zywvvd.com/image/20200326002829.png" alt="域名设置"></p>
<blockquote>
<p>此时七牛云空间CNAME验证成功，图床搭建完毕</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image/20200326002914.png" alt="配置成功"></p>
<blockquote>
<p>选择文件管理中的上传图片即可将图像放置到图床管理：</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image/20200326003021.png" alt="上传图片"></p>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><blockquote>
<p>此时查看图片详情获取图像链接，在浏览器输入可以看到相应图像内容：</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image/20200326003133.png" alt="图像示例"></p>
<h2 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h2><blockquote>
<p>图床是博客图片长期管理的重要基石，但手动上传管理图像实在反人类，参考<a href="https://www.zywvvd.com/2020/03/26/hexo/10_using_picgo/using-picgo/">Hexo -10- 使用PicGo配合七牛云图床实现Markdown图像无痛管理</a>有效解决图床图片管理的问题。</p>
</blockquote>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Next -18- 添加代码复制按钮</title>
    <url>/2020/03/23/next/18_next_add_codecopy/next_add_codecopy/</url>
    <content><![CDATA[<blockquote>
<p>本文介绍Next 7.7.1 主题添加代码复制按钮的方法。</p>
</blockquote>
<a id="more"></a>

<h2 id="修改主题配置文件"><a href="#修改主题配置文件" class="headerlink" title="修改主题配置文件"></a>修改主题配置文件</h2><blockquote>
<p>配置copy_button字段：</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Add copy button on codeblock</span></span><br><span class="line"><span class="attr">copy_button:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Show text copy result.</span></span><br><span class="line">  <span class="attr">show_result:</span> <span class="string">default</span></span><br><span class="line">  <span class="comment"># Available values: default | flat | mac</span></span><br><span class="line">  <span class="attr">style:</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>设置 enable 为 true，show_result为default。</p>
</blockquote>
<h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><img src="/2020/03/23/next/18_next_add_codecopy/next_add_codecopy/xiaoguo.png" class="" title="配置效果">

<blockquote>
<p>复制成功后按钮会有状态变化提示。</p>
</blockquote>
]]></content>
      <categories>
        <category>Next</category>
      </categories>
      <tags>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>Next -17- 添加文章版权声明</title>
    <url>/2020/03/23/next/17_next_add_copyright/add-copyright/</url>
    <content><![CDATA[<blockquote>
<p>本文介绍Next 7.7.1 主题添加版权声明的方法。</p>
</blockquote>
<a id="more"></a>

<h2 id="修改主题配置文件"><a href="#修改主题配置文件" class="headerlink" title="修改主题配置文件"></a>修改主题配置文件</h2><blockquote>
<p>开启版权需要 license 不为false 并且 post 不为 false，我们在此把 post 设置为 true 就好：</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Creative Commons 4.0 International License.</span></span><br><span class="line"><span class="comment"># See: https://creativecommons.org/share-your-work/licensing-types-examples</span></span><br><span class="line"><span class="comment"># Available values of license: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero</span></span><br><span class="line"><span class="comment"># You can set a language value if you prefer a translated version of CC license, e.g. deed.zh</span></span><br><span class="line"><span class="comment"># CC licenses are available in 39 languages, you can find the specific and correct abbreviation you need on https://creativecommons.org</span></span><br><span class="line"><span class="attr">creative_commons:</span></span><br><span class="line">  <span class="attr">license:</span> <span class="string">by-nc-sa</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">post:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">language:</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>尝试通过修改设定更改语言失败了。</p>
</blockquote>
<h2 id="实现效果"><a href="#实现效果" class="headerlink" title="实现效果"></a>实现效果</h2><img src="/2020/03/23/next/17_next_add_copyright/add-copyright/xiaoguo.png" class="" title="效果示例">

<h2 id="进阶升级"><a href="#进阶升级" class="headerlink" title="进阶升级"></a>进阶升级</h2><blockquote>
<p>如果不想使用英文版只好手动更改源码，将<code>themes/next/layout/_partials/post/post-copyright.swig</code>文件内容替换为：</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;%- set ccIcon = '<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-fw fa-creative-commons"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>' %&#125;</span><br><span class="line">&#123;%- set ccText = theme.creative_commons.license | upper %&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"post-copyright"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"post-copyright-author"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>本文标题&amp;nbsp:&amp;nbsp&amp;nbsp<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>&#123;&#123; page.title &#125;&#125;<span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>文章作者&amp;nbsp:&amp;nbsp&amp;nbsp<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>&#123;&#123; theme.author &#125;&#125;<span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>发布时间&amp;nbsp:&amp;nbsp&amp;nbsp<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>&#123;&#123; page.date.format("YYYY年MM月DD日 - HH:mm:ss") &#125;&#125;<span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>最后更新&amp;nbsp:&amp;nbsp&amp;nbsp<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>&#123;&#123; page.updated.format("YYYY年MM月DD日 - HH:mm:ss") &#125;&#125;<span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>原始链接&amp;nbsp:&amp;nbsp&amp;nbsp<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123; url_for(page.path) &#125;&#125;"</span> <span class="attr">title</span>=<span class="string">"&#123;&#123; page.title &#125;&#125;"</span>&gt;</span>&#123;&#123; page.permalink &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>许可协议&amp;nbsp:&amp;nbsp&amp;nbsp<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-creative-commons"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">rel</span>=<span class="string">"license"</span> <span class="attr">href</span>=<span class="string">"https://creativecommons.org/licenses/by-nc-nd/4.0/"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">title</span>=<span class="string">"Attribution-NonCommercial-NoDerivatives 4.0 International (CC BY-NC-ND 4.0)"</span>&gt;</span>署名-非商业性使用-禁止演绎 4.0 国际<span class="tag">&lt;/<span class="name">a</span>&gt;</span> 转载请保留原文链接及作者<span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>  </span><br><span class="line">	</span><br><span class="line">   <span class="comment">&lt;!-- &lt;strong&gt;&#123;&#123; __('post.copyright.author') + __('symbol.colon') &#125;&#125; &lt;/strong&gt;</span></span><br><span class="line"><span class="comment">    &#123;&#123;- page.author or author &#125;&#125;</span></span><br><span class="line"><span class="comment">  &lt;/li&gt;</span></span><br><span class="line"><span class="comment">  &lt;li class="post-copyright-link"&gt;</span></span><br><span class="line"><span class="comment">    &lt;strong&gt;&#123;&#123; __('post.copyright.link') + __('symbol.colon') &#125;&#125;&lt;/strong&gt;</span></span><br><span class="line"><span class="comment">    &#123;&#123; next_url(page.permalink, page.permalink, &#123;title: page.title&#125;) &#125;&#125;</span></span><br><span class="line"><span class="comment">  &lt;/li&gt;</span></span><br><span class="line"><span class="comment">  &lt;li class="post-copyright-license"&gt;</span></span><br><span class="line"><span class="comment">    &lt;strong&gt;&#123;&#123; __('post.copyright.license_title') + __('symbol.colon') &#125;&#125; &lt;/strong&gt;</span></span><br><span class="line"><span class="comment">    &#123;&#123;- __('post.copyright.license_content', next_url(ccURL, ccIcon + ccText)) &#125;&#125;</span></span><br><span class="line"><span class="comment">  &lt;/li&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="新版效果"><a href="#新版效果" class="headerlink" title="新版效果"></a>新版效果</h3><img src="/2020/03/23/next/17_next_add_copyright/add-copyright/xiaoguo2.png" class="" title="进阶版效果示例">]]></content>
      <categories>
        <category>Next</category>
      </categories>
      <tags>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>Next -16- 添加搜索功能</title>
    <url>/2020/03/21/next/16_next_add_search/next-add-search/</url>
    <content><![CDATA[<blockquote>
<p> 本文介绍开启 Next 主题站内搜索功能的方法。</p>
</blockquote>
<a id="more"></a>

<h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><blockquote>
<p>安装插件<code>hexo-generator-searchdb</code></p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>

<blockquote>
<p>确定插件安装过程中，没有错误，不然生成站点可能会有搜索框显示问题。</p>
</blockquote>
<h3 id="修改站点配置文件"><a href="#修改站点配置文件" class="headerlink" title="修改站点配置文件"></a>修改站点配置文件</h3><blockquote>
<p>添加内容：</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Search </span></span><br><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">./public/search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure>



<h3 id="修改主题配置文件"><a href="#修改主题配置文件" class="headerlink" title="修改主题配置文件"></a>修改主题配置文件</h3><blockquote>
<p>修改主题配置文件，开启站内搜索开关：</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Local Search</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/hexo-generator-searchdb</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If auto, trigger search by changing input.</span></span><br><span class="line">  <span class="comment"># If manual, trigger search by pressing enter key or search button.</span></span><br><span class="line">  <span class="attr">trigger:</span> <span class="string">auto</span></span><br><span class="line">  <span class="comment"># Show top n results per article, show all results by setting to -1</span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">7</span></span><br><span class="line">  <span class="comment"># Unescape html strings to the readable one.</span></span><br><span class="line">  <span class="attr">unescape:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Preload the search data when the page loads.</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>



<h3 id="生成站点"><a href="#生成站点" class="headerlink" title="生成站点"></a>生成站点</h3><blockquote>
<p>生成 hexo 站点，建议先清理public文件夹，避免显示异常的问题：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>



<h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><blockquote>
<p>成功后可以搜索站内内容：</p>
</blockquote>
<img src="/2020/03/21/next/16_next_add_search/next-add-search/search.png" class="" title="本地搜索">]]></content>
      <categories>
        <category>Next</category>
      </categories>
      <tags>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>Next -15- 增加赞赏功能</title>
    <url>/2020/03/21/next/15_add_reward/next-add-reward/</url>
    <content><![CDATA[<blockquote>
<p> 赞赏啊，是一个博客里的摆设功能。<br> 本文介绍如何在Hexo Next主题中加入赞赏。</p>
</blockquote>
<a id="more"></a>

<h3 id="获取支付码"><a href="#获取支付码" class="headerlink" title="获取支付码"></a>获取支付码</h3><blockquote>
<p>在微信、支付宝中拿到赞赏码、付款码图片，放入themes/next/source/images文件夹中。</p>
<p>比如我的是 wechatpay.png和alipay.jpg</p>
</blockquote>
<h3 id="修改主题配置文件"><a href="#修改主题配置文件" class="headerlink" title="修改主题配置文件"></a>修改主题配置文件</h3><blockquote>
<p>修改主题配置文件：</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Reward (Donate)</span></span><br><span class="line"><span class="comment"># Front-matter variable (unsupport animation).</span></span><br><span class="line"><span class="attr">reward_settings:</span></span><br><span class="line">  <span class="comment"># If true, reward will be displayed in every article by default.</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">animation:</span> <span class="literal">false</span> <span class="comment"># 开启后鼠标放到图片上文字不停抖动，不建议开启</span></span><br><span class="line">  <span class="attr">comment:</span> <span class="string">您的支持是我前进的最大动力！</span></span><br><span class="line"></span><br><span class="line"><span class="attr">reward:</span></span><br><span class="line">  <span class="attr">wechatpay:</span> <span class="string">/images/wechatpay.png</span></span><br><span class="line">  <span class="attr">alipay:</span> <span class="string">/images/alipay.jpg</span></span><br><span class="line">  <span class="comment">#paypal: /images/paypal.png</span></span><br><span class="line">  <span class="comment">#bitcoin: /images/bitcoin.png</span></span><br></pre></td></tr></table></figure>

<h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><blockquote>
<p>生成hexo 后，在每篇文章下方都出现了donate按钮，点击会展开：</p>
</blockquote>
<img src="/2020/03/21/next/15_add_reward/next-add-reward/donate.png" class="" title="设置效果">

<h3 id="翻译"><a href="#翻译" class="headerlink" title="翻译"></a>翻译</h3><blockquote>
<p>如果你不喜欢Donate、 Wechat Pay 和 Alipay这样的字眼，可以在 themes/next/languages/zh-Hans.yml 中添加字段进行翻译：</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">reward:</span></span><br><span class="line">  <span class="attr">donate:</span> <span class="string">赏</span></span><br><span class="line">  <span class="attr">wechatpay:</span> <span class="string">微</span> <span class="string">信</span></span><br><span class="line">  <span class="attr">alipay:</span> <span class="string">支付宝</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>翻译后就是现在的效果：</p>
</blockquote>
<center>↓↓↓</center>]]></content>
      <categories>
        <category>Next</category>
      </categories>
      <tags>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo -8- 生成 sitemap 提交给Google、百度站长</title>
    <url>/2020/03/21/hexo/8_hexo_generate_sitemap/generate-sitemap/</url>
    <content><![CDATA[<blockquote>
<p> 为了成功引起搜索引擎的注意，我们主动生成供其抓取的文件，本文介绍hexo博客创建sitemap的方法。</p>
</blockquote>
<a id="more"></a>

<h2 id="生成Sitemap"><a href="#生成Sitemap" class="headerlink" title="生成Sitemap"></a>生成Sitemap</h2><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><blockquote>
<p>安装普通 sitemap 和百度 sitemap 两种：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure>

<h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><blockquote>
<p>修改站点配置文件，加入：</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">plugins:</span> </span><br><span class="line">  <span class="string">hexo-generator-baidu-sitemap</span></span><br><span class="line">  <span class="string">hexo-generator-sitemap</span></span><br><span class="line"></span><br><span class="line"><span class="attr">baidusitemap:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">baidusitemap.xml</span></span><br><span class="line"><span class="attr">sitemap:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">sitemap.xml</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>确认站点配置中url和root的正确性，站点地图会根据url生成完整的链接</p>
</blockquote>
<h4 id="可选操作"><a href="#可选操作" class="headerlink" title="可选操作"></a>可选操作</h4><blockquote>
<p>修改Next 主题配置文件，打开菜单字段中的站点地图：</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">sitemap:</span> <span class="string">/sitemap.xml</span> <span class="string">||</span> <span class="string">sitemap</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>修改themes/next/languages/zh-Hans.yml，添加字段：</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">sitemap:</span> <span class="string">站点地图</span></span><br></pre></td></tr></table></figure>

<img src="/2020/03/21/hexo/8_hexo_generate_sitemap/generate-sitemap/side.png" class="" title="侧边栏站点地图按钮">

<h3 id="生成xml文件"><a href="#生成xml文件" class="headerlink" title="生成xml文件"></a>生成xml文件</h3><blockquote>
<p>生成Hexo站点，会在public文件夹中创建baidusitemap.xml 和 sitemap.xml文件</p>
</blockquote>
<img src="/2020/03/21/hexo/8_hexo_generate_sitemap/generate-sitemap/sitemap.png" class="" title="sitemap文件">

<blockquote>
<p> 在浏览器中输入 <a href="https://www.zywvvd.com/sitemap.xml">https://www.zywvvd.com/sitemap.xml</a> 和 <a href="https://www.zywvvd.com/baidusitemap.xml">https://www.zywvvd.com/baidusitemap.xml</a> 已经可以看到自己的站点地图了。</p>
</blockquote>
<h2 id="提交Google站长"><a href="#提交Google站长" class="headerlink" title="提交Google站长"></a>提交Google站长</h2><blockquote>
<p>有了sitemap比没有要更容易被收录，但是相比于主动提交给搜索引擎效率就差很多了，因此我们将生成的map先提交给google</p>
</blockquote>
<h3 id="查看站点是否被google收录"><a href="#查看站点是否被google收录" class="headerlink" title="查看站点是否被google收录"></a>查看站点是否被google收录</h3><blockquote>
<p>google搜索site:域名即可：</p>
</blockquote>
<img src="/2020/03/21/hexo/8_hexo_generate_sitemap/generate-sitemap/googlesite.png" class="" title="查询谷歌收录情况">

<h3 id="添加网址"><a href="#添加网址" class="headerlink" title="添加网址"></a>添加网址</h3><blockquote>
<p> 进入<a href="https://www.google.com/webmasters" target="_blank" rel="noopener">Google Search Console</a>，用谷歌账号登录，此时需要选择添加搜索的网址类型，我们申请的域名一般都是域级别的，比如我的 zywvvd.com ，可以建立不同前缀的二级域名，因此我们选择<code>网域</code>：</p>
</blockquote>
<img src="/2020/03/21/hexo/8_hexo_generate_sitemap/generate-sitemap/googleyanzheng.png" class="" title="添加网域">

<blockquote>
<p> 为防止恶意使用该功能，需要验证网域所有权，默认方式通过DNS验证，我们就用这种方法：</p>
</blockquote>
<img src="/2020/03/21/hexo/8_hexo_generate_sitemap/generate-sitemap/googleyz.png" class="" title="DNS验证">

<blockquote>
<p>将google提供的TXT添加到域名的@解析当中：</p>
</blockquote>
<img src="/2020/03/21/hexo/8_hexo_generate_sitemap/generate-sitemap/baiduyz.png" class="" title="添加TXT字段">

<blockquote>
<p>等一会点击验证即可通过：</p>
</blockquote>
<img src="/2020/03/21/hexo/8_hexo_generate_sitemap/generate-sitemap/chenggong.png" class="" title="完成验证">

<h3 id="添加站点地图"><a href="#添加站点地图" class="headerlink" title="添加站点地图"></a>添加站点地图</h3><blockquote>
<p>选择带前缀的地址 ：</p>
</blockquote>
<img src="/2020/03/21/hexo/8_hexo_generate_sitemap/generate-sitemap/www.png" class="" title="选择地址">

<blockquote>
<p>选择站点地图，并添加刚刚生成的sitemap.xml即可</p>
</blockquote>
<img src="/2020/03/21/hexo/8_hexo_generate_sitemap/generate-sitemap/zd.png" class="" title="站点地图">

<blockquote>
<p>可以看到站点地图解析成功：</p>
</blockquote>
<img src="/2020/03/21/hexo/8_hexo_generate_sitemap/generate-sitemap/googlechenggong.png" class="" title="添加成功">

<h2 id="提交百度站长"><a href="#提交百度站长" class="headerlink" title="提交百度站长"></a>提交百度站长</h2><blockquote>
<p>国内还是百度最好用了，我们也把地图给百度站长。</p>
<p>参考：<a href="https://zhuanlan.zhihu.com/p/100922816" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/100922816</a></p>
</blockquote>
<h3 id="查看网站是否被收录"><a href="#查看网站是否被收录" class="headerlink" title="查看网站是否被收录"></a>查看网站是否被收录</h3><blockquote>
<p>百度搜索 site: 域名可以查看</p>
</blockquote>
<img src="/2020/03/21/hexo/8_hexo_generate_sitemap/generate-sitemap/sousuo.png" class="" title="是否收录">

<h3 id="添加网址-1"><a href="#添加网址-1" class="headerlink" title="添加网址"></a>添加网址</h3><blockquote>
<p>百度提交<a href="https://ziyuan.baidu.com/site/index" target="_blank" rel="noopener">网址入口</a>，用百度账号登录后，还是添加网站的过程</p>
</blockquote>
<img src="/2020/03/21/hexo/8_hexo_generate_sitemap/generate-sitemap/tianjiabd.png" class="" title="百度添加网站">

<blockquote>
<p>补充个人信息后，来到第一步输入网站，建议为www前缀：</p>
</blockquote>
<img src="/2020/03/21/hexo/8_hexo_generate_sitemap/generate-sitemap/bdwangzhan.png" class="" title="录入网站">

<blockquote>
<p>第二步根据个人情况填写信息，每个月只能改一次，确定就好；</p>
<p>第三步选择我们已经熟悉的CNAME验证，根据给定的前缀建立解析，类型CNAME，值填 ziyuan.baidu.com</p>
</blockquote>
<img src="/2020/03/21/hexo/8_hexo_generate_sitemap/generate-sitemap/bdcname.png" class="" title="百度CNAME验证">

<blockquote>
<p>点击验证即可：</p>
</blockquote>
<img src="/2020/03/21/hexo/8_hexo_generate_sitemap/generate-sitemap/bdchenggong.png" class="" title="百度验证成功">

<h3 id="提交百度搜索的不同方式"><a href="#提交百度搜索的不同方式" class="headerlink" title="提交百度搜索的不同方式"></a>提交百度搜索的不同方式</h3><blockquote>
<p>百度提供了自动提交和手动提交两种方式，其中自动提交又分为主动推送、自动推送和 sitemap 三种方式，以下是官方给出的解释：</p>
</blockquote>
<ul>
<li>主动推送：最为快速的提交方式，推荐您将站点当天新产出链接立即通过此方式推送给百度，以保证新链接可以及时被百度收录</li>
<li>自动推送：是轻量级链接提交组件，将自动推送的 JS 代码放置在站点每一个页面源代码中，当页面被访问时，页面链接会自动推送给百度，有利于新页面更快被百度发现</li>
<li>sitemap：您可以定期将网站链接放到sitemap中，然后将sitemap提交给百度。百度会周期性的抓取检查您提交的sitemap，对其中的链接进行处理，但收录速度慢于主动推送</li>
<li>手动提交：如果您不想通过程序提交，那么可以采用此种方式，手动将链接提交给百度</li>
</ul>
<blockquote>
<p>四种提交方式对比：</p>
</blockquote>
<img src="/2020/03/21/hexo/8_hexo_generate_sitemap/generate-sitemap/zh.jpg" class="" title="提交方式对比">

<h3 id="主动推送"><a href="#主动推送" class="headerlink" title="主动推送"></a>主动推送</h3><h4 id="安装插件-1"><a href="#安装插件-1" class="headerlink" title="安装插件"></a>安装插件</h4><blockquote>
<p>安装插件：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-baidu-url-submit --save</span><br></pre></td></tr></table></figure>

<h4 id="配置站点配置文件"><a href="#配置站点配置文件" class="headerlink" title="配置站点配置文件"></a>配置站点配置文件</h4><blockquote>
<p>向站点配置文件加入：</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">baidu_url_submit:</span></span><br><span class="line">  <span class="attr">count:</span> <span class="number">1</span>              <span class="comment"># 提交最新的多少个链接</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">www.zywvvd.com</span>    <span class="comment"># 在百度站长平台中添加的域名</span></span><br><span class="line">  <span class="attr">token:</span> <span class="string">YQlkVp*******</span>      <span class="comment"># 秘钥</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">baidu_urls.txt</span>   <span class="comment"># 文本文档的地址， 新链接会保存在此文本文档里</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>其中的 token 可以在【链接提交】-【自动提交】-【主动推送】下面看到，接口调用地址最后面 token=xxxxx 即为你的 token</p>
</blockquote>
<img src="/2020/03/21/hexo/8_hexo_generate_sitemap/generate-sitemap/token.png" class="" title="token">

<blockquote>
<p>加入新的deployer：</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com:zywvvd/zywvvd.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">baidu_url_submitter</span></span><br></pre></td></tr></table></figure>

<h4 id="推送网址"><a href="#推送网址" class="headerlink" title="推送网址"></a>推送网址</h4><blockquote>
<p>此后每次hexo d都会将最新的1条网址推送给百度，而且成功时会有标识：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&#123;"remain":2997,"success":1&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>表示成功推送一条，今天还能推2997条。</p>
</blockquote>
<h3 id="自动推送"><a href="#自动推送" class="headerlink" title="自动推送"></a>自动推送</h3><blockquote>
<p>在网站中加入如下代码：</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> theme.baidu_push %&#125;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> bp = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);</span><br><span class="line">    <span class="keyword">var</span> curProtocol = <span class="built_in">window</span>.location.protocol.split(<span class="string">':'</span>)[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">if</span> (curProtocol === <span class="string">'https'</span>) &#123;</span><br><span class="line">        bp.src = <span class="string">'https://zz.bdstatic.com/linksubmit/push.js'</span>;        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        bp.src = <span class="string">'http://push.zhanzhang.baidu.com/push.js'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> s = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"script"</span>)[<span class="number">0</span>];</span><br><span class="line">    s.parentNode.insertBefore(bp, s);</span><br><span class="line">&#125;)();</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&#123;% endif %&#125;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>这段代码在Next主题中已经集成，在 7.7.1中，代码位于 themes/next/layout/_third-party/baidu-push.swig文件中，仅需修改主题配置文件即可：</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Enable baidu push so that the blog will push the url to baidu automatically which is very helpful for SEO.</span></span><br><span class="line"><span class="attr">baidu_push:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>



<h3 id="提交Sitemap"><a href="#提交Sitemap" class="headerlink" title="提交Sitemap"></a>提交Sitemap</h3><blockquote>
<p>选择搜索服务的链接提交：</p>
</blockquote>
<img src="/2020/03/21/hexo/8_hexo_generate_sitemap/generate-sitemap/ljtj.png" class="" title="链接提交">

<blockquote>
<p>在自动提交- sitemap 中添加我们的sitemap链接即可：</p>
</blockquote>
<img src="/2020/03/21/hexo/8_hexo_generate_sitemap/generate-sitemap/bdst.png" class="" title="sitemap提交">

]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Next -14- 为Hexo Next7.7.1 添加RSS （带按钮）</title>
    <url>/2020/03/20/next/14_add_rss/next-add-rss/</url>
    <content><![CDATA[<blockquote>
<p>Next 7.7 将RSS按钮的代码删掉了，按照以往添加RSS的方法设置后可以生成xml文件，但没有按钮。本文介绍在Next 7.7 添加带按钮的RSS方法。</p>
</blockquote>
<a id="more"></a>

<h2 id="添加RSS"><a href="#添加RSS" class="headerlink" title="添加RSS"></a>添加RSS</h2><h3 id="安装插件-hexo-generator-feed"><a href="#安装插件-hexo-generator-feed" class="headerlink" title="安装插件 hexo-generator-feed"></a>安装插件 hexo-generator-feed</h3><blockquote>
<p>在hexo 目录运行命令：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure>

<h3 id="配置站点配置文件"><a href="#配置站点配置文件" class="headerlink" title="配置站点配置文件"></a>配置<code>站点配置文件</code></h3><blockquote>
<p>在站点配置文件添加：</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">plugins:</span> <span class="string">hexo-generate-feed</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># rss配置</span></span><br><span class="line"><span class="attr">feed:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">atom</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">atom.xml</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">20</span></span><br><span class="line">  <span class="attr">hub:</span></span><br><span class="line">  <span class="attr">content:</span></span><br><span class="line">  <span class="attr">content_limit:</span> <span class="number">140</span></span><br><span class="line">  <span class="attr">content_limit_delim:</span> <span class="string">' '</span></span><br><span class="line">  <span class="attr">order_by:</span> <span class="string">-date</span></span><br></pre></td></tr></table></figure>

<h3 id="配置Next主题配置文件"><a href="#配置Next主题配置文件" class="headerlink" title="配置Next主题配置文件"></a>配置Next<code>主题配置文件</code></h3><blockquote>
<p>主题配置文件默认没有rss字段，需要自己手动添加</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Set rss to false to disable feed link.</span></span><br><span class="line"><span class="comment"># Leave rss as blank to use site's feed link, and install hexo-generator-feed: `npm install hexo-generator-feed --save`.</span></span><br><span class="line"><span class="comment"># Set rss to specific value if you have burned your feed already.</span></span><br><span class="line"><span class="attr">rss:</span> <span class="string">/atom.xml</span></span><br></pre></td></tr></table></figure>

<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><blockquote>
<p>此时运行hexo g已经可以看到</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">INFO  Generated: atom.xml</span><br></pre></td></tr></table></figure>

<blockquote>
<p>事实上已经配置成功</p>
<p>但是侧边栏没有RSS按钮</p>
</blockquote>
<h2 id="在侧边栏添加RSS按钮"><a href="#在侧边栏添加RSS按钮" class="headerlink" title="在侧边栏添加RSS按钮"></a>在侧边栏添加RSS按钮</h2><blockquote>
<p>在Hexo/themes/next/layout/_partials/sidebar文件夹，打开site-overview.swig文件</p>
<p>在<code>- if theme.site_state</code>前加入代码：</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">&#123;%</span> <span class="string">if</span> <span class="string">theme.rss</span> <span class="string">%&#125;</span></span><br><span class="line">   <span class="string">&lt;div</span> <span class="string">class="feed-link</span> <span class="string">motion-element"&gt;</span></span><br><span class="line">     <span class="string">&lt;a</span> <span class="string">href="&#123;&#123;</span> <span class="string">url_for(theme.rss)</span> <span class="string">&#125;&#125;"</span> <span class="string">rel="alternate"&gt;</span></span><br><span class="line">       <span class="string">&lt;i</span> <span class="string">class="fa</span> <span class="string">fa-rss"&gt;&lt;/i&gt;</span></span><br><span class="line">       <span class="string">RSS</span></span><br><span class="line">     <span class="string">&lt;/a&gt;</span></span><br><span class="line">   <span class="string">&lt;/div&gt;</span></span><br><span class="line"> <span class="string">&#123;%</span> <span class="string">endif</span> <span class="string">%&#125;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>执行hexo g &amp;&amp; hexo s 即可查看效果</p>
</blockquote>
<img src="/2020/03/20/next/14_add_rss/next-add-rss/xg.png" class="" title="效果示例">]]></content>
      <categories>
        <category>Next</category>
      </categories>
      <tags>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo -7- Github源七牛云CDN加速教程（详细）</title>
    <url>/2020/03/19/hexo/7_hexo_speed_up/hexo-speed-up/</url>
    <content><![CDATA[<blockquote>
<p>Hexo使用Github Pages时存在加载缓慢的问题，国内很多CDN平台可以为网站提供加速服务，由于偶然的原因选择了<a href="https://portal.qiniu.com/" target="_blank" rel="noopener">七牛云</a>，可以免费生成SSL证书，http协议免费10g流量。但是网上相关教程并不友好，花了好多时间终于成功，在此将过程记录下来供后人参考。</p>
</blockquote>
<a id="more"></a>

<h2 id="需求描述"><a href="#需求描述" class="headerlink" title="需求描述"></a>需求描述</h2><blockquote>
<p>我的当前情况和需求：</p>
</blockquote>
<ul>
<li>已经申请了域名 zywvvd.com</li>
<li>服务器为国外的Github</li>
<li>正在使用Github分发的二级域名 zywvvd.github.io</li>
<li>已经将Hexo挂载到 <a href="http://www.zywvvd.com">www.zywvvd.com</a></li>
<li><strong>需要</strong> : 七牛云CDN加速站点，使得用户访问 <a href="http://www.zywvvd.com">www.zywvvd.com</a> 时速度快，而且顺利转到我的Hexo主页</li>
</ul>
<h2 id="CDN-Content-Delivery-Network-加速原理"><a href="#CDN-Content-Delivery-Network-加速原理" class="headerlink" title="CDN(Content Delivery Network)加速原理"></a>CDN(Content Delivery Network)加速原理</h2><blockquote>
<p>访问Github Pages缓慢的原因</p>
</blockquote>
<ul>
<li>服务器在国外，数据交互困难</li>
<li>客观因素无法改变，但是我们还是要求国内访问要快</li>
</ul>
<blockquote>
<p>CDN 原理</p>
</blockquote>
<ul>
<li>国内建立多个用于缓存静态页面的服务器</li>
<li>建立缓存区指向国外的站点，将其缓存到到国内的服务器</li>
<li>生成指向国内缓存的CANME（IP地址的别名）</li>
<li>将要加速的域名解析到上述CANME上，实现该域名访问时的加速</li>
</ul>
<h2 id="相关资料"><a href="#相关资料" class="headerlink" title="相关资料"></a>相关资料</h2><ul>
<li><p>测速网站1 ：<a href="http://www.webkaka.com/Ping.aspx" target="_blank" rel="noopener">http://www.webkaka.com/Ping.aspx</a></p>
</li>
<li><p>测速网站2：<a href="https://www.17ce.com/" target="_blank" rel="noopener">https://www.17ce.com/</a></p>
</li>
<li><p>教程1：<a href="[https://geek-space.cn/post/hexo-qiniu.html#%E4%B8%8B%E9%9D%A2%E5%B0%B1%E6%98%AF%E6%95%99%E7%A8%8B%E4%BA%86%EF%BC%88%E8%BF%99%E9%87%8C%E5%81%87%E8%AE%BE%E6%82%A8%E5%B7%B2%E7%BB%8F%E6%8E%8C%E6%8F%A1%E4%BA%86%E5%BB%BA%E7%AB%99%E7%9A%84%E6%8A%80%E6%9C%AF%EF%BC%89](https://geek-space.cn/post/hexo-qiniu.html#下面就是教程了（这里假设您已经掌握了建站的技术）)">Hexo 开启 CDN 加速访问</a></p>
</li>
<li><p>教程2：<a href="https://www.zhyong.cn/posts/ddf2/" target="_blank" rel="noopener">Hexo+Next 使用 CDN 加速网站以及静态文件</a></p>
</li>
<li><p>教程3：<a href="https://blog.csdn.net/zydarChen/article/details/89584937" target="_blank" rel="noopener">使用CDN加速你的博客</a></p>
</li>
</ul>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul>
<li>Hexo建站成功并挂载在互联网</li>
<li>已经申请并备案自己的域名并成功绑定Hexo站点</li>
<li>申请<a href="https://portal.qiniu.com/" target="_blank" rel="noopener">七牛云</a>账号</li>
</ul>
<h2 id="加速教程"><a href="#加速教程" class="headerlink" title="加速教程"></a>加速教程</h2><blockquote>
<p>正片开始</p>
</blockquote>
<h3 id="重新解析站点到其他二级域名"><a href="#重新解析站点到其他二级域名" class="headerlink" title="重新解析站点到其他二级域名"></a>重新解析站点到其他二级域名</h3><blockquote>
<p>这里的其他是相对与前缀<code>www</code>来说的。</p>
<p>是这样的，因为我想来访者通过域名 <a href="http://www.zywvvd.com">www.zywvvd.com</a> 访问我的站点，也就是说这是我需要加速的域名，不能再把这个域名直接解析到我们的Hexo站点了，但是还是需要有一个二级域名指向他，因此需要将Hexo站点绑定到其他二级域名，我用的是 <a href="https://zzz.zywvvd.com/" target="_blank" rel="noopener">https://zzz.zywvvd.com/</a></p>
</blockquote>
<img src="/2020/03/19/hexo/7_hexo_speed_up/hexo-speed-up/cname.png" class="" title="源站CNAME设置">

<img src="/2020/03/19/hexo/7_hexo_speed_up/hexo-speed-up/jiexi.png" class="" title="添加新的二级域名解析">

<blockquote>
<p>此时可以通过 <a href="https://zzz.zywvvd.com/" target="_blank" rel="noopener">https://zzz.zywvvd.com/</a> 访问我的站点，但仍是原来的龟速</p>
</blockquote>
<img src="/2020/03/19/hexo/7_hexo_speed_up/hexo-speed-up/before.png" class="" title="加速前">

<h3 id="申请SSL免费证书（貌似可选）"><a href="#申请SSL免费证书（貌似可选）" class="headerlink" title="申请SSL免费证书（貌似可选）"></a>申请SSL免费证书（貌似可选）</h3><blockquote>
<p>SSL证书用于域名支持https协议，七牛云在http协议下每月提供10g免费流量，但是我不开启https就无法访问站点，所以申请了证书，需要每月流量费用0.28元/GB，对我来说一个月几块钱足够了。</p>
<p>建议提前申请证书，开通域名加速后再申请会提示不支持www开头的域名，但是直接申请可以发放。</p>
</blockquote>
<ul>
<li>进入七牛云控制台，选择SSL证书服务：</li>
</ul>
<img src="/2020/03/19/hexo/7_hexo_speed_up/hexo-speed-up/ssl.png" class="" title="SSL证书服务">

<ul>
<li>购买证书（别慌，免费的）</li>
</ul>
<img src="/2020/03/19/hexo/7_hexo_speed_up/hexo-speed-up/goumai.png" class="" title="购买证书">

<ul>
<li>选择TrustAsia DV 域名型</li>
</ul>
<img src="/2020/03/19/hexo/7_hexo_speed_up/hexo-speed-up/hedui.png" class="" title="选择域名类型">

<ul>
<li>点击核对信息并支付，确认支付即可</li>
</ul>
<img src="/2020/03/19/hexo/7_hexo_speed_up/hexo-speed-up/queren.png" class="" title="核对支付">

<ul>
<li>点击补全信息，填入站点域名、备注、企业和个人信息（信息仅用于此次注册）</li>
</ul>
<img src="/2020/03/19/hexo/7_hexo_speed_up/hexo-speed-up/buquan.png" class="" title="补全信息">

<ul>
<li>提交后需要DNS验证，在一级域名出建立指定的二级域名，记录类型设置为TXT，主机记录填入指定值，一会就会验证成功</li>
</ul>
<img src="/2020/03/19/hexo/7_hexo_speed_up/hexo-speed-up/dnsyz.png" class="" title="DNS验证">

<ul>
<li>等待一会就签发成功啦</li>
</ul>
<img src="/2020/03/19/hexo/7_hexo_speed_up/hexo-speed-up/qianfa.png" class="" title="签发SSL证书">

<h3 id="在Hexo添加测试文件"><a href="#在Hexo添加测试文件" class="headerlink" title="在Hexo添加测试文件"></a>在Hexo添加测试文件</h3><ul>
<li>所谓的测试文件就是随便一个小文件，放在Hexo/source文件夹下</li>
</ul>
<img src="/2020/03/19/hexo/7_hexo_speed_up/hexo-speed-up/test.png" class="" title="测试文件">

<ul>
<li>hexo g ，hexo d 后可以访问 zywvvd.github.io/test.html 查看</li>
</ul>
<img src="/2020/03/19/hexo/7_hexo_speed_up/hexo-speed-up/fangwentest.png" class="" title="访问测试文件">

<h3 id="添加CDN加速域名"><a href="#添加CDN加速域名" class="headerlink" title="添加CDN加速域名"></a>添加CDN加速域名</h3><ul>
<li>七牛云控制台，CDN，选择域名管理，添加域名</li>
</ul>
<img src="/2020/03/19/hexo/7_hexo_speed_up/hexo-speed-up/tianjia.png" class="" title="添加域名">

<ul>
<li>选择 普通域名 填写你要加速的域名（需要备案） 选择通信协议 https（我用http失败了）</li>
</ul>
<img src="/2020/03/19/hexo/7_hexo_speed_up/hexo-speed-up/yumingshezhi.png" class="" title="填入信息">

<ul>
<li><font color=red size=6 face='微软雅黑'>重点！！！</font></li>
</ul>
<blockquote>
<p>覆盖范围：按照个人需求设置</p>
<p>使用场景：动态加速</p>
<p>源站配置：源站填github分发的二级域名</p>
<p>回源Host：填之前我们移动的二级域名，比如我的是 zzz.zywvvd.com/ </p>
<p>源站测试：填入刚刚的test.html，点击测试</p>
</blockquote>
<img src="/2020/03/19/hexo/7_hexo_speed_up/hexo-speed-up/yuanzhan.png" class="" title="源站配置">

<ul>
<li>其他根据个人需求配置，没特殊要求默认即可，等待一会即提示成功建立加速域名</li>
</ul>
<h3 id="添加七牛云CNAME解析"><a href="#添加七牛云CNAME解析" class="headerlink" title="添加七牛云CNAME解析"></a>添加七牛云CNAME解析</h3><ul>
<li>此时配置刚刚建立的域名，会提示你需要配置CNAME</li>
</ul>
<img src="/2020/03/19/hexo/7_hexo_speed_up/hexo-speed-up/tishi.png" class="" title="提示">

<ul>
<li>返回域名管理，复制CNAME</li>
</ul>
<img src="/2020/03/19/hexo/7_hexo_speed_up/hexo-speed-up/cn.png" class="" title="复制CNAME">

<ul>
<li>在域名商处添加加速前缀的二级域名，解析到上述CNAME</li>
</ul>
<img src="/2020/03/19/hexo/7_hexo_speed_up/hexo-speed-up/jie.png" class="" title="配置CNAME">

<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><blockquote>
<p>此时我们已经完成了：</p>
</blockquote>
<ul>
<li>加速域名 → 七牛云CNAME → 备用二级域名 → Gtihub二级域名 → 站点服务器</li>
</ul>
<blockquote>
<p>可以用dig 命令测试 ，见到七牛云的CNAME解析就可以了:</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">dig www.zywvvd.com</span><br></pre></td></tr></table></figure>

<img src="/2020/03/19/hexo/7_hexo_speed_up/hexo-speed-up/dig.png" class="" title="dig测试">

<blockquote>
<p>最实在的当然还是测速了</p>
</blockquote>
<img src="/2020/03/19/hexo/7_hexo_speed_up/hexo-speed-up/after.png" class="" title="网速测试">

<blockquote>
<p>舒服。。。</p>
</blockquote>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Next -13- 修复由于添加live2D造成的不蒜子统计失效</title>
    <url>/2020/03/09/next/13_busuanzi_fix_for_live2d/next-busuanzi-fix-live2d/</url>
    <content><![CDATA[<blockquote>
<p> 使用nextV7.7.1 主题时，在hexo中添加live2D看板娘后next原生自带的不蒜子统计会失效，本文介绍该问题的修复方法。</p>
</blockquote>
<a id="more"></a>

<h2 id="问题复现"><a href="#问题复现" class="headerlink" title="问题复现"></a>问题复现</h2><blockquote>
<p>开启next 主题中不蒜子统计：</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Show Views / Visitors of the website / page with busuanzi.</span></span><br><span class="line"><span class="comment"># Get more information on http://ibruce.info/2015/04/04/busuanzi</span></span><br><span class="line"><span class="attr">busuanzi_count:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_visitors:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_visitors_icon:</span> <span class="string">user</span></span><br><span class="line">  <span class="attr">total_views:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_views_icon:</span> <span class="string">eye</span></span><br><span class="line">  <span class="attr">post_views:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">post_views_icon:</span> <span class="string">eye</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>安装live2d插件：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure>

<blockquote>
<p>问题出现：</p>
</blockquote>
<img src="/2020/03/09/next/13_busuanzi_fix_for_live2d/next-busuanzi-fix-live2d/bug.png" class="" title="问题复现">

<h2 id="修复bug"><a href="#修复bug" class="headerlink" title="修复bug"></a>修复bug</h2><h3 id="方法1-卸载livd2d"><a href="#方法1-卸载livd2d" class="headerlink" title="方法1. 卸载livd2d"></a>方法1. 卸载livd2d</h3><blockquote>
<p>卸载live2d可以解决问题:</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm uninstall --save hexo-helper-live2d</span><br></pre></td></tr></table></figure>

<img src="/2020/03/09/next/13_busuanzi_fix_for_live2d/next-busuanzi-fix-live2d/fix1.png" class="" title="方法1">

<h3 id="方法2-手动重新添加不蒜子"><a href="#方法2-手动重新添加不蒜子" class="headerlink" title="方法2. 手动重新添加不蒜子"></a>方法2. 手动重新添加不蒜子</h3><blockquote>
<p>看板娘怎么可以卸载？？？？？ 绝对不能接受！！！</p>
</blockquote>
<ul>
<li>关闭next原生不蒜子</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Show Views / Visitors of the website / page with busuanzi.</span></span><br><span class="line"><span class="comment"># Get more information on http://ibruce.info/2015/04/04/busuanzi</span></span><br><span class="line"><span class="attr">busuanzi_count:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">total_visitors:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_visitors_icon:</span> <span class="string">user</span></span><br><span class="line">  <span class="attr">total_views:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_views_icon:</span> <span class="string">eye</span></span><br><span class="line">  <span class="attr">post_views:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">post_views_icon:</span> <span class="string">eye</span></span><br></pre></td></tr></table></figure>

<h4 id="修复主页总数统计"><a href="#修复主页总数统计" class="headerlink" title="修复主页总数统计"></a>修复主页总数统计</h4><ul>
<li>在<code>Hexo根目录</code>/themes/next/layout/_partials/文件夹中修改 footer.swig，在最后一行前加入代码：</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">"//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>	</span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-meta-item-icon"</span>&gt;</span></span><br><span class="line">	      <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-group"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">span</span>&gt;</span>总访客&amp;nbsp<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_value_site_uv"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp人<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    	<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-meta-divider"</span>&gt;</span>|<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-meta-item-icon"</span>&gt;</span></span><br><span class="line">	      <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-eye"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    	<span class="tag">&lt;<span class="name">span</span>&gt;</span>访问总量&amp;nbsp<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_value_site_pv"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp次<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    	</span><br><span class="line">&#123;&#123;- next_inject('footer') &#125;&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>效果：</p>
</blockquote>
<img src="/2020/03/09/next/13_busuanzi_fix_for_live2d/next-busuanzi-fix-live2d/fix2.png" class="" title="修复主页总数统计">

<h4 id="修复文章统计"><a href="#修复文章统计" class="headerlink" title="修复文章统计"></a>修复文章统计</h4><blockquote>
<p>可以通过开启 <code>主题配置文件</code> - valine 评论中的 <code>visitor</code> 开关来替代不蒜子的统计功能。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">valine:</span><br><span class="line">  enable: true</span><br><span class="line">  ...</span><br><span class="line">  visitor: true # Article reading statistic</span><br></pre></td></tr></table></figure>

<blockquote>
<p>开启valine方法参考<a href="http://localhost:4000/zywvvd.github.io/2020/02/28/next/6_add_valine_comments/add-valine-comments/" target="_blank" rel="noopener">Next -6- 添加Valine评论系统</a></p>
</blockquote>
<img src="/2020/03/09/next/13_busuanzi_fix_for_live2d/next-busuanzi-fix-live2d/fix3.png" class="" title="修复文章统计">]]></content>
      <categories>
        <category>Next</category>
      </categories>
      <tags>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo -6- FontAwesome 4.7.0 中完整的675个图标样式CSS参考</title>
    <url>/2020/03/09/hexo/6_hexo_icons/hexo-icons/</url>
    <content><![CDATA[<blockquote>
<p>Hexo 支持FontAwesome图标，就是在代码中出现名字以<code>fa fa</code>开头的类名，本文介绍具具体图标来源和使用方法。</p>
</blockquote>
<a id="more"></a>

<h2 id="图标列表"><a href="#图标列表" class="headerlink" title="图标列表"></a>图标列表</h2><blockquote>
<p><a href="https://9iphp.com/fa-icons" target="_blank" rel="noopener">官方链接</a></p>
</blockquote>
<h3 id="New-Icons-in-4-7"><a href="#New-Icons-in-4-7" class="headerlink" title="New Icons in 4.7"></a>New Icons in 4.7</h3><img src="/2020/03/09/hexo/6_hexo_icons/hexo-icons/1.png" class="" title="New-Icons-in-4.7">

<h3 id="Web-Application-Icons"><a href="#Web-Application-Icons" class="headerlink" title="Web Application Icons"></a>Web Application Icons</h3><img src="/2020/03/09/hexo/6_hexo_icons/hexo-icons/2.png" class="" title="Web-Application-Icons">

<img src="/2020/03/09/hexo/6_hexo_icons/hexo-icons/3.png" class="" title="Web-Application-Icons">

<img src="/2020/03/09/hexo/6_hexo_icons/hexo-icons/4.png" class="" title="Web-Application-Icons">

<img src="/2020/03/09/hexo/6_hexo_icons/hexo-icons/5.png" class="" title="Web-Application-Icons">

<img src="/2020/03/09/hexo/6_hexo_icons/hexo-icons/6.png" class="" title="Web-Application-Icons">

<h3 id="Accessibility-Icons"><a href="#Accessibility-Icons" class="headerlink" title="Accessibility Icons"></a>Accessibility Icons</h3><img src="/2020/03/09/hexo/6_hexo_icons/hexo-icons/7.png" class="" title="Accessibility-Icons">

<h3 id="Hand-Icons"><a href="#Hand-Icons" class="headerlink" title="Hand Icons"></a>Hand Icons</h3><img src="/2020/03/09/hexo/6_hexo_icons/hexo-icons/8.png" class="" title="Hand-Icons">

<h3 id="Transportation-Icons"><a href="#Transportation-Icons" class="headerlink" title="Transportation Icons"></a>Transportation Icons</h3><img src="/2020/03/09/hexo/6_hexo_icons/hexo-icons/9.png" class="" title="Transportation-Icons">

<h3 id="Gender-Icons"><a href="#Gender-Icons" class="headerlink" title="Gender Icons"></a>Gender Icons</h3><img src="/2020/03/09/hexo/6_hexo_icons/hexo-icons/10.png" class="" title="Gender-Icons">

<h3 id="File-Type-Icons"><a href="#File-Type-Icons" class="headerlink" title="File Type Icons"></a>File Type Icons</h3><img src="/2020/03/09/hexo/6_hexo_icons/hexo-icons/11.png" class="" title="File-Type-Icons">

<h3 id="Spinner-Icons"><a href="#Spinner-Icons" class="headerlink" title="Spinner Icons"></a>Spinner Icons</h3><img src="/2020/03/09/hexo/6_hexo_icons/hexo-icons/12.png" class="" title="Spinner-Icons">

<h3 id="Form-Control-Icons"><a href="#Form-Control-Icons" class="headerlink" title="Form Control Icons"></a>Form Control Icons</h3><img src="/2020/03/09/hexo/6_hexo_icons/hexo-icons/13.png" class="" title="Form-Control-Icons">

<h3 id="Payment-Icons"><a href="#Payment-Icons" class="headerlink" title="Payment Icons"></a>Payment Icons</h3><img src="/2020/03/09/hexo/6_hexo_icons/hexo-icons/14.png" class="" title="Payment-Icons">

<h3 id="Chart-Icons"><a href="#Chart-Icons" class="headerlink" title="Chart Icons"></a>Chart Icons</h3><img src="/2020/03/09/hexo/6_hexo_icons/hexo-icons/15.png" class="" title="Chart-Icons">

<h3 id="Currency-Icons"><a href="#Currency-Icons" class="headerlink" title="Currency Icons"></a>Currency Icons</h3><img src="/2020/03/09/hexo/6_hexo_icons/hexo-icons/16.png" class="" title="Currency-Icons">

<h3 id="Text-Editor-Icons"><a href="#Text-Editor-Icons" class="headerlink" title="Text Editor Icons"></a>Text Editor Icons</h3><img src="/2020/03/09/hexo/6_hexo_icons/hexo-icons/17.png" class="" title="Text-Editor-Icons">

<h3 id="Directional-Icons"><a href="#Directional-Icons" class="headerlink" title="Directional Icons"></a>Directional Icons</h3><img src="/2020/03/09/hexo/6_hexo_icons/hexo-icons/18.png" class="" title="Directional-Icons">

<h3 id="Video-Player-Icons"><a href="#Video-Player-Icons" class="headerlink" title="Video Player Icons"></a>Video Player Icons</h3><img src="/2020/03/09/hexo/6_hexo_icons/hexo-icons/19.png" class="" title="Video-Player-Icons">

<h3 id="Brand-Icons"><a href="#Brand-Icons" class="headerlink" title="Brand Icons"></a>Brand Icons</h3><img src="/2020/03/09/hexo/6_hexo_icons/hexo-icons/20.png" class="" title="Brand-Icons">

<img src="/2020/03/09/hexo/6_hexo_icons/hexo-icons/21.png" class="" title="Brand-Icons">

<img src="/2020/03/09/hexo/6_hexo_icons/hexo-icons/22.png" class="" title="Brand-Icons">

<h3 id="Medical-Icons"><a href="#Medical-Icons" class="headerlink" title="Medical Icons"></a>Medical Icons</h3><img src="/2020/03/09/hexo/6_hexo_icons/hexo-icons/23.png" class="" title="Medical-Icons">

<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><blockquote>
<p>首先引入CSS文件：<link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet"></p>
<p>在Hexo中不需要手动引入，可以直接使用。</p>
<p>用</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-XXXX"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>输出图标<br>比如在hexo文章中添加代码</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fa fa-home"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><span class="fa fa-home"></span></p>
<blockquote>
<p> 可输出 <code>家</code> 图标</p>
</blockquote>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo -5- 添加 live2d 看板动画</title>
    <url>/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/</url>
    <content><![CDATA[<blockquote>
<p>live2d是一种应用于电子游戏的绘图渲染技术，技术由日本Cybernoids公司开发。通过一系列的连续图像和人物建模来生成一种类似三维模型的二维图像。 在Hexo中生成可以与用户互动的卡通人物，简直就是博客的灵魂所在。本文介绍live2d 看板动画添加方法。</p>
</blockquote>
<a id="more"></a>

<h2 id="安装-hexo-helper-live2d"><a href="#安装-hexo-helper-live2d" class="headerlink" title="安装 hexo-helper-live2d"></a>安装 hexo-helper-live2d</h2><blockquote>
<p>官网链接 <a href="https://github.com/EYHN/hexo-helper-live2d/blob/HEAD/README.zh-CN.md" target="_blank" rel="noopener">hexo-helper-live2d Github 官方链接</a></p>
<p>安装时需要在 Hexo 工程目录下输入命令：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure>

<h2 id="挑选喜欢的模型"><a href="#挑选喜欢的模型" class="headerlink" title="挑选喜欢的模型"></a>挑选喜欢的模型</h2><blockquote>
<p>基础的live2d模型有很多，挑选你喜欢的记录下他的名字：</p>
</blockquote>
<h3 id="chitose"><a href="#chitose" class="headerlink" title="chitose"></a>chitose</h3><img src="/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/chitose.png" class="" title="chitose">

<h3 id="epsilon2-1"><a href="#epsilon2-1" class="headerlink" title="epsilon2_1"></a>epsilon2_1</h3><img src="/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/epsilon2_1.png" class="" title="epsilon2_1">

<h3 id="gf"><a href="#gf" class="headerlink" title="gf"></a>gf</h3><img src="/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/gf.png" class="" title="gf">

<h3 id="haru-01"><a href="#haru-01" class="headerlink" title="haru/01"></a>haru/01</h3><img src="/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/haru01.png" class="" title="haru-01">

<h3 id="haru-02"><a href="#haru-02" class="headerlink" title="haru/02"></a>haru/02</h3><img src="/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/haru02.png" class="" title="haru-02">

<h3 id="haruto"><a href="#haruto" class="headerlink" title="haruto"></a>haruto</h3><img src="/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/haruto.png" class="" title="haruto">

<h3 id="hibiki"><a href="#hibiki" class="headerlink" title="hibiki"></a>hibiki</h3><img src="/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/hibiki.png" class="" title="hibiki">

<h3 id="hijiki"><a href="#hijiki" class="headerlink" title="hijiki"></a>hijiki</h3><img src="/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/hijiki.png" class="" title="hijiki">

<h3 id="izumi"><a href="#izumi" class="headerlink" title="izumi"></a>izumi</h3><img src="/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/izumi.png" class="" title="izumi">

<h3 id="koharu"><a href="#koharu" class="headerlink" title="koharu"></a>koharu</h3><img src="/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/koharu.png" class="" title="koharu">

<h3 id="miku"><a href="#miku" class="headerlink" title="miku"></a>miku</h3><img src="/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/miku.png" class="" title="miku">

<h3 id="nico"><a href="#nico" class="headerlink" title="nico"></a>nico</h3><img src="/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/nico.png" class="" title="nico">

<h3 id="nietzsche"><a href="#nietzsche" class="headerlink" title="nietzsche"></a>nietzsche</h3><img src="/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/nietzsche.png" class="" title="nietzsche">

<h3 id="ni-j"><a href="#ni-j" class="headerlink" title="ni-j"></a>ni-j</h3><img src="/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/ni-j.png" class="" title="ni-j">

<h3 id="nipsilon"><a href="#nipsilon" class="headerlink" title="nipsilon"></a>nipsilon</h3><img src="/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/nipsilon.png" class="" title="nipsilon">

<h3 id="nito"><a href="#nito" class="headerlink" title="nito"></a>nito</h3><img src="/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/nito.png" class="" title="nito">

<h3 id="shizuku"><a href="#shizuku" class="headerlink" title="shizuku"></a>shizuku</h3><img src="/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/shizuku.png" class="" title="shizuku">

<h3 id="tororo"><a href="#tororo" class="headerlink" title="tororo"></a>tororo</h3><img src="/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/tororo.png" class="" title="tororo">

<h3 id="tsumiki"><a href="#tsumiki" class="headerlink" title="tsumiki"></a>tsumiki</h3><img src="/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/tsumiki.png" class="" title="tsumiki">

<h3 id="unitychan"><a href="#unitychan" class="headerlink" title="unitychan"></a>unitychan</h3><img src="/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/unitychan.png" class="" title="unitychan">

<h3 id="wanko"><a href="#wanko" class="headerlink" title="wanko"></a>wanko</h3><img src="/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/wanko.png" class="" title="wanko">

<h3 id="z16"><a href="#z16" class="headerlink" title="z16"></a>z16</h3><img src="/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/z16.png" class="" title="z16">

<h2 id="模型下载"><a href="#模型下载" class="headerlink" title="模型下载"></a>模型下载</h2><h3 id="命令行"><a href="#命令行" class="headerlink" title="命令行"></a>命令行</h3><blockquote>
<p>在hexo目录中输入命令：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install --save live2d-widget-model-`模型名字`</span><br></pre></td></tr></table></figure>

<blockquote>
<p> 此时在<code>hexo根目录</code>/node_modules/ 文件夹中增加 ‘ live2d-widget-model-<code>模型名字</code> ‘ 文件夹</p>
</blockquote>
<img src="/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/new_dir.png" class="" title="新增文件夹">



<h3 id="github下载"><a href="#github下载" class="headerlink" title="github下载"></a>github下载</h3><blockquote>
<p>上述列表模型<a href="https://github.com/xiazeyu/live2d-widget-models" target="_blank" rel="noopener"> github地址 </a> </p>
<p>新模型 <a href="https://github.com/summerscar/live2dDemo" target="_blank" rel="noopener">gtihub地址</a></p>
<p>可以下载模型放在<code>hexo根目录</code>/node_modules/ 文件夹中，以达到命令行安装的效果</p>
</blockquote>
<h2 id="模型应用配置"><a href="#模型应用配置" class="headerlink" title="模型应用配置"></a>模型应用配置</h2><blockquote>
<p>在<code>站点配置文件</code>中加入配置信息：</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">live2d:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">scriptFrom:</span> <span class="string">local</span></span><br><span class="line">  <span class="attr">pluginRootPath:</span> <span class="string">live2dw/</span></span><br><span class="line">  <span class="attr">pluginJsPath:</span> <span class="string">lib/</span></span><br><span class="line">  <span class="attr">pluginModelPath:</span> <span class="string">assets/</span></span><br><span class="line">  <span class="attr">tagMode:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">log:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">model:</span></span><br><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget-model-&lt;模型名字&gt;</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">right</span>  <span class="comment"># left</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">220</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">440</span></span><br><span class="line">  <span class="attr">mobile:</span></span><br><span class="line">    <span class="attr">show:</span> <span class="literal">true</span>   <span class="comment">#是否在手机进行显示</span></span><br><span class="line">  <span class="attr">react:</span></span><br><span class="line">    <span class="attr">opacity:</span> <span class="number">0.7</span></span><br></pre></td></tr></table></figure>

<h2 id="haru"><a href="#haru" class="headerlink" title="haru"></a>haru</h2><blockquote>
<p>haru 和其他模型有些不同，haru包中包含 01 / 02 两个模型，在使用时模型名字为：</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">model:</span></span><br><span class="line">  <span class="attr">use:</span> <span class="string">live2d-widget-model-haru/01</span></span><br></pre></td></tr></table></figure>

<p>或</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">model:</span></span><br><span class="line">  <span class="attr">use:</span> <span class="string">live2d-widget-model-haru/02</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>此时模型仍然无法正确加载，因为<code>hexo根目录</code>/node_modules/live2d-widget-model-haru/01/或02/ 中的json文件是空的，所以需要把<code>hexo根目录</code>/node_modules/live2d-widget-model-haru/中的json文件复制到01/或02/文件夹中。</p>
</blockquote>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><blockquote>
<p>输入命令：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>

<blockquote>
<p>在<code>http://127.0.0.1:4000/</code>查看测试结果 (示例为z16)</p>
</blockquote>
<img src="/2020/03/09/hexo/5_hexo_add_live2d/add-live2d/test.png" class="" title="示例效果">

<h2 id="加强版（可以说话、互动）"><a href="#加强版（可以说话、互动）" class="headerlink" title="加强版（可以说话、互动）"></a>加强版（可以说话、互动）</h2><blockquote>
<p><a href="https://github.com/stevenjoezhang/live2d-widget" target="_blank" rel="noopener">优化版live2d-widget</a></p>
</blockquote>
<blockquote>
<p>具体方法参考</p>
<p><a href="https://blog.csdn.net/weixin_34235371/article/details/91468588" target="_blank" rel="noopener">https://blog.csdn.net/weixin_34235371/article/details/91468588</a></p>
<p> <a href="https://blog.csdn.net/cungudafa/article/details/104282643#_47" target="_blank" rel="noopener">https://blog.csdn.net/cungudafa/article/details/104282643#_47</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Next -12- 渲染markdown数学公式</title>
    <url>/2020/03/09/next/12_add_formular/next-add-formular/</url>
    <content><![CDATA[<blockquote>
<p>Hexo next主题默认的markdown渲染引擎不会渲染数学公式，V7.7主题提供了渲染公式的方法，下面介绍如何使用该功能。</p>
</blockquote>
<a id="more"></a>

<h2 id="示例公式内容"><a href="#示例公式内容" class="headerlink" title="示例公式内容"></a>示例公式内容</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">$$</span><br><span class="line"><span class="code">	Precision=\frac&#123;TP&#125;&#123;TP+FP&#125;</span></span><br><span class="line">$$</span><br></pre></td></tr></table></figure>

<h2 id="默认渲染效果"><a href="#默认渲染效果" class="headerlink" title="默认渲染效果"></a>默认渲染效果</h2><img src="/2020/03/09/next/12_add_formular/next-add-formular/moren.png" class="" title="默认渲染">

<h2 id="开启公式渲染的方法"><a href="#开启公式渲染的方法" class="headerlink" title="开启公式渲染的方法"></a>开启公式渲染的方法</h2><h3 id="在-Next-主题中开启-MathJax-开关"><a href="#在-Next-主题中开启-MathJax-开关" class="headerlink" title="在 Next 主题中开启 MathJax 开关"></a>在 Next 主题中开启 MathJax 开关</h3><blockquote>
<p>编辑next<code>主题配置文件</code>，将MathJax 开关改为<code>True</code></p>
</blockquote>
<img src="/2020/03/09/next/12_add_formular/next-add-formular/math.png" class="" title="编辑主题配置文件">

<h3 id="修改文章Front-matter"><a href="#修改文章Front-matter" class="headerlink" title="修改文章Front-matter"></a>修改文章Front-matter</h3><blockquote>
<p>在想要添加公式文章的<code>Front-matter</code>中添加<code>mathjax: true</code>即可</p>
</blockquote>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">title: test_title</span><br><span class="line">date: 2020-02-27 16:41:16</span><br><span class="line">tags: [test_tag]</span><br><span class="line">categories: [test_cate]</span><br><span class="line">mathjax: true</span><br></pre></td></tr></table></figure>

<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><blockquote>
<p>再次写入示例公式代码，即可正常渲染。</p>
</blockquote>
<p>$$<br>Precision=\frac{TP}{TP+FP}<br>$$</p>
]]></content>
      <categories>
        <category>Next</category>
      </categories>
      <tags>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>Next -11- 为文章添加阅读进度</title>
    <url>/2020/03/09/next/11_article_percentage/article-percentage/</url>
    <content><![CDATA[<blockquote>
<p>Next可以在文章中添加当前阅读进度的百分比或颜色进度条，本文介绍功能开启方法。</p>
</blockquote>
<a id="more"></a>

<h2 id="阅读进度百分比"><a href="#阅读进度百分比" class="headerlink" title="阅读进度百分比"></a>阅读进度百分比</h2><blockquote>
<p>修改<code>主题配置文件</code>，修改<code>back2top</code>：</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">back2top:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 开启 back to top 按钮</span></span><br><span class="line">  <span class="comment"># Back to top in sidebar.</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="literal">true</span> <span class="comment"># true 表示在侧边栏显示，false则在侧下角</span></span><br><span class="line">  <span class="comment"># Scroll percent label in b2t button.</span></span><br><span class="line">  <span class="attr">scrollpercent:</span> <span class="literal">true</span> <span class="comment"># 开启进度百分比</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>效果：</p>
</blockquote>
<img src="/2020/03/09/next/11_article_percentage/article-percentage/percentage.png" class="" title="进度百分比">



<h2 id="颜色进度条"><a href="#颜色进度条" class="headerlink" title="颜色进度条"></a>颜色进度条</h2><blockquote>
<p>修改<code>主题配置文件</code>，修改<code>reading_progress</code>：</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Reading progress bar</span></span><br><span class="line"><span class="attr">reading_progress:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 开启进度条</span></span><br><span class="line">  <span class="comment"># Available values: top | bottom</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">bottom</span> <span class="comment"># 设置位置 可以为  top | bottom</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">"#37c6c0"</span> <span class="comment"># 进度条颜色 16进制RGB</span></span><br><span class="line">  <span class="attr">height:</span> <span class="string">3px</span> <span class="comment"># 高度</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>效果：</p>
</blockquote>
<img src="/2020/03/09/next/11_article_percentage/article-percentage/processbar.png" class="" title="颜色进度条">]]></content>
      <categories>
        <category>Next</category>
      </categories>
      <tags>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>Next -10- 页面右上角添加Fork me on github按钮</title>
    <url>/2020/02/29/next/10_fork_me_on_github/fork-me-on-github/</url>
    <content><![CDATA[<blockquote>
<p>本文介绍Hexo博客Next主题在页面右上角（或者左上角）添加“Fork me on github”按钮。</p>
</blockquote>
<a id="more"></a>

<h2 id="选择按钮样式"><a href="#选择按钮样式" class="headerlink" title="选择按钮样式"></a>选择按钮样式</h2><blockquote>
<p>在 <a href="http://tholman.com/github-corners/" target="_blank" rel="noopener">GitHub Corners</a> 或 <a href="https://github.blog/2008-12-19-github-ribbons/" target="_blank" rel="noopener">GitHub Ribbons</a> 选择自己喜欢的按钮样式并复制代码，将href换成自己的链接。</p>
</blockquote>
<h3 id="Corners"><a href="#Corners" class="headerlink" title="Corners"></a>Corners</h3><blockquote>
<p>假设选择了这一款</p>
</blockquote>
<img src="/2020/02/29/next/10_fork_me_on_github/fork-me-on-github/corner.png" class="" title="Corners">

<blockquote>
<p>代码：</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;a href&#x3D;&quot;https:&#x2F;&#x2F;your-url&quot; class&#x3D;&quot;github-corner&quot; aria-label&#x3D;&quot;View source on GitHub&quot;&gt;&lt;svg width&#x3D;&quot;80&quot; height&#x3D;&quot;80&quot; viewBox&#x3D;&quot;0 0 250 250&quot; style&#x3D;&quot;fill:#FD6C6C; color:#fff; position: absolute; top: 0; border: 0; right: 0;&quot; aria-hidden&#x3D;&quot;true&quot;&gt;&lt;path d&#x3D;&quot;M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z&quot;&gt;&lt;&#x2F;path&gt;&lt;path d&#x3D;&quot;M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2&quot; fill&#x3D;&quot;currentColor&quot; style&#x3D;&quot;transform-origin: 130px 106px;&quot; class&#x3D;&quot;octo-arm&quot;&gt;&lt;&#x2F;path&gt;&lt;path d&#x3D;&quot;M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z&quot; fill&#x3D;&quot;currentColor&quot; class&#x3D;&quot;octo-body&quot;&gt;&lt;&#x2F;path&gt;&lt;&#x2F;svg&gt;&lt;&#x2F;a&gt;&lt;style&gt;.github-corner:hover .octo-arm&#123;animation:octocat-wave 560ms ease-in-out&#125;@keyframes octocat-wave&#123;0%,100%&#123;transform:rotate(0)&#125;20%,60%&#123;transform:rotate(-25deg)&#125;40%,80%&#123;transform:rotate(10deg)&#125;&#125;@media (max-width:500px)&#123;.github-corner:hover .octo-arm&#123;animation:none&#125;.github-corner .octo-arm&#123;animation:octocat-wave 560ms ease-in-out&#125;&#125;&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>替换链接，主要修改：<code>href=&quot;https://your-url&quot;</code></p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;a href&#x3D;&quot;https:&#x2F;&#x2F;github.com&#x2F;zywvvd&quot; class&#x3D;&quot;github-corner&quot; aria-label&#x3D;&quot;View source on GitHub&quot;&gt;&lt;svg width&#x3D;&quot;80&quot; height&#x3D;&quot;80&quot; viewBox&#x3D;&quot;0 0 250 250&quot; style&#x3D;&quot;fill:#FD6C6C; color:#fff; position: absolute; top: 0; border: 0; right: 0;&quot; aria-hidden&#x3D;&quot;true&quot;&gt;&lt;path d&#x3D;&quot;M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z&quot;&gt;&lt;&#x2F;path&gt;&lt;path d&#x3D;&quot;M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2&quot; fill&#x3D;&quot;currentColor&quot; style&#x3D;&quot;transform-origin: 130px 106px;&quot; class&#x3D;&quot;octo-arm&quot;&gt;&lt;&#x2F;path&gt;&lt;path d&#x3D;&quot;M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z&quot; fill&#x3D;&quot;currentColor&quot; class&#x3D;&quot;octo-body&quot;&gt;&lt;&#x2F;path&gt;&lt;&#x2F;svg&gt;&lt;&#x2F;a&gt;&lt;style&gt;.github-corner:hover .octo-arm&#123;animation:octocat-wave 560ms ease-in-out&#125;@keyframes octocat-wave&#123;0%,100%&#123;transform:rotate(0)&#125;20%,60%&#123;transform:rotate(-25deg)&#125;40%,80%&#123;transform:rotate(10deg)&#125;&#125;@media (max-width:500px)&#123;.github-corner:hover .octo-arm&#123;animation:none&#125;.github-corner .octo-arm&#123;animation:octocat-wave 560ms ease-in-out&#125;&#125;&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure>

<h3 id="Ribbons"><a href="#Ribbons" class="headerlink" title="Ribbons"></a>Ribbons</h3><blockquote>
<p>假设选择了这一款</p>
</blockquote>
<img src="/2020/02/29/next/10_fork_me_on_github/fork-me-on-github/ribbin.png" class="" title="Ribbons">

<blockquote>
<p>代码：</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;a href&#x3D;&quot;https:&#x2F;&#x2F;github.com&#x2F;you&quot;&gt;&lt;img width&#x3D;&quot;149&quot; height&#x3D;&quot;149&quot; src&#x3D;&quot;https:&#x2F;&#x2F;github.blog&#x2F;wp-content&#x2F;uploads&#x2F;2008&#x2F;12&#x2F;forkme_right_green_007200.png?resize&#x3D;149%2C149&quot; class&#x3D;&quot;attachment-full size-full&quot; alt&#x3D;&quot;Fork me on GitHub&quot; data-recalc-dims&#x3D;&quot;1&quot;&gt;&lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>替换链接，修改<code>href=&quot;https://github.com/you&quot;</code>为自己的链接；</p>
<p>现有代码直接使用会出问题，需要在img标签中加入 <code>style=&quot;position:absolute; right:-2px; top:2px;</code>“</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;a href&#x3D;&quot;https:&#x2F;&#x2F;github.com&#x2F;zywvvd&quot; &gt;</span><br><span class="line">    		&lt;img width&#x3D;&quot;149&quot; height&#x3D;&quot;149&quot;  style&#x3D;&quot;position:absolute; right:-2px; top:2px;&quot; src&#x3D;&quot;https:&#x2F;&#x2F;github.blog&#x2F;wp-content&#x2F;uploads&#x2F;2008&#x2F;12&#x2F;forkme_right_green_007200.png?resize&#x3D;149%2C149&quot; class&#x3D;&quot;attachment-full size-full&quot; alt&#x3D;&quot;Fork me on GitHub&quot; data-recalc-dims&#x3D;&quot;1&quot;&gt;</span><br><span class="line">    	&lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure>

<h2 id="代码加入工程"><a href="#代码加入工程" class="headerlink" title="代码加入工程"></a>代码加入工程</h2><blockquote>
<p>将改好的代码粘贴到<code>themes/next/layout/_layout.swig</code>文件中<code>&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;</code>下面一行：</p>
</blockquote>
<img src="/2020/02/29/next/10_fork_me_on_github/fork-me-on-github/layout.png" class="" title="_layout.swig文件">

<blockquote>
<p>Coners</p>
</blockquote>
<img src="/2020/02/29/next/10_fork_me_on_github/fork-me-on-github/daima1.png" class="" title="Coners代码">

<img src="/2020/02/29/next/10_fork_me_on_github/fork-me-on-github/shili1.png" class="" title="Coners效果">

<blockquote>
<p>Ribbons</p>
</blockquote>
<img src="/2020/02/29/next/10_fork_me_on_github/fork-me-on-github/daima2.png" class="" title="Ribbons代码">

<img src="/2020/02/29/next/10_fork_me_on_github/fork-me-on-github/shili2.png" class="" title="Ribbons效果">

<h2 id="同时应用Coners和Ribbons"><a href="#同时应用Coners和Ribbons" class="headerlink" title="同时应用Coners和Ribbons"></a>同时应用Coners和Ribbons</h2><blockquote>
<p>向_layout.png中加入两段代码，修改图片颜色：</p>
</blockquote>
<img src="/2020/02/29/next/10_fork_me_on_github/fork-me-on-github/daima3.png" class="" title="两段代码">

<blockquote>
<p>效果：</p>
</blockquote>
<img src="/2020/02/29/next/10_fork_me_on_github/fork-me-on-github/shili3.png" class="" title="同时应用效果">]]></content>
      <categories>
        <category>Next</category>
      </categories>
      <tags>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>Next -9- 添加头像</title>
    <url>/2020/02/28/next/9_add_avatar/add-avatar/</url>
    <content><![CDATA[<blockquote>
<p>本文介绍Next主题添加头像的方法。</p>
</blockquote>
<a id="more"></a>

<h2 id="头像文件"><a href="#头像文件" class="headerlink" title="头像文件"></a>头像文件</h2><blockquote>
<p>把准备好的头像图片放在<code>/next/source/images/</code>文件夹内。</p>
</blockquote>
<img src="/2020/02/28/next/9_add_avatar/add-avatar/avatar.png" class="" title="头像图片">

<h2 id="修改主题配置文件"><a href="#修改主题配置文件" class="headerlink" title="修改主题配置文件"></a>修改主题配置文件</h2><blockquote>
<p>修改<code>avatar.url</code>：</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Sidebar Avatar</span></span><br><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="comment"># Replace the default image and set the url here.</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">/images/avatar.jpg</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be dispalyed in circle.</span></span><br><span class="line">  <span class="attr">rounded:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be rotated with the cursor.</span></span><br><span class="line">  <span class="attr">rotated:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<img src="/2020/02/28/next/9_add_avatar/add-avatar/xiaoguo.png" class="" title="主页效果">]]></content>
      <categories>
        <category>Next</category>
      </categories>
      <tags>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>Next -8- 修改文章模板</title>
    <url>/2020/02/28/next/8_change_model_of_post/change-model-of-post/</url>
    <content><![CDATA[<blockquote>
<p>Next文章内容会是丰富多彩的，但是要素主要为：标题、日期、标签、类别、摘要、more标签和正文，每次创建文章都需要创建这些内容过于繁琐而且容易出错，将相关内容加入到模板可以规范格式、省去重复劳动并且避免错误。</p>
</blockquote>
<a id="more"></a>

<h2 id="修改方法"><a href="#修改方法" class="headerlink" title="修改方法"></a>修改方法</h2><blockquote>
<p>hexo在新建文章时会默认套用<code>/hexo_root/scaffolds/post.md</code>模板，默认为：</p>
</blockquote>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">tags:</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<blockquote>
<p>将其修改为你需要的模式：</p>
</blockquote>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">tags:</span><br><span class="line">categories:</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="section">## 概述</span></span><br><span class="line"></span><br><span class="line"><span class="quote">&gt; 本文。</span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!--more--&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="section">## 正文</span></span><br></pre></td></tr></table></figure>

<h2 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h2><blockquote>
<p>新建文章就是模板的形式了：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo new test_post</span><br></pre></td></tr></table></figure>

<img src="/2020/02/28/next/8_change_model_of_post/change-model-of-post/model.png" class="" title="模板文章">]]></content>
      <categories>
        <category>Next</category>
      </categories>
      <tags>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>Next -7- 为文章在主页添加“阅读更多”</title>
    <url>/2020/02/28/next/7_read_more/read-more/</url>
    <content><![CDATA[<blockquote>
<p>Hexo的主页会显示博客文章，但是每篇文章都显示全文会影响文章展示的效果。</p>
<p>本篇介绍为文章在主页设置摘要的方法。</p>
</blockquote>
<a id="more"></a>

<h2 id="Next标签（推荐）"><a href="#Next标签（推荐）" class="headerlink" title="Next标签（推荐）"></a>Next标签（推荐）</h2><blockquote>
<p>Markdown中的注释</p>
</blockquote>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="comment">&lt;!--more--&gt;</span></span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>本身对文档没有影响，但在Next中会被识别为摘要截断的标志。标志之后的内容不会在首页显示。</p>
<p>而且会生成一个<code>阅读全文</code>的按钮。</p>
<p>这种方法被Next官方推荐，因为它在满足需求的同时也可以让Hexo中的插件识别。</p>
</blockquote>
<img src="/2020/02/28/next/7_read_more/read-more/comment.png" class="" title="文中添加more注释">

<blockquote>
<p>实际效果</p>
</blockquote>
<img src="/2020/02/28/next/7_read_more/read-more/xiaoguo1.png" class="" title="阅读全文">

<h2 id="自动形成摘要"><a href="#自动形成摘要" class="headerlink" title="自动形成摘要"></a>自动形成摘要</h2><blockquote>
<p>在<code>主题配置文件</code>中添加：</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">auto_excerpt:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">length:</span> <span class="number">150</span></span><br></pre></td></tr></table></figure>

<p>默认截取的长度为 150 字符，可以根据需要自行设定。</p>
]]></content>
      <categories>
        <category>Next</category>
      </categories>
      <tags>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>Next -6- 添加Valine评论系统</title>
    <url>/2020/02/28/next/6_add_valine_comments/add-valine-comments/</url>
    <content><![CDATA[<blockquote>
<p>Next V7.7.1 自带很多评论系统，其中Valine诞生于2017年8月7日，是一款基于Leancloud的快速、简洁且高效的无后端评论系统。Valine具有添加方便，轻量，运行、加载速度快，不需要用户登录等优点。</p>
<p>本文介绍Next中添加Valine评论系统的方法。</p>
</blockquote>
<a id="more"></a>

<h2 id="依赖leancloud"><a href="#依赖leancloud" class="headerlink" title="依赖leancloud"></a>依赖leancloud</h2><ul>
<li>申请leancloud账号，<a href="https://www.leancloud.cn/" target="_blank" rel="noopener">官网链接</a>。</li>
<li>登录leancloud，进入控制台点击创建应用。</li>
</ul>
<img src="/2020/02/28/next/6_add_valine_comments/add-valine-comments/chuangjianyingyong.png" class="" title="创建应用">

<ul>
<li>填写应用名称，选择开发版</li>
</ul>
<img src="/2020/02/28/next/6_add_valine_comments/add-valine-comments/chuangjian.png" class="" title="创建应用">

<ul>
<li>创建成功后点击应用右上角的<code>齿轮</code>进入应用设置</li>
</ul>
<img src="/2020/02/28/next/6_add_valine_comments/add-valine-comments/chilun.png" class="" title="创建设置">

<ul>
<li>设置选项卡中选择<code>应用 Keys</code>，右边AppID和AppKey就是我们需要的标识和密钥。</li>
</ul>
<img src="/2020/02/28/next/6_add_valine_comments/add-valine-comments/keys.png" class="" title="应用 Keys">

<h2 id="本地设置"><a href="#本地设置" class="headerlink" title="本地设置"></a>本地设置</h2><blockquote>
<p>在Next<code>主题配置文件</code>中修改valine字段内的值，将enable设置为true，将刚刚得到的AppID和AppKey填入相应字段中。</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Valine</span></span><br><span class="line"><span class="comment"># For more information: https://valine.js.org, https://github.com/xCss/Valine</span></span><br><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">appid:</span> <span class="string">XXXXXXXXXXX&lt;</span> <span class="string">your</span> <span class="string">AppID&gt;XXXXXXXXXXXX</span> <span class="comment"># Your leancloud application appid</span></span><br><span class="line">  <span class="attr">appkey:</span> <span class="string">XXXXXX&lt;your</span> <span class="string">AppKey&gt;XXXXXXX</span> <span class="comment"># Your leancloud application appkey</span></span><br><span class="line">  <span class="attr">notify:</span> <span class="literal">true</span> <span class="comment"># Mail notifier</span></span><br><span class="line">  <span class="attr">verify:</span> <span class="literal">true</span> <span class="comment"># Verification code</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">遗憾莫过于难忘你的背影，却找不到你来过的痕迹</span> <span class="string">...</span> <span class="comment"># Comment box placeholder</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">mm</span> <span class="comment"># Gravatar style</span></span><br><span class="line">  <span class="attr">guest_info:</span> <span class="string">nick,mail,link</span> <span class="comment"># Custom comment header</span></span><br><span class="line">  <span class="attr">pageSize:</span> <span class="number">10</span> <span class="comment"># Pagination size</span></span><br><span class="line">  <span class="attr">language:</span> <span class="comment"># Language, available values: en, zh-cn</span></span><br><span class="line">  <span class="attr">visitor:</span> <span class="literal">true</span> <span class="comment"># Article reading statistic</span></span><br><span class="line">  <span class="attr">comment_count:</span> <span class="literal">true</span> <span class="comment"># If false, comment count will only be displayed in post page, not in home page</span></span><br><span class="line">  <span class="attr">recordIP:</span> <span class="literal">false</span> <span class="comment"># Whether to record the commenter IP</span></span><br><span class="line">  <span class="attr">serverURLs:</span> <span class="comment"># When the custom domain name is enabled, fill it in here (it will be detected automatically by default, no need to fill in)</span></span><br><span class="line">  <span class="comment">#post_meta_order: 0</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>修改enable和AppID、AppKey之后：</p>
</blockquote>
<ul>
<li>notify：评论后的邮件提示，还需要在leancloud中设置邮件模板自动回复</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">你在&#123;&#123;appname&#125;&#125; 的评论收到了新的回复</span><br><span class="line"></span><br><span class="line">&lt;p&gt;Hi, &#123;&#123;username&#125;&#125;&lt;&#x2F;p&gt;</span><br><span class="line">&lt;p&gt;</span><br><span class="line">你在 &#123;&#123;appname&#125;&#125; 的评论收到了新的回复，请点击查看：</span><br><span class="line">&lt;&#x2F;p&gt;</span><br><span class="line">&lt;p&gt;&lt;a href&#x3D;&quot;你的网址首页链接&quot; style&#x3D;&quot;display: inline-block; padding: 10px 20px; border-radius: 4px; background-color: #3090e4; color: #fff; text-decoration: none;&quot;&gt;马上查看&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>verify：评论时需要验证码</li>
<li>placeholder：占位符，就是在没有评论时默认的提示文字</li>
<li>visitor：标题和首页显示浏览量(与不蒜子的会重复，可以选择一个保留)</li>
</ul>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><blockquote>
<p>Next V7.7.1 已经集成了相关程序包，不需要额外安装，只要填入AppID和AppKey就好，否则容易出现各种奇怪的问题（别问我怎么知道的）</p>
</blockquote>
<img src="/2020/02/28/next/6_add_valine_comments/add-valine-comments/valine.png" class="" title="评论测试">

<img src="/2020/02/28/next/6_add_valine_comments/add-valine-comments/post.png" class="" title="评论统计">

<h2 id="数据安全"><a href="#数据安全" class="headerlink" title="数据安全"></a>数据安全</h2><blockquote>
<p>可选操作：在【Leancloud】 -&gt; 【设置】 -&gt; 【安全中心】 -&gt; 【Web 安全域名】把你的域名加进去，可防止数据被篡改。</p>
</blockquote>
<h2 id="标题Valine字段翻译"><a href="#标题Valine字段翻译" class="headerlink" title="标题Valine字段翻译"></a>标题Valine字段翻译</h2><blockquote>
<p>这个字段生成过程和其他不一样，定义的变量在post下的comments下的valine，修改zh-Hans.yml</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">post:</span></span><br><span class="line">  <span class="attr">comments:</span></span><br><span class="line">    <span class="attr">valine:</span> <span class="string">评论次数</span></span><br></pre></td></tr></table></figure>

<img src="/2020/02/28/next/6_add_valine_comments/add-valine-comments/fanyi.png" class="" title="Valine翻译">

<h2 id="源码踪迹"><a href="#源码踪迹" class="headerlink" title="源码踪迹"></a>源码踪迹</h2><blockquote>
<p>相关的Valine评论数生成的源文件是<code>themes -&gt; next -&gt; scripts -&gt; filters -&gt; comment -&gt; valine.js</code></p>
</blockquote>
<img src="/2020/02/28/next/6_add_valine_comments/add-valine-comments/valinejs.png" class="" title="valine.js">

<blockquote>
<p>该函数在同文件夹下的<code>common.js</code>文件内</p>
</blockquote>
<img src="/2020/02/28/next/6_add_valine_comments/add-valine-comments/commonjs.png" class="" title="common.js">

<blockquote>
<p>因此在zh-Hans.yml中定义post.comments.valine 变量的翻译字段</p>
</blockquote>
]]></content>
      <categories>
        <category>Next</category>
      </categories>
      <tags>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>Next -5- 设定站点建立时间</title>
    <url>/2020/02/28/next/5_settings/next-settings/</url>
    <content><![CDATA[<blockquote>
<p>Hexo博客Next主题的站点建立时间主要体现在页脚的 <code>© 2020</code> ，如果不修改会设置为当前年份。本文介绍该年份设置方法。</p>
</blockquote>
<a id="more"></a>

<h2 id="设置方法"><a href="#设置方法" class="headerlink" title="设置方法"></a>设置方法</h2><blockquote>
<p>在<code>主题配置文件</code>中修改footer字段的since：</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">footer:</span></span><br><span class="line">  <span class="comment"># Specify the date when the site was setup. If not defined, current year will be used.</span></span><br><span class="line">  <span class="attr">since:</span> <span class="number">2019</span></span><br></pre></td></tr></table></figure>

<img src="/2020/02/28/next/5_settings/next-settings/since.png" class="" title="效果展示">]]></content>
      <categories>
        <category>Next</category>
      </categories>
      <tags>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>Next -4- 增加站点访客、文章阅读量、字符统计、阅读时间统计与对应词条翻译</title>
    <url>/2020/02/28/next/4_add_viewers/viewers/</url>
    <content><![CDATA[<blockquote>
<p>本文介绍增加Next主题文章阅读数量和访客数量的方法。</p>
</blockquote>
<a id="more"></a>

<h2 id="不蒜子站点访客、文章阅读量"><a href="#不蒜子站点访客、文章阅读量" class="headerlink" title="不蒜子站点访客、文章阅读量"></a>不蒜子站点访客、文章阅读量</h2><blockquote>
<p>修改<code>主题配置文件</code>不蒜子<code>enable</code>的开关为<code>true</code>：</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Show Views / Visitors of the website / page with busuanzi.</span></span><br><span class="line"><span class="comment"># Get more information on http://ibruce.info/2015/04/04/busuanzi</span></span><br><span class="line"><span class="attr">busuanzi_count:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_visitors:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_visitors_icon:</span> <span class="string">user</span></span><br><span class="line">  <span class="attr">total_views:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_views_icon:</span> <span class="string">eye</span></span><br><span class="line">  <span class="attr">post_views:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">post_views_icon:</span> <span class="string">eye</span></span><br></pre></td></tr></table></figure>

<img src="/2020/02/28/next/4_add_viewers/viewers/post.png" class="" title="文章阅读数">

<img src="/2020/02/28/next/4_add_viewers/viewers/footer.png" class="" title="访客与阅读总量">

<h3 id="统计失效时的调整方法"><a href="#统计失效时的调整方法" class="headerlink" title="统计失效时的调整方法"></a>统计失效时的调整方法</h3><blockquote>
<p>有时数据统计会失效，此时删除hexo根目录的<code>db.json</code>，执行命令：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure>

<h2 id="字符统计、阅读时间统计"><a href="#字符统计、阅读时间统计" class="headerlink" title="字符统计、阅读时间统计"></a>字符统计、阅读时间统计</h2><blockquote>
<p>启用 hexo-symbols-count-time ，官方<a href="https://github.com/theme-next/hexo-symbols-count-time" target="_blank" rel="noopener">Github链接</a>，执行命令：</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-symbols-count-time</span><br></pre></td></tr></table></figure>

<blockquote>
<p>在<code>站点配置文件</code>加入：</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">symbols:</span> <span class="literal">true</span>                <span class="comment"># 文章字数统计</span></span><br><span class="line">  <span class="attr">time:</span> <span class="literal">true</span>                   <span class="comment"># 文章阅读时长</span></span><br><span class="line">  <span class="attr">total_symbols:</span> <span class="literal">true</span>          <span class="comment"># 站点总字数统计</span></span><br><span class="line">  <span class="attr">total_time:</span> <span class="literal">true</span>             <span class="comment"># 站点总阅读时长</span></span><br><span class="line">  <span class="attr">exclude_codeblock:</span> <span class="literal">false</span>     <span class="comment"># 排除代码字数统计</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>可以调整<code>主题配置文件</code>：</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Post wordcount display settings</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/hexo-symbols-count-time</span></span><br><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">separated_meta:</span> <span class="literal">true</span>  <span class="comment"># 是否换行显示 字数统计 及 阅读时长</span></span><br><span class="line">  <span class="attr">item_text_post:</span> <span class="literal">true</span>  <span class="comment"># 文章 字数统计 阅读时长 使用图标 还是 文本表示</span></span><br><span class="line">  <span class="attr">item_text_total:</span> <span class="literal">true</span> <span class="comment"># 博客底部统计 字数统计 阅读时长 使用图标 还是 文本表示</span></span><br><span class="line">  <span class="attr">awl:</span> <span class="number">4</span></span><br><span class="line">  <span class="attr">wpm:</span> <span class="number">275</span></span><br></pre></td></tr></table></figure>

<img src="/2020/02/28/next/4_add_viewers/viewers/words.png" class="" title="字符统计、阅读时间">

<h2 id="对应词条翻译"><a href="#对应词条翻译" class="headerlink" title="对应词条翻译"></a>对应词条翻译</h2><blockquote>
<p>对上述词条翻译找了好久，终于摸索出来了，在此贡献给大家，在zh-Hans.yml中加入：</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">post:</span></span><br><span class="line">  <span class="attr">views:</span> <span class="string">阅读次数</span></span><br><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">time:</span> <span class="string">阅读时长</span></span><br><span class="line">  <span class="attr">count:</span> <span class="string">本文字数</span></span><br><span class="line">  <span class="attr">count_total:</span> <span class="string">站点总字数</span></span><br><span class="line">  <span class="attr">time_total:</span> <span class="string">站点阅读时长</span></span><br></pre></td></tr></table></figure>

<img src="/2020/02/28/next/4_add_viewers/viewers/header-zh.png" class="" title="post翻译">

<img src="/2020/02/28/next/4_add_viewers/viewers/footer-zh.png" class="" title="footer翻译">]]></content>
      <categories>
        <category>Next</category>
      </categories>
      <tags>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>Next -3- 将页面英文标识翻译为中文</title>
    <url>/2020/02/28/next/3_translate/translate/</url>
    <content><![CDATA[<blockquote>
<p>Next默认界面中菜单、文章信息、站点信息名称为英文，本文介绍将这些英文翻译为中文的方法。</p>
</blockquote>
<a id="more"></a>

<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><blockquote>
<p> 设置<code>站点配置信息</code>Site中的<code>language</code>值为 <code>zh-Hans</code>，<a href="https://www.zywvvd.com/zywvvd.github.io/2020/02/24/hexo/hexo_config/Hexo站点配置/">Hexo - 站点信息配置</a>。</p>
</blockquote>
<h2 id="配置翻译文件"><a href="#配置翻译文件" class="headerlink" title="配置翻译文件"></a>配置翻译文件</h2><blockquote>
<p>在/hexo_root/themes/next/languages/文件夹中创建<code>zh-Hans.yml</code>文件</p>
</blockquote>
<ul>
<li>翻译菜单</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">首页</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">归档</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">分类</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">标签</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">关于</span></span><br><span class="line">  <span class="attr">search:</span> <span class="string">搜索</span></span><br><span class="line">  <span class="attr">commonweal:</span> <span class="string">公益404</span></span><br><span class="line">  <span class="attr">something:</span> <span class="string">有料</span></span><br></pre></td></tr></table></figure>

<ul>
<li>翻译文章标题</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">post:</span></span><br><span class="line">  <span class="attr">posted:</span> <span class="string">发表于</span></span><br><span class="line">  <span class="attr">edited:</span> <span class="string">编辑于</span></span><br><span class="line">  <span class="attr">in:</span> <span class="string">类别</span></span><br><span class="line">  <span class="attr">views:</span> <span class="string">阅读次数</span></span><br></pre></td></tr></table></figure>

<ul>
<li>翻译侧边栏</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">sidebar:</span></span><br><span class="line">  <span class="attr">toc:</span> <span class="string">文章目录</span></span><br><span class="line">  <span class="attr">overview:</span> <span class="string">小站概览</span></span><br></pre></td></tr></table></figure>

<ul>
<li>翻译站点状态</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">state:</span></span><br><span class="line">  <span class="attr">posts:</span> <span class="string">日志</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">分类</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">标签</span></span><br></pre></td></tr></table></figure>

<ul>
<li>翻译文章阅读次数</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">post:</span></span><br><span class="line">  <span class="attr">views:</span> <span class="string">阅读次数</span></span><br></pre></td></tr></table></figure>

<ul>
<li>翻译阅读时长、文本字数</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">time:</span> <span class="string">阅读时长</span></span><br><span class="line">  <span class="attr">count:</span> <span class="string">本文字数</span></span><br><span class="line">  <span class="attr">count_total:</span> <span class="string">站点总字数</span></span><br><span class="line">  <span class="attr">time_total:</span> <span class="string">站点阅读时长</span></span><br></pre></td></tr></table></figure>

<ul>
<li>翻译footer词条</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">footer:</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">主题方案</span></span><br><span class="line">  <span class="attr">powered:</span> <span class="string">技术支持</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>此时相应的内容会被翻译成设定的文字</p>
</blockquote>
<img src="/2020/02/28/next/3_translate/translate/xiaoguo.png" class="" title="翻译后的页面">

<img src="/2020/02/28/next/3_translate/translate/header-zh.png" class="" title="翻译后的页面">

<img src="/2020/02/28/next/3_translate/translate/xiaoguo2.png" class="" title="翻译后的页面">]]></content>
      <categories>
        <category>Next</category>
      </categories>
      <tags>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>Next -2- 增加 tags, about, categories 页面</title>
    <url>/2020/02/28/next/2_add_pages/add-tags-about-categories-page/</url>
    <content><![CDATA[<blockquote>
<p>Next主题支持文章按照类别划分，而且可以为文章添加标签，并且有专门的页面用来管理和检索。而新安装的Next主题不带about, tags, categories页面，默认只有Archives。本文介绍这些页面的添加方法。</p>
</blockquote>
<a id="more"></a>

<h2 id="开启菜单按钮"><a href="#开启菜单按钮" class="headerlink" title="开启菜单按钮"></a>开启菜单按钮</h2><blockquote>
<p>在<code>主题配置文件</code>中开启相应按钮（去掉行前的<code>#</code>）</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Menu Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Usage: `Key: /link/ || icon`</span></span><br><span class="line"><span class="comment"># Key is the name of menu item. If the translation for this item is available, the translated text will be loaded, otherwise the Key name will be used. Key is case-senstive.</span></span><br><span class="line"><span class="comment"># Value before `||` delimiter is the target link, value after `||` delimiter is the name of Font Awesome icon.</span></span><br><span class="line"><span class="comment"># When running the site in a subdirectory (e.g. yoursite.com/blog), remove the leading slash from link value (/archives -&gt; archives).</span></span><br><span class="line"><span class="comment"># External url should start with http:// or https://</span></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">home</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">user</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">tags</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">th</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">archive</span></span><br><span class="line">  <span class="comment">#schedule: /schedule/ || calendar</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || sitemap</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || heartbeat</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>此时页面菜单发生了一些变化，但是按钮链接没有对应页面</p>
</blockquote>
<img src="/2020/02/28/next/2_add_pages/add-tags-about-categories-page/openbuttons.png" class="" title="开启按钮">

<h2 id="添加页面"><a href="#添加页面" class="headerlink" title="添加页面"></a>添加页面</h2><h3 id="添加-tags"><a href="#添加-tags" class="headerlink" title="添加 tags"></a>添加 tags</h3><blockquote>
<p>在hexo目录的终端输入命令新建文章，layout设置为page，文章名称为tags</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure>

<blockquote>
<p>此时在 /hexo_root/source/tags/文件夹中出现了<code>index.md</code>文件，打开并修改Front-matter内容</p>
</blockquote>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">title: 文章标签</span><br><span class="line">date: 2020-02-28 13:01:59</span><br><span class="line">type: "tags"</span><br></pre></td></tr></table></figure>

<blockquote>
<p>此时tags页面已经可以打开</p>
</blockquote>
<img src="/2020/02/28/next/2_add_pages/add-tags-about-categories-page/tags.png" class="" title="tags页面">

<h3 id="添加-categories"><a href="#添加-categories" class="headerlink" title="添加 categories"></a>添加 categories</h3><blockquote>
<p>在hexo目录的终端输入命令新建文章，layout设置为page，文章名称为categories</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure>

<blockquote>
<p>此时在 /hexo_root/source/categories/文件夹中出现了<code>index.md</code>文件，打开并修改Front-matter内容</p>
</blockquote>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">title: 文章类别</span><br><span class="line">date: 2020-02-28 13:03:19</span><br><span class="line">type: "categories"</span><br></pre></td></tr></table></figure>

<blockquote>
<p>此时categories页面已经可以打开</p>
</blockquote>
<img src="/2020/02/28/next/2_add_pages/add-tags-about-categories-page/categories.png" class="" title="categories页面">

<h3 id="添加about"><a href="#添加about" class="headerlink" title="添加about"></a>添加about</h3><blockquote>
<p>在hexo目录的终端输入命令新建文章，layout设置为page，文章名称为about</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo new page about</span><br></pre></td></tr></table></figure>

<blockquote>
<p>此时在 /hexo_root/source/about/文件夹中出现了<code>index.md</code>文件，打开并修改Front-matter内容</p>
</blockquote>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">title: 小站自述</span><br><span class="line">date: 2020-02-28 13:07:35</span><br><span class="line">type: "about"</span><br></pre></td></tr></table></figure>

<blockquote>
<p>同时可以在文件中加入站点描述内容</p>
<p>此时about页面已经可以打开</p>
</blockquote>
<img src="/2020/02/28/next/2_add_pages/add-tags-about-categories-page/about.png" class="" title="about页面">

<h2 id="设置文章类别和标签"><a href="#设置文章类别和标签" class="headerlink" title="设置文章类别和标签"></a>设置文章类别和标签</h2><blockquote>
<p>修改/hexo_root/source/_posts/hello-world.md，在Front-matter中添加标签和类别</p>
</blockquote>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">title: Hello World</span><br><span class="line">tags: [tag1,tag2]</span><br><span class="line">categories: [cate,sub<span class="emphasis">_cate,sub_</span>sub_cate]</span><br></pre></td></tr></table></figure>

<p>或</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">title: Hello World</span><br><span class="line">tags: </span><br><span class="line"><span class="bullet">- </span>tag1</span><br><span class="line"><span class="bullet">- </span>tag2</span><br><span class="line">categories: </span><br><span class="line"><span class="bullet">- </span>cate</span><br><span class="line"><span class="bullet">- </span>sub_cate</span><br><span class="line"><span class="bullet">- </span>sub<span class="emphasis">_sub_</span>cate</span><br></pre></td></tr></table></figure>

<blockquote>
<p>主页面侧边栏状态会发生变化</p>
</blockquote>
<img src="/2020/02/28/next/2_add_pages/add-tags-about-categories-page/state.png" class="" title="侧边栏显示类别标签">

<blockquote>
<p>标签页面（标签内容数量多字体会相应变大）</p>
<p>一篇文章可以设置多个平行标签</p>
</blockquote>
<img src="/2020/02/28/next/2_add_pages/add-tags-about-categories-page/tags2.png" class="" title="标签页面显示标签">

<img src="/2020/02/28/next/2_add_pages/add-tags-about-categories-page/tags3.png" class="" title="文章标签">

<blockquote>
<p>分类页面</p>
<p>类别标签不并列，安装顺序设置级别</p>
</blockquote>
<img src="/2020/02/28/next/2_add_pages/add-tags-about-categories-page/categories2.png" class="" title="分类页面显示分类">

<img src="/2020/02/28/next/2_add_pages/add-tags-about-categories-page/categories3.png" class="" title="文章分类">

<h2 id="关闭评论"><a href="#关闭评论" class="headerlink" title="关闭评论"></a>关闭评论</h2><blockquote>
<p>后续站点可能会开启评论功能，如果不希望上述页面开启评论可以在页面<code>index.md</code>的Front-matter中添加</p>
</blockquote>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">comments: false</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Next</category>
      </categories>
      <tags>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo -4- 向文章添加图片的方法</title>
    <url>/2020/02/27/hexo/4_hexo_add_image/hexo-add-image/</url>
    <content><![CDATA[<blockquote>
<p>本文介绍Hexo编辑文章时添加图像的各种方法。</p>
</blockquote>
<a id="more"></a>

<h2 id="绝对路径本地引用"><a href="#绝对路径本地引用" class="headerlink" title="绝对路径本地引用"></a>绝对路径本地引用</h2><blockquote>
<p>当Hexo项目中只用到少量图片时，可以将图片统一放在source/images文件夹中，通过markdown语法访问它们。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">![](&#x2F;images&#x2F;image.jpg)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>此方法加载的图片既可以在首页内容中访问到，也可以在文章正文中访问到。</p>
</blockquote>
<h2 id="相对路径本地引用"><a href="#相对路径本地引用" class="headerlink" title="相对路径本地引用"></a>相对路径本地引用</h2><blockquote>
<p>图片除了可以放在统一的images文件夹中，还可以放在文章自己的目录中。文章的目录可以通过设置<code>站点配置文件</code>的 <code>post_asset_folder: true</code>来自动生成。</p>
</blockquote>
<img src="/2020/02/27/hexo/4_hexo_add_image/hexo-add-image/config.png" class="" title="配置文件修改">

<blockquote>
<p>将_config.yml文件中的配置项post_asset_folder设为true后，执行命令$ hexo new post_name，在source/_posts中会生成文章post_name.md和同名文件夹post_name。将图片资源放在post_name中，文章就可以使用相对路径引用图片资源了。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">![](image.jpg)</span><br></pre></td></tr></table></figure>



<h2 id="标签插件语法引用"><a href="#标签插件语法引用" class="headerlink" title="标签插件语法引用"></a>标签插件语法引用</h2><p>这种相对路径的图片显示方法在博文详情页面显示没有问题，但是在首页预览页面图片将显示不出来。如果希望<strong>图片在文章和首页中同时显示</strong>，可以使用标签插件语法。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 本地图片资源，不限制图片尺寸</span><br><span class="line">&#123;% asset_img image.jpg This is an image %&#125;</span><br><span class="line"># 网络图片资源，限制图片显示尺寸</span><br><span class="line">&#123;% img http:&#x2F;&#x2F;www.viemu.com&#x2F;vi-vim-cheat-sheet.gif 200 400 vi-vim-cheat-sheet %&#125;</span><br></pre></td></tr></table></figure>



<h2 id="HTML语法引用"><a href="#HTML语法引用" class="headerlink" title="HTML语法引用"></a>HTML语法引用</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;img src&#x3D;&quot;SpellCheck.png&quot; width&#x3D;&quot;50%&quot; height&#x3D;&quot;50%&quot; title&#x3D;&quot;拼写检查工具Grammarly.&quot; alt&#x3D;&quot;拼写检查工具Grammarly.&quot;&#x2F;&gt;</span><br></pre></td></tr></table></figure>

<p>直接将<code>![](image.jpg)</code>替换上面的语法即可。</p>
<h2 id="启用fancybox：点击查看图片大图"><a href="#启用fancybox：点击查看图片大图" class="headerlink" title="启用fancybox：点击查看图片大图"></a>启用fancybox：点击查看图片大图</h2><p>我这里使用的是Hexo的NexT主题，NexT主题中提供了fancybox的方便接口。</p>
<p>Usage：<a href="https://github.com/theme-next/theme-next-fancybox3" target="_blank" rel="noopener">https://github.com/theme-next/theme-next-fancybox3</a><br>markdown用法：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% img http:&#x2F;&#x2F;www.viemu.com&#x2F;vi-vim-cheat-sheet.gif 600 600 &quot;点击查看大图:vi&#x2F;vim-cheat-sheet&quot; %&#125;</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>机器学习-基础知识 - PR、ROC曲线与AUC</title>
    <url>/2020/02/27/machine_learning/basic_knowledge/PR_and_ROC/PR-and-ROC/</url>
    <content><![CDATA[<blockquote>
<p>PR曲线与ROC曲线都是机器学习中性能评估的重要指标，本文主要讲这两个曲线。</p>
</blockquote>
<a id="more"></a>

<h2 id="预备知识"><a href="#预备知识" class="headerlink" title="预备知识"></a>预备知识</h2><ul>
<li>熟悉基础定义<a href="https://www.zywvvd.com/2020/02/26/machine_learning/basic_knowledge/TP_FN_FP_TN/Evaluation-index/">TP, FN, FP, TN</a>。</li>
<li>理解主要评估指标概念<a href="https://www.zywvvd.com/2020/02/27/machine_learning/basic_knowledge/performance_evaluation/Performance-evaluation/">Precision, Recall,  FNR, FPR, TPR, TNR</a>等。</li>
</ul>
<h2 id="示例数据"><a href="#示例数据" class="headerlink" title="示例数据"></a>示例数据</h2><table>
    <tr>
        <th ><center>样本编号</center></th>
         <th  ><center>1</center></th>
        <th  ><center>2</center></th>
        <th  ><center>3</center></th>
        <th  ><center>4</center></th>
        <th  ><center>5</center></th>
        <th  ><center>6</center></th>
        <th  ><center>7</center></th>
        <th  ><center>8</center></th>
        <th  ><center>9</center></th>
        <th  ><center>10</center></th>
    </tr>  
    <tr>
        <td><center>真实类别</center></td>
        <td><center>P</center></td>
         <td><center>P</center></td>
         <td><center>P</center></td>
         <td><center>P</center></td>
         <td><center>P</center></td>
         <td><center>P</center></td>
         <td><center>N</center></td>
         <td><center>N</center></td>
         <td><center>N</center></td>
         <td><center>N</center></td>
    </tr>
</table>

<blockquote>
<p>预测-1</p>
</blockquote>
 <table>
    <tr>
        <th ><center>样本编号</center></th>
         <th  ><center>1</center></th>
        <th  ><center>2</center></th>
        <th  ><center>3</center></th>
        <th  ><center>4</center></th>
        <th  ><center>5</center></th>
        <th  ><center>6</center></th>
        <th  ><center>7</center></th>
        <th  ><center>8</center></th>
        <th  ><center>9</center></th>
        <th  ><center>10</center></th>
    </tr>  
    <tr>
        <td><center>预测为正样本<br>的概率</center></td>
        <td><center><font >0.9</font></center></td>
          <td><center><font >0.8</font></center></td>
          <td><center><font>0.7</font></center></td>
         <td><center><font >0.6</font></center></td>
         <td><center><font >0.6</font></center></td>
          <td><center><font>0.4</font></center></td>
         <td><center><font >0.5</font></center></td>
          <td><center><font >0.4</font></center></td>
         <td><center><font>0.3</font></center></td>
         <td><center><font >0.2</font></center></td>
    </tr>
</table>

<blockquote>
<p>预测-2</p>
</blockquote>
 <table>
    <tr>
        <th ><center>样本编号</center></th>
         <th  ><center>1</center></th>
        <th  ><center>2</center></th>
        <th  ><center>3</center></th>
        <th  ><center>4</center></th>
        <th  ><center>5</center></th>
        <th  ><center>6</center></th>
        <th  ><center>7</center></th>
        <th  ><center>8</center></th>
        <th  ><center>9</center></th>
        <th  ><center>10</center></th>
    </tr>  
    <tr>
        <td><center>预测为正样本<br>的概率</center></td>
        <td><center><font >0.8</font></center></td>
          <td><center><font >0.7</font></center></td>
          <td><center><font>0.7</font></center></td>
         <td><center><font >0.8</font></center></td>
         <td><center><font >0.7</font></center></td>
          <td><center><font>0.4</font></center></td>
         <td><center><font >0.6</font></center></td>
          <td><center><font >0.3</font></center></td>
         <td><center><font>0.3</font></center></td>
         <td><center><font >0.1</font></center></td>
    </tr>
</table>

<h2 id="PR曲线"><a href="#PR曲线" class="headerlink" title="PR曲线"></a>PR曲线</h2><blockquote>
<p>含义：PR曲线中P为Precision（查准率），R为Recall（查全率）。以Recall为横坐标、Precision为纵坐标绘制的曲线即为PR曲线。有同学可能会问Precision、Recall不就是一个值么，怎么画出的曲线？</p>
</blockquote>
<h3 id="曲线的由来"><a href="#曲线的由来" class="headerlink" title="曲线的由来"></a>曲线的由来</h3><p>事实上机器学习训练好的模型在对测试样本进行预测的时候，输出的原始结果是模型预测该样本为正样本的概率，而不是我们平时经常听到的Positive或Negative，而概率如何转化为机器学习的输出靠的是一个阈值，当概率大于阈值则判断其为正样本，反之为负样本。</p>
<p>而这个非常关键的阈值本身不是固定的，在阈值变化过程中模型对样本的预测类别也会相应发生变化，那么阈值不断变化导致模型Precision和Recall变化，将这些点连成线也就是PR曲线了。</p>
<h3 id="绘制示例数据的PR曲线"><a href="#绘制示例数据的PR曲线" class="headerlink" title="绘制示例数据的PR曲线"></a>绘制示例数据的PR曲线</h3><blockquote>
<p>为直观展示PR曲线绘制过程，根据示例数据绘制PR曲线（简便起见阈值选定为0.05-0.95，跨度0.1）。</p>
</blockquote>
 <table>
    <tr>
         <th   ><center>阈值</center></th>
        <th colspan="4" ><center>预测-1</center></th>
        <th  colspan="4"><center>预测-2</center></th>
    </tr>  
      <tr>
        <td rowspan="3"><center><font >0.05</font></center></td>
              <td><center><font >TP</font></center></td>
            <td><center><font >FP</font></center></td>
              <td><center><font >TN</font></center></td>
            <td><center><font >FN</font></center></td>
          <td><center><font >TP</font></center></td>
            <td><center><font >FP</font></center></td>
              <td><center><font >TN</font></center></td>
            <td><center><font >FN</font></center></td>
    </tr>  
     <tr>
        <td><center><font >6</font></center></td>
        <td><center><font >4</font></center></td>
          <td><center><font >0</font></center></td>
        <td><center><font >0</font></center></td>
          <td><center><font >6</font></center></td>
        <td><center><font >4</font></center></td>
          <td><center><font >0</font></center></td>
        <td><center><font >0</font></center></td>
    </tr>
  <tr>
        <td><center><font >Precision</font></center></td>
        <td><center><font >0.6</font></center></td>
          <td><center><font >Recall</font></center></td>
        <td><center><font >1</font></center></td>
          <td><center><font >Precision</font></center></td>
        <td><center><font >0.6</font></center></td>
          <td><center><font >Recall</font></center></td>
        <td><center><font >1</font></center></td>
    </tr>
     <td rowspan="3"><center><font >0.15</font></center></td>
              <td><center><font >TP</font></center></td>
            <td><center><font >FP</font></center></td>
              <td><center><font >TN</font></center></td>
            <td><center><font >FN</font></center></td>
          <td><center><font >TP</font></center></td>
            <td><center><font >FP</font></center></td>
              <td><center><font >TN</font></center></td>
            <td><center><font >FN</font></center></td>
    </tr>  
     <tr>
        <td><center><font >6</font></center></td>
        <td><center><font >4</font></center></td>
          <td><center><font >0</font></center></td>
        <td><center><font >0</font></center></td>
          <td><center><font >6</font></center></td>
        <td><center><font >3</font></center></td>
          <td><center><font >1</font></center></td>
        <td><center><font >0</font></center></td>
    </tr>
  <tr>
        <td><center><font >Precision</font></center></td>
        <td><center><font >0.6</font></center></td>
          <td><center><font >Recall</font></center></td>
        <td><center><font >1</font></center></td>
          <td><center><font >Precision</font></center></td>
        <td><center><font >0.67</font></center></td>
          <td><center><font >Recall</font></center></td>
        <td><center><font >1</font></center></td>
    </tr>
 <td rowspan="3"><center><font >0.25</font></center></td>
              <td><center><font >TP</font></center></td>
            <td><center><font >FP</font></center></td>
              <td><center><font >TN</font></center></td>
            <td><center><font >FN</font></center></td>
          <td><center><font >TP</font></center></td>
            <td><center><font >FP</font></center></td>
              <td><center><font >TN</font></center></td>
            <td><center><font >FN</font></center></td>
    </tr>  
   <tr>
        <td><center><font >6</font></center></td>
        <td><center><font >3</font></center></td>
          <td><center><font >1</font></center></td>
        <td><center><font >0</font></center></td>
          <td><center><font >6</font></center></td>
        <td><center><font >3</font></center></td>
          <td><center><font >1</font></center></td>
        <td><center><font >0</font></center></td>
    </tr>
  <tr>
        <td><center><font >Precision</font></center></td>
        <td><center><font >0.67</font></center></td>
          <td><center><font >Recall</font></center></td>
        <td><center><font >1</font></center></td>
          <td><center><font >Precision</font></center></td>
        <td><center><font >0.67</font></center></td>
          <td><center><font >Recall</font></center></td>
        <td><center><font >1</font></center></td>
    </tr>
 <td rowspan="3"><center><font >0.35</font></center></td>
              <td><center><font >TP</font></center></td>
            <td><center><font >FP</font></center></td>
              <td><center><font >TN</font></center></td>
            <td><center><font >FN</font></center></td>
          <td><center><font >TP</font></center></td>
            <td><center><font >FP</font></center></td>
              <td><center><font >TN</font></center></td>
            <td><center><font >FN</font></center></td>
    </tr>  
     <tr>
        <td><center><font >6</font></center></td>
        <td><center><font >2</font></center></td>
          <td><center><font >2</font></center></td>
        <td><center><font >0</font></center></td>
          <td><center><font >6</font></center></td>
        <td><center><font >1</font></center></td>
          <td><center><font >3</font></center></td>
        <td><center><font >0</font></center></td>
    </tr>
  <tr>
        <td><center><font >Precision</font></center></td>
        <td><center><font >0.75</font></center></td>
          <td><center><font >Recall</font></center></td>
        <td><center><font >1</font></center></td>
          <td><center><font >Precision</font></center></td>
        <td><center><font >0.86</font></center></td>
          <td><center><font >Recall</font></center></td>
        <td><center><font >1</font></center></td>
    </tr>
 <td rowspan="3"><center><font >0.45</font></center></td>
              <td><center><font >TP</font></center></td>
            <td><center><font >FP</font></center></td>
              <td><center><font >TN</font></center></td>
            <td><center><font >FN</font></center></td>
          <td><center><font >TP</font></center></td>
            <td><center><font >FP</font></center></td>
              <td><center><font >TN</font></center></td>
            <td><center><font >FN</font></center></td>
    </tr>  
     <tr>
        <td><center><font >5</font></center></td>
        <td><center><font >1</font></center></td>
          <td><center><font >3</font></center></td>
        <td><center><font >1</font></center></td>
          <td><center><font >5</font></center></td>
        <td><center><font >1</font></center></td>
          <td><center><font >3</font></center></td>
        <td><center><font >1</font></center></td>
    </tr>
  <tr>
        <td><center><font >Precision</font></center></td>
        <td><center><font >0.83</font></center></td>
          <td><center><font >Recall</font></center></td>
        <td><center><font >0.83</font></center></td>
          <td><center><font >Precision</font></center></td>
        <td><center><font >0.83</font></center></td>
          <td><center><font >Recall</font></center></td>
        <td><center><font >0.83</font></center></td>
    </tr>
 <td rowspan="3"><center><font >0.55</font></center></td>
              <td><center><font >TP</font></center></td>
            <td><center><font >FP</font></center></td>
              <td><center><font >TN</font></center></td>
            <td><center><font >FN</font></center></td>
          <td><center><font >TP</font></center></td>
            <td><center><font >FP</font></center></td>
              <td><center><font >TN</font></center></td>
            <td><center><font >FN</font></center></td>
    </tr>  
     <tr>
        <td><center><font >5</font></center></td>
        <td><center><font >0</font></center></td>
          <td><center><font >4</font></center></td>
        <td><center><font >1</font></center></td>
          <td><center><font >5</font></center></td>
        <td><center><font >1</font></center></td>
          <td><center><font >3</font></center></td>
        <td><center><font >1</font></center></td>
    </tr>
  <tr>
        <td><center><font >Precision</font></center></td>
        <td><center><font >1</font></center></td>
          <td><center><font >Recall</font></center></td>
        <td><center><font >0.83</font></center></td>
          <td><center><font >Precision</font></center></td>
        <td><center><font >0.83</font></center></td>
          <td><center><font >Recall</font></center></td>
        <td><center><font >0.83</font></center></td>
    </tr>
 <td rowspan="3"><center><font >0.65</font></center></td>
              <td><center><font >TP</font></center></td>
            <td><center><font >FP</font></center></td>
              <td><center><font >TN</font></center></td>
            <td><center><font >FN</font></center></td>
          <td><center><font >TP</font></center></td>
            <td><center><font >FP</font></center></td>
              <td><center><font >TN</font></center></td>
            <td><center><font >FN</font></center></td>
    </tr>  
     <tr>
        <td><center><font >3</font></center></td>
        <td><center><font >0</font></center></td>
          <td><center><font >4</font></center></td>
        <td><center><font >3</font></center></td>
          <td><center><font >5</font></center></td>
        <td><center><font >0</font></center></td>
          <td><center><font >4</font></center></td>
        <td><center><font >1</font></center></td>
    </tr>
  <tr>
        <td><center><font >Precision</font></center></td>
        <td><center><font >1</font></center></td>
          <td><center><font >Recall</font></center></td>
        <td><center><font >0.5</font></center></td>
          <td><center><font >Precision</font></center></td>
        <td><center><font >1</font></center></td>
          <td><center><font >Recall</font></center></td>
        <td><center><font >0.83</font></center></td>
    </tr>
 <td rowspan="3"><center><font >0.75</font></center></td>
              <td><center><font >TP</font></center></td>
            <td><center><font >FP</font></center></td>
              <td><center><font >TN</font></center></td>
            <td><center><font >FN</font></center></td>
          <td><center><font >TP</font></center></td>
            <td><center><font >FP</font></center></td>
              <td><center><font >TN</font></center></td>
            <td><center><font >FN</font></center></td>
    </tr>  
     <tr>
        <td><center><font >2</font></center></td>
        <td><center><font >0</font></center></td>
          <td><center><font >4</font></center></td>
        <td><center><font >4</font></center></td>
          <td><center><font >2</font></center></td>
        <td><center><font >0</font></center></td>
          <td><center><font >4</font></center></td>
        <td><center><font >4</font></center></td>
    </tr>
  <tr>
        <td><center><font >Precision</font></center></td>
        <td><center><font >1</font></center></td>
          <td><center><font >Recall</font></center></td>
        <td><center><font >0.33</font></center></td>
          <td><center><font >Precision</font></center></td>
        <td><center><font >1</font></center></td>
          <td><center><font >Recall</font></center></td>
        <td><center><font >0.33</font></center></td>
    </tr>
 <td rowspan="3"><center><font >0.85</font></center></td>
              <td><center><font >TP</font></center></td>
            <td><center><font >FP</font></center></td>
              <td><center><font >TN</font></center></td>
            <td><center><font >FN</font></center></td>
          <td><center><font >TP</font></center></td>
            <td><center><font >FP</font></center></td>
              <td><center><font >TN</font></center></td>
            <td><center><font >FN</font></center></td>
    </tr>  
     <tr>
        <td><center><font >1</font></center></td>
        <td><center><font >0</font></center></td>
          <td><center><font >4</font></center></td>
        <td><center><font >5</font></center></td>
          <td><center><font >0</font></center></td>
        <td><center><font >0</font></center></td>
          <td><center><font >4</font></center></td>
        <td><center><font >6</font></center></td>
    </tr>
  <tr>
        <td><center><font >Precision</font></center></td>
        <td><center><font >1</font></center></td>
          <td><center><font >Recall</font></center></td>
        <td><center><font >0.17</font></center></td>
          <td><center><font >Precision</font></center></td>
        <td><center><font >-</font></center></td>
          <td><center><font >Recall</font></center></td>
        <td><center><font >0</font></center></td>
    </tr>
 <td rowspan="3"><center><font >0.95</font></center></td>
              <td><center><font >TP</font></center></td>
            <td><center><font >FP</font></center></td>
              <td><center><font >TN</font></center></td>
            <td><center><font >FN</font></center></td>
          <td><center><font >TP</font></center></td>
            <td><center><font >FP</font></center></td>
              <td><center><font >TN</font></center></td>
            <td><center><font >FN</font></center></td>
    </tr>  
     <tr>
        <td><center><font >0</font></center></td>
        <td><center><font >0</font></center></td>
          <td><center><font >4</font></center></td>
        <td><center><font >6</font></center></td>
          <td><center><font >0</font></center></td>
        <td><center><font >0</font></center></td>
          <td><center><font >4</font></center></td>
        <td><center><font >6</font></center></td>
    </tr>
  <tr>
        <td><center><font >Precision</font></center></td>
        <td><center><font >-</font></center></td>
          <td><center><font >Recall</font></center></td>
        <td><center><font >0</font></center></td>
          <td><center><font >Precision</font></center></td>
        <td><center><font >-</font></center></td>
          <td><center><font >Recall</font></center></td>
        <td><center><font >0</font></center></td>
    </tr>
</table>

<blockquote>
<p>结果坐标</p>
</blockquote>
<table>
      <tr>
        <th colspan = "2"><center><font >编号</font></center></td>
        <th><center><font >1</font></center></td>
          <th><center><font >2</font></center></td>
        <th><center><font >3</font></center></td>
          <th><center><font >4</font></center></td>
        <th><center><font >5</font></center></td>
          <th><center><font >6</font></center></td>
        <th><center><font >7</font></center></td>
<th><center><font >8</font></center></td>
          <th><center><font >9</font></center></td>
        <th><center><font >10</font></center></td>
    </tr>
   <tr>
        <td rowspan="2"><center><font >预测-1</font></center></td>
       <td><center><font >Recall</font></center></td>
          <td><center><font >1</font></center></td>
        <td><center><font >1</font></center></td>
          <td><center><font >1</font></center></td>
        <td><center><font >1</font></center></td>
          <td><center><font >0.83</font></center></td>
        <td><center><font >0.83</font></center></td>
       <td><center><font >0.5</font></center></td>
        <td><center><font >0.33</font></center></td>
          <td><center><font >0.17</font></center></td>
        <td><center><font >0</font></center></td>
    </tr>
 <tr>
        <td><center><font >Precision</font></center></td>
          <td><center><font >0.6</font></center></td>
        <td><center><font >0.6</font></center></td>
          <td><center><font >0.67</font></center></td>
        <td><center><font >0.75</font></center></td>
          <td><center><font >0.83</font></center></td>
        <td><center><font >1</font></center></td>
       <td><center><font >1</font></center></td>
        <td><center><font >1</font></center></td>
          <td><center><font >1</font></center></td>
        <td><center><font >-</font></center></td>
    </tr>
   <tr>
        <td rowspan="2"><center><font >预测-2</font></center></td>
         <td><center><font >Recall</font></center></td>
          <td><center><font >1</font></center></td>
        <td><center><font >1</font></center></td>
          <td><center><font >1</font></center></td>
        <td><center><font >1</font></center></td>
          <td><center><font >0.83</font></center></td>
        <td><center><font >0.83</font></center></td>
       <td><center><font >0.83</font></center></td>
        <td><center><font >0.33</font></center></td>
          <td><center><font >0</font></center></td>
        <td><center><font >0</font></center></td>
    </tr>
 <tr>
     <td><center><font >Precision</font></center></td>
          <td><center><font >0.6</font></center></td>
        <td><center><font >0.67</font></center></td>
          <td><center><font >0.67</font></center></td>
        <td><center><font >0.86</font></center></td>
          <td><center><font >0.83</font></center></td>
        <td><center><font >0.83</font></center></td>
       <td><center><font >1</font></center></td>
        <td><center><font >1</font></center></td>
          <td><center><font >-</font></center></td>
        <td><center><font >-</font></center></td>
    </tr>
</table>

<blockquote>
<p>PR曲线：</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image/20200505233947.png" alt="PR曲线"></p>
<blockquote>
<ul>
<li><p>如果一个学习器的P-R曲线被另一个学习器的P-R曲线完全包住，则可断言后者的性能优于前者，示例数据中根据PR曲线可以看到预测2优于预测1</p>
</li>
<li><p>至于有交叉的情况可以判断曲线下方的面积大小来判断，面积大的性能更好</p>
</li>
<li><p>平衡点（BEP）是P=R时的取值，如果这个值较大，则说明学习器的性能较好</p>
</li>
</ul>
<p>参考<a href="https://www.jianshu.com/p/ac46cb7e6f87" target="_blank" rel="noopener">性能评估之PR曲线与ROC曲线</a>。</p>
</blockquote>
<h2 id="ROC曲线"><a href="#ROC曲线" class="headerlink" title="ROC曲线"></a>ROC曲线</h2><blockquote>
<p>ROC曲线英文’receiver operating characteristic curve’，直译为“接受者操作特性曲线”，又称为感受性曲线（sensitivity curve）。得此名的原因在于曲线上各点反映着相同的感受性，它们都是对同一信号刺激的反应，只不过是在几种不同的判定标准下所得的结果而已。</p>
<p>ROC曲线是在门限阈值不断变化过程中以虚警概率（FPR）为横轴，击中概率（TPR）为纵轴绘制而成的曲线。</p>
</blockquote>
<h3 id="绘制示例数据的ROC曲线"><a href="#绘制示例数据的ROC曲线" class="headerlink" title="绘制示例数据的ROC曲线"></a>绘制示例数据的ROC曲线</h3><blockquote>
<p>为直观展示ROC曲线绘制过程，根据示例数据绘制ROC曲线（简便起见阈值选定为0.05-0.95，跨度0.1）。</p>
</blockquote>
 <table>
    <tr>
         <th   ><center>阈值</center></th>
        <th colspan="4" ><center>预测-1</center></th>
        <th  colspan="4"><center>预测-2</center></th>
    </tr>  
      <tr>
        <td rowspan="3"><center><font >0.05</font></center></td>
              <td><center><font >TP</font></center></td>
            <td><center><font >FP</font></center></td>
              <td><center><font >TN</font></center></td>
            <td><center><font >FN</font></center></td>
          <td><center><font >TP</font></center></td>
            <td><center><font >FP</font></center></td>
              <td><center><font >TN</font></center></td>
            <td><center><font >FN</font></center></td>
    </tr>  
     <tr>
        <td><center><font >6</font></center></td>
        <td><center><font >4</font></center></td>
          <td><center><font >0</font></center></td>
        <td><center><font >0</font></center></td>
          <td><center><font >6</font></center></td>
        <td><center><font >4</font></center></td>
          <td><center><font >0</font></center></td>
        <td><center><font >0</font></center></td>
    </tr>
  <tr>
        <td><center><font >FPR</font></center></td>
        <td><center><font >1</font></center></td>
          <td><center><font >TPR</font></center></td>
        <td><center><font >1</font></center></td>
          <td><center><font >FPR</font></center></td>
        <td><center><font >1</font></center></td>
          <td><center><font >TPR</font></center></td>
        <td><center><font >1</font></center></td>
    </tr>
     <td rowspan="3"><center><font >0.15</font></center></td>
              <td><center><font >TP</font></center></td>
            <td><center><font >FP</font></center></td>
              <td><center><font >TN</font></center></td>
            <td><center><font >FN</font></center></td>
          <td><center><font >TP</font></center></td>
            <td><center><font >FP</font></center></td>
              <td><center><font >TN</font></center></td>
            <td><center><font >FN</font></center></td>
    </tr>  
     <tr>
        <td><center><font >6</font></center></td>
        <td><center><font >4</font></center></td>
          <td><center><font >0</font></center></td>
        <td><center><font >0</font></center></td>
          <td><center><font >6</font></center></td>
        <td><center><font >3</font></center></td>
          <td><center><font >1</font></center></td>
        <td><center><font >0</font></center></td>
    </tr>
  <tr>
        <td><center><font >FPR</font></center></td>
        <td><center><font >1</font></center></td>
          <td><center><font >TPR</font></center></td>
        <td><center><font >1</font></center></td>
          <td><center><font >FPR</font></center></td>
        <td><center><font >0.75</font></center></td>
          <td><center><font >TPR</font></center></td>
        <td><center><font >1</font></center></td>
    </tr>
 <td rowspan="3"><center><font >0.25</font></center></td>
              <td><center><font >TP</font></center></td>
            <td><center><font >FP</font></center></td>
              <td><center><font >TN</font></center></td>
            <td><center><font >FN</font></center></td>
          <td><center><font >TP</font></center></td>
            <td><center><font >FP</font></center></td>
              <td><center><font >TN</font></center></td>
            <td><center><font >FN</font></center></td>
    </tr>  
   <tr>
        <td><center><font >6</font></center></td>
        <td><center><font >3</font></center></td>
          <td><center><font >1</font></center></td>
        <td><center><font >0</font></center></td>
          <td><center><font >6</font></center></td>
        <td><center><font >3</font></center></td>
          <td><center><font >1</font></center></td>
        <td><center><font >0</font></center></td>
    </tr>
  <tr>
        <td><center><font >FPR</font></center></td>
        <td><center><font >0.75</font></center></td>
          <td><center><font >TPR</font></center></td>
        <td><center><font >1</font></center></td>
          <td><center><font >FPR</font></center></td>
        <td><center><font >0.75</font></center></td>
          <td><center><font >TPR</font></center></td>
        <td><center><font >1</font></center></td>
    </tr>
 <td rowspan="3"><center><font >0.35</font></center></td>
              <td><center><font >TP</font></center></td>
            <td><center><font >FP</font></center></td>
              <td><center><font >TN</font></center></td>
            <td><center><font >FN</font></center></td>
          <td><center><font >TP</font></center></td>
            <td><center><font >FP</font></center></td>
              <td><center><font >TN</font></center></td>
            <td><center><font >FN</font></center></td>
    </tr>  
     <tr>
        <td><center><font >6</font></center></td>
        <td><center><font >2</font></center></td>
          <td><center><font >2</font></center></td>
        <td><center><font >0</font></center></td>
          <td><center><font >6</font></center></td>
        <td><center><font >1</font></center></td>
          <td><center><font >3</font></center></td>
        <td><center><font >0</font></center></td>
    </tr>
  <tr>
        <td><center><font >FPR</font></center></td>
        <td><center><font >0.5</font></center></td>
          <td><center><font >TPR</font></center></td>
        <td><center><font >1</font></center></td>
          <td><center><font >FPR</font></center></td>
        <td><center><font >0.25</font></center></td>
          <td><center><font >TPR</font></center></td>
        <td><center><font >1</font></center></td>
    </tr>
 <td rowspan="3"><center><font >0.45</font></center></td>
              <td><center><font >TP</font></center></td>
            <td><center><font >FP</font></center></td>
              <td><center><font >TN</font></center></td>
            <td><center><font >FN</font></center></td>
          <td><center><font >TP</font></center></td>
            <td><center><font >FP</font></center></td>
              <td><center><font >TN</font></center></td>
            <td><center><font >FN</font></center></td>
    </tr>  
     <tr>
        <td><center><font >5</font></center></td>
        <td><center><font >1</font></center></td>
          <td><center><font >3</font></center></td>
        <td><center><font >1</font></center></td>
          <td><center><font >5</font></center></td>
        <td><center><font >1</font></center></td>
          <td><center><font >3</font></center></td>
        <td><center><font >1</font></center></td>
    </tr>
  <tr>
        <td><center><font >FPR</font></center></td>
        <td><center><font >0.25</font></center></td>
          <td><center><font >TPR</font></center></td>
        <td><center><font >0.83</font></center></td>
          <td><center><font >FPR</font></center></td>
        <td><center><font >0.25</font></center></td>
          <td><center><font >TPR</font></center></td>
        <td><center><font >0.83</font></center></td>
    </tr>
 <td rowspan="3"><center><font >0.55</font></center></td>
              <td><center><font >TP</font></center></td>
            <td><center><font >FP</font></center></td>
              <td><center><font >TN</font></center></td>
            <td><center><font >FN</font></center></td>
          <td><center><font >TP</font></center></td>
            <td><center><font >FP</font></center></td>
              <td><center><font >TN</font></center></td>
            <td><center><font >FN</font></center></td>
    </tr>  
     <tr>
        <td><center><font >5</font></center></td>
        <td><center><font >0</font></center></td>
          <td><center><font >4</font></center></td>
        <td><center><font >1</font></center></td>
          <td><center><font >5</font></center></td>
        <td><center><font >1</font></center></td>
          <td><center><font >3</font></center></td>
        <td><center><font >1</font></center></td>
    </tr>
  <tr>
        <td><center><font >FPR</font></center></td>
        <td><center><font >0</font></center></td>
          <td><center><font >TPR</font></center></td>
        <td><center><font >0.83</font></center></td>
          <td><center><font >FPR</font></center></td>
        <td><center><font >0.25</font></center></td>
          <td><center><font >TPR</font></center></td>
        <td><center><font >0.83</font></center></td>
    </tr>
 <td rowspan="3"><center><font >0.65</font></center></td>
              <td><center><font >TP</font></center></td>
            <td><center><font >FP</font></center></td>
              <td><center><font >TN</font></center></td>
            <td><center><font >FN</font></center></td>
          <td><center><font >TP</font></center></td>
            <td><center><font >FP</font></center></td>
              <td><center><font >TN</font></center></td>
            <td><center><font >FN</font></center></td>
    </tr>  
     <tr>
        <td><center><font >3</font></center></td>
        <td><center><font >0</font></center></td>
          <td><center><font >4</font></center></td>
        <td><center><font >3</font></center></td>
          <td><center><font >5</font></center></td>
        <td><center><font >0</font></center></td>
          <td><center><font >4</font></center></td>
        <td><center><font >1</font></center></td>
    </tr>
  <tr>
        <td><center><font >FPR</font></center></td>
        <td><center><font >0</font></center></td>
          <td><center><font >TPR</font></center></td>
        <td><center><font >0.5</font></center></td>
          <td><center><font >FPR</font></center></td>
        <td><center><font >0</font></center></td>
          <td><center><font >TPR</font></center></td>
        <td><center><font >0.83</font></center></td>
    </tr>
 <td rowspan="3"><center><font >0.75</font></center></td>
              <td><center><font >TP</font></center></td>
            <td><center><font >FP</font></center></td>
              <td><center><font >TN</font></center></td>
            <td><center><font >FN</font></center></td>
          <td><center><font >TP</font></center></td>
            <td><center><font >FP</font></center></td>
              <td><center><font >TN</font></center></td>
            <td><center><font >FN</font></center></td>
    </tr>  
     <tr>
        <td><center><font >2</font></center></td>
        <td><center><font >0</font></center></td>
          <td><center><font >4</font></center></td>
        <td><center><font >4</font></center></td>
          <td><center><font >2</font></center></td>
        <td><center><font >0</font></center></td>
          <td><center><font >4</font></center></td>
        <td><center><font >4</font></center></td>
    </tr>
  <tr>
        <td><center><font >FPR</font></center></td>
        <td><center><font >0</font></center></td>
          <td><center><font >TPR</font></center></td>
        <td><center><font >0.33</font></center></td>
          <td><center><font >FPR</font></center></td>
        <td><center><font >0</font></center></td>
          <td><center><font >TPR</font></center></td>
        <td><center><font >0.33</font></center></td>
    </tr>
 <td rowspan="3"><center><font >0.85</font></center></td>
              <td><center><font >TP</font></center></td>
            <td><center><font >FP</font></center></td>
              <td><center><font >TN</font></center></td>
            <td><center><font >FN</font></center></td>
          <td><center><font >TP</font></center></td>
            <td><center><font >FP</font></center></td>
              <td><center><font >TN</font></center></td>
            <td><center><font >FN</font></center></td>
    </tr>  
     <tr>
        <td><center><font >1</font></center></td>
        <td><center><font >0</font></center></td>
          <td><center><font >4</font></center></td>
        <td><center><font >5</font></center></td>
          <td><center><font >0</font></center></td>
        <td><center><font >0</font></center></td>
          <td><center><font >4</font></center></td>
        <td><center><font >6</font></center></td>
    </tr>
  <tr>
        <td><center><font >FPR</font></center></td>
        <td><center><font >0</font></center></td>
          <td><center><font >TPR</font></center></td>
        <td><center><font >0.17</font></center></td>
          <td><center><font >FPR</font></center></td>
        <td><center><font >0</font></center></td>
          <td><center><font >TPR</font></center></td>
        <td><center><font >0</font></center></td>
    </tr>
 <td rowspan="3"><center><font >0.95</font></center></td>
              <td><center><font >TP</font></center></td>
            <td><center><font >FP</font></center></td>
              <td><center><font >TN</font></center></td>
            <td><center><font >FN</font></center></td>
          <td><center><font >TP</font></center></td>
            <td><center><font >FP</font></center></td>
              <td><center><font >TN</font></center></td>
            <td><center><font >FN</font></center></td>
    </tr>  
     <tr>
        <td><center><font >0</font></center></td>
        <td><center><font >0</font></center></td>
          <td><center><font >4</font></center></td>
        <td><center><font >6</font></center></td>
          <td><center><font >0</font></center></td>
        <td><center><font >0</font></center></td>
          <td><center><font >4</font></center></td>
        <td><center><font >6</font></center></td>
    </tr>
  <tr>
        <td><center><font >FPR</font></center></td>
        <td><center><font >0</font></center></td>
          <td><center><font >TPR</font></center></td>
        <td><center><font >0</font></center></td>
          <td><center><font >FPR</font></center></td>
        <td><center><font >0</font></center></td>
          <td><center><font >TPR</font></center></td>
        <td><center><font >0</font></center></td>
    </tr>
</table>

<blockquote>
<p>结果坐标</p>
</blockquote>
<table>
      <tr>
        <th colspan = "2"><center><font >编号</font></center></td>
        <th><center><font >1</font></center></td>
          <th><center><font >2</font></center></td>
        <th><center><font >3</font></center></td>
          <th><center><font >4</font></center></td>
        <th><center><font >5</font></center></td>
          <th><center><font >6</font></center></td>
        <th><center><font >7</font></center></td>
<th><center><font >8</font></center></td>
          <th><center><font >9</font></center></td>
        <th><center><font >10</font></center></td>
    </tr>
   <tr>
        <td rowspan="2"><center><font >预测-1</font></center></td>
        <td><center><font >FPR</font></center></td>
          <td><center><font >1</font></center></td>
        <td><center><font >1</font></center></td>
          <td><center><font >0.75</font></center></td>
        <td><center><font >0.5</font></center></td>
          <td><center><font >0.25</font></center></td>
        <td><center><font >0</font></center></td>
       <td><center><font >0</font></center></td>
        <td><center><font >0</font></center></td>
          <td><center><font >0</font></center></td>
        <td><center><font >0</font></center></td>
    </tr>
 <tr>
        <td><center><font >TPR</font></center></td>
          <td><center><font >1</font></center></td>
        <td><center><font >1</font></center></td>
          <td><center><font >1</font></center></td>
        <td><center><font >1</font></center></td>
          <td><center><font >0.83</font></center></td>
        <td><center><font >0.83</font></center></td>
       <td><center><font >0.5</font></center></td>
        <td><center><font >0.33</font></center></td>
          <td><center><font >0.17</font></center></td>
        <td><center><font >0</font></center></td>
    </tr>
   <tr>
        <td rowspan="2"><center><font >预测-2</font></center></td>
        <td><center><font >FPR</font></center></td>
          <td><center><font >1</font></center></td>
        <td><center><font >0.75</font></center></td>
          <td><center><font >0.75</font></center></td>
        <td><center><font >0.25</font></center></td>
          <td><center><font >0.25</font></center></td>
        <td><center><font >0.25</font></center></td>
       <td><center><font >0</font></center></td>
        <td><center><font >0</font></center></td>
          <td><center><font >0</font></center></td>
        <td><center><font >0</font></center></td>
    </tr>
 <tr>
        <td><center><font >TPR</font></center></td>
          <td><center><font >1</font></center></td>
        <td><center><font >1</font></center></td>
          <td><center><font >1</font></center></td>
        <td><center><font >1</font></center></td>
          <td><center><font >0.83</font></center></td>
        <td><center><font >0.83</font></center></td>
       <td><center><font >0.83</font></center></td>
        <td><center><font >0.33</font></center></td>
          <td><center><font >0</font></center></td>
        <td><center><font >0</font></center></td>
    </tr>
</table>

<blockquote>
<p>ROC曲线：</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image/20200505234008.png" alt="ROC曲线"></p>
<blockquote>
<p>ROC曲线图中，坐标（0,0）代表的含义是虚警概率为0，既没有负样本被判定为正样本，同时召回率也为0，既没有正样本被判定为正样本 —— 也就是此处表示所有样本都判定为了负样本。这是由于阈值选择接近1，导致没有样本被划定到正样本区域内，并不说明模型不好，事实上所有的模型都会经过这一点；</p>
<p>同理，坐标（1,1）表示阈值接近0，所有样本均被判定为正；</p>
<p>坐标（0,1）意味着完美的分类器，在虚警为0的情况下正确判断了所有正样本，这也是我们机器学习人的毕生追求。因此ROC曲线越接近左上角，模型性能越好。</p>
</blockquote>
<h2 id="AUC"><a href="#AUC" class="headerlink" title="AUC"></a>AUC</h2><blockquote>
<ul>
<li><p>AUC是英文 Area under Curve的缩写，表示的是ROC曲线下的面积，也就是ROC曲线在[0,1]上的积分</p>
</li>
<li><p>这是用来评价模型分类器性能的指标，对不同模型来说，AUC越大表示分类性能越好</p>
</li>
<li><p>AUC取值范围为[0,1]，有效果的分类器会大于0.5，效果差的会接近0.5</p>
</li>
<li><p>如果有人问为什么不是接近0的效果最差呢？ 事实上如果你得到了AUC为0的分类器，只需要对输出取反你就得到了完美的分类器。</p>
</li>
</ul>
</blockquote>
]]></content>
      <categories>
        <category>机器学习</category>
        <category>基础知识</category>
      </categories>
      <tags>
        <tag>机器学习</tag>
        <tag>性能评估</tag>
      </tags>
  </entry>
  <entry>
    <title>机器学习-基础知识 - Precision, Recall, Sensitivity, Specificity, Accuracy, FNR, FPR, TPR, TNR, F1 Score, Balanced F Score</title>
    <url>/2020/02/27/machine_learning/basic_knowledge/performance_evaluation/Performance-evaluation/</url>
    <content><![CDATA[<blockquote>
<p>本文介绍机器学习中的二分类性能评估指标Precision, Recall, Sensitivity, Specificity, Accuracy, FNR, FPR, TNR, TPR, F1 Score, Balanced F Score基本含义，给出公式和具体算例，并作简要分析。</p>
</blockquote>
<a id="more"></a>

<h2 id="基础定义"><a href="#基础定义" class="headerlink" title="基础定义"></a>基础定义</h2><table>
    <tr>
        <th colspan="2" rowspan="2" ><center>评估指标</center></th>
         <th colspan="2" ><center>预测结果</center></th>
    </tr>  
    <tr>
        <th  ><center>正样本</center></th>
        <th  ><center>负样本</center></th>
    </tr >
    <tr >
        <td rowspan="2"><center>实际<br>情况</center></td>
        <td><center>正样本</center></td>
        <td><center>TP</center></td>
        <td><center>FN</center></td>
    </tr>
    <tr >
        <td><center>负样本</center></td>
        <td><center>FP</center></td>
        <td><center>TN</center></td>
    </tr>
</table>

<blockquote>
<p>具体含义和理解参考 <a href="https://www.zywvvd.com/2020/02/26/machine_learning/basic_knowledge/TP_FN_FP_TN/Evaluation-index/">机器学习-基础知识- TP、FN、FP、TN</a>。</p>
</blockquote>
<p><img src="https://photos.zywvvd.com/image/20200506000757.png" alt=""></p>
<h2 id="示例用例"><a href="#示例用例" class="headerlink" title="示例用例"></a>示例用例</h2><blockquote>
<p>样本信息</p>
</blockquote>
<table>
    <tr>
        <th ><center>样本编号</center></th>
         <th  ><center>1</center></th>
        <th  ><center>2</center></th>
        <th  ><center>3</center></th>
        <th  ><center>4</center></th>
        <th  ><center>5</center></th>
        <th  ><center>6</center></th>
        <th  ><center>7</center></th>
        <th  ><center>8</center></th>
        <th  ><center>9</center></th>
        <th  ><center>10</center></th>
    </tr>  
    <tr>
        <td><center>真实类别</center></td>
        <td><center>P</center></td>
         <td><center>P</center></td>
         <td><center>P</center></td>
         <td><center>P</center></td>
         <td><center>P</center></td>
         <td><center>P</center></td>
         <td><center>P</center></td>
         <td><center>N</center></td>
         <td><center>N</center></td>
         <td><center>N</center></td>
    </tr>
</table>
> 预测-1
 <table>
    <tr>
        <th ><center>样本编号</center></th>
         <th  ><center>1</center></th>
        <th  ><center>2</center></th>
        <th  ><center>3</center></th>
        <th  ><center>4</center></th>
        <th  ><center>5</center></th>
        <th  ><center>6</center></th>
        <th  ><center>7</center></th>
        <th  ><center>8</center></th>
        <th  ><center>9</center></th>
        <th  ><center>10</center></th>
    </tr>  
    <tr>
        <td><center>预测类别</center></td>
        <td><center><font color='green'>P</font></center></td>
          <td><center><font color='green'>P</font></center></td>
          <td><center><font color='green'>P</font></center></td>
         <td><center><font color='red'>N</font></center></td>
         <td><center><font color='red'>N</font></center></td>
          <td><center><font color='red'>N</font></center></td>
         <td><center><font color='red'>N</font></center></td>
          <td><center><font color='green'>N</font></center></td>
         <td><center><font color='green'>N</font></center></td>
         <td><center><font color='green'>N</font></center></td>
    </tr>
     <tr>
         <td><center>评估指标</center></td>
         <td><center>TP</center></td>
          <td><center>3</center></td>
          <td><center>TN</center></td>
          <td><center>3</center></td>
          <td><center>FP</center></td>
          <td><center>0</center></td>
          <td><center>FN</center></td>
          <td><center>4</center></td>
     </tr>
</table>

<blockquote>
<p>预测-2</p>
</blockquote>
 <table>
    <tr>
        <th ><center>样本编号</center></th>
         <th  ><center>1</center></th>
        <th  ><center>2</center></th>
        <th  ><center>3</center></th>
        <th  ><center>4</center></th>
        <th  ><center>5</center></th>
        <th  ><center>6</center></th>
        <th  ><center>7</center></th>
        <th  ><center>8</center></th>
        <th  ><center>9</center></th>
        <th  ><center>10</center></th>
    </tr>  
    <tr>
        <td><center>预测类别</center></td>
         <td><center><font color='green'>P</font></center></td>
         <td><center><font color='green'>P</font></center></td>
          <td><center><font color='red'>N</font></center></td>
          <td><center><font color='red'>N</font></center></td>
          <td><center><font color='green'>P</font></center></td>
         <td><center><font color='green'>P</font></center></td>
         <td><center><font color='green'>P</font></center></td>
        <td><center><font color='red'>P</font></center></td>
         <td><center><font color='green'>N</font></center></td>
          <td><center><font color='green'>N</font></center></td>
    </tr>
          <tr>
         <td><center>评估指标</center></td>
         <td><center>TP</center></td>
          <td><center>5</center></td>
          <td><center>TN</center></td>
          <td><center>2</center></td>
          <td><center>FP</center></td>
          <td><center>1</center></td>
          <td><center>FN</center></td>
          <td><center>2</center></td>
     </tr>
</table>

<blockquote>
<p>预测-3</p>
</blockquote>
 <table>
    <tr>
        <th ><center>样本编号</center></th>
         <th  ><center>1</center></th>
        <th  ><center>2</center></th>
        <th  ><center>3</center></th>
        <th  ><center>4</center></th>
        <th  ><center>5</center></th>
        <th  ><center>6</center></th>
        <th  ><center>7</center></th>
        <th  ><center>8</center></th>
        <th  ><center>9</center></th>
        <th  ><center>10</center></th>
    </tr>  
    <tr>
        <td><center>预测类别</center></td>
         <td><center><font color='green'>P</font></center></td>
         <td><center><font color='green'>P</font></center></td>
            <td><center><font color='green'>P</font></center></td>
            <td><center><font color='green'>P</font></center></td>
          <td><center><font color='green'>P</font></center></td>
         <td><center><font color='green'>P</font></center></td>
         <td><center><font color='green'>P</font></center></td>
        <td><center><font color='red'>P</font></center></td>
         <td><center><font color='red'>P</font></center></td>
          <td><center><font color='red'>P</font></center></td>
    </tr>
          <tr>
         <td><center>评估指标</center></td>
         <td><center>TP</center></td>
          <td><center>7</center></td>
          <td><center>TN</center></td>
          <td><center>0</center></td>
          <td><center>FP</center></td>
          <td><center>3</center></td>
          <td><center>FN</center></td>
          <td><center>0</center></td>
     </tr>
</table>

<h2 id="Precision"><a href="#Precision" class="headerlink" title="Precision"></a>Precision</h2><blockquote>
<p>译为：<code>精确率</code>，<code>查准率</code>。</p>
<p>含义：预测所有正样本中判断正确的比例：</p>
</blockquote>
<p>$$<br>Precision=\frac{TP}{TP+FP}<br>$$</p>
<blockquote>
<p>预测用例Precision：</p>
</blockquote>
<p>$$<br>Precision_{预测1}=\frac{TP}{TP+FP}=\frac{3}{3+0}=1<br>$$</p>
<p>$$<br>Precision_{预测2}=\frac{TP}{TP+FP}=\frac{5}{5+1}\approx 0.83<br>$$</p>
<p>$$<br>Precision_{预测3}=\frac{TP}{TP+FP}=\frac{7}{7+3}=0.7<br>$$</p>
<blockquote>
<p>可以看到预测1判断出的正样本全部正确，因此该预测具有最高的查准率。</p>
<p>可以理解Precision为模型判断为正样本的置信概率，概率越高，该模型判断出的正样本越可信。</p>
</blockquote>
<h2 id="FDR（False-Discorvery-Rate）"><a href="#FDR（False-Discorvery-Rate）" class="headerlink" title="FDR（False Discorvery Rate）"></a>FDR（False Discorvery Rate）</h2><blockquote>
<p>译为：<code>过杀率(工业缺陷)</code>。<br>含义：反映了检测器判断为正样本的样本中，负样本所占比例：</p>
</blockquote>
<p>$$<br>FDR=\frac{FP}{TP+FP}=1-Precision<br>$$</p>
<blockquote>
<p>预测用例FA：</p>
</blockquote>
<p>$$<br>FDR_{预测1}=\frac{FP}{TP+FP}=\frac{0}{3+0}=0<br>$$</p>
<p>$$<br>FDR_{预测2}=\frac{FP}{TP+FP}=\frac{1}{5+1}\approx0.17<br>$$</p>
<p>$$<br>FDR_{预测3}=\frac{FP}{TP+FP}=\frac{3}{7+3}=0.3<br>$$</p>
<h2 id="Recall-Sensitivity-TPR（True-Positive-Rate）"><a href="#Recall-Sensitivity-TPR（True-Positive-Rate）" class="headerlink" title="Recall / Sensitivity / TPR（True Positive Rate）"></a>Recall / Sensitivity / TPR（True Positive Rate）</h2><blockquote>
<p>译为：<code>召回率</code>，<code>查全率</code> ， <code>敏感性</code> ， <code>真正率</code>。</p>
<p>含义：预测正确的所有正样本占实际所有正样本的比例：</p>
</blockquote>
<p>$$<br>Recall=Sensitivity=TPR=\frac{TP}{TP+FN}<br>$$</p>
<blockquote>
<p> 预测用例Recall / Sensitivity / TPR：</p>
</blockquote>
<p>$$<br>Recall_{预测1}=\frac{TP}{TP+FN}=\frac{3}{3+4}\approx0.43<br>$$</p>
<p>$$<br>Recall_{预测2}=\frac{TP}{TP+FN}=\frac{5}{5+2}\approx0.71<br>$$</p>
<p>$$<br>Recall_{预测3}=\frac{TP}{TP+FN}=\frac{7}{7+0}=1<br>$$</p>
<blockquote>
<p>查全率和查准率考量角度不同，不关注模型判断出正样本是否足够准确，关注模型挑对的正样本占全部正样本的比例。</p>
<p>因此最简单判断所有样本为正的策略可以得到100%的查全率，因为这个模型查到的正样本很“全”。</p>
</blockquote>
<h2 id="Specificity-TNR-（True-Negative-Rate）"><a href="#Specificity-TNR-（True-Negative-Rate）" class="headerlink" title="Specificity / TNR （True Negative Rate）"></a>Specificity / TNR （True Negative Rate）</h2><blockquote>
<p>译为：<code>特异度</code>，<code>真负率</code>。<br>含义：预测正确的所有负样本占实际所有负样本的比例：</p>
</blockquote>
<p>$$<br>Specificity=TNR=\frac{TN}{TN+FP}<br>$$</p>
<blockquote>
<p>预测用例Specificity / TNR ：</p>
</blockquote>
<p>$$<br>Specificity_{预测1}=\frac{TN}{TN+FP}=\frac{3}{3+0}=1<br>$$</p>
<p>$$<br>Specificity_{预测2}=\frac{TN}{TN+FP}=\frac{2}{2+1}\approx0.67<br>$$</p>
<p>$$<br>Specificity_{预测3}=\frac{TN}{TN+FP}=\frac{0}{0+3}=0<br>$$</p>
<blockquote>
<p>与查全率相似，描述的是另一边的情况。</p>
</blockquote>
<h2 id="FPR（False-Positive-Rate）"><a href="#FPR（False-Positive-Rate）" class="headerlink" title="FPR（False Positive Rate）"></a>FPR（False Positive Rate）</h2><blockquote>
<p>译为：<code>假正率</code>，<code>误检率</code>，<code>虚警概率</code>。<br>含义：预测误判为正样本的负样本数量占实际所有负样本的比例：</p>
</blockquote>
<p>$$<br>FPR=\frac{FP}{FP+TN}<br>$$</p>
<blockquote>
<p>预测用例FPR：</p>
</blockquote>
<p>$$<br>FPR_{预测1}=\frac{FP}{FP+TN}=\frac{0}{0+3}=0<br>$$</p>
<p>$$<br>FPR_{预测2}=\frac{FP}{FP+TN}=\frac{1}{1+2}\approx0.33<br>$$</p>
<p>$$<br>FPR_{预测3}=\frac{FP}{FP+TN}=\frac{3}{3+0}=1<br>$$</p>
<h2 id="FNR（False-Negative-Rate）"><a href="#FNR（False-Negative-Rate）" class="headerlink" title="FNR（False Negative Rate）"></a>FNR（False Negative Rate）</h2><blockquote>
<p>译为：<code>假负率</code>，<code>漏警概率</code>，<code>漏检率</code>。<br>含义：预测误判为负样本的正样本数量占实际所有正样本的比例：</p>
</blockquote>
<p>$$<br>FNR=\frac{FN}{FN+TP}=1-Recall<br>$$</p>
<blockquote>
<p>预测用例FNR：</p>
</blockquote>
<p>$$<br>FNR_{预测1}=\frac{FN}{FN+TP}=\frac{4}{4+3}\approx0.57<br>$$</p>
<p>$$<br>FNR_{预测2}=\frac{FN}{FN+TP}=\frac{2}{2+5}\approx0.29<br>$$</p>
<p>$$<br>FNR_{预测3}=\frac{FN}{FN+TP}=\frac{0}{0+7}=0<br>$$</p>
<h1 id="Accuracy"><a href="#Accuracy" class="headerlink" title="Accuracy"></a>Accuracy</h1><blockquote>
<p>译为：<code>正确率</code><br>含义：所有实验中预测正确的样本数占所有样本数量的比例。</p>
</blockquote>
<p>$$<br>Accuracy=\frac{TP+TN}{TP+FP+TN+FN}<br>$$</p>
<blockquote>
<p>预测用例Accuracy：</p>
</blockquote>
<p>$$<br>Accuracy_{预测1}=\frac{TP+TN}{TP+FP+TN+FN}=\frac{3+3}{3+0+3+4}=0.6<br>$$</p>
<p>$$<br>Accuracy_{预测2}=\frac{TP+TN}{TP+FP+TN+FN}=\frac{5+2}{5+1+2+2}=0.7<br>$$</p>
<p>$$<br>Accuracy_{预测3}=\frac{TP+TN}{TP+FP+TN+FN}=\frac{7+0}{7+3+0+0}=0.7<br>$$</p>
<blockquote>
<p>事实上预测1,2的模型对正、负样本都是有有一定正确分类能力的，预测3模型仅仅使用了“将所有样本都判为正”的策略既收获了最高的正确率，并不是这个指标有问题，而是数据分布本身并不平衡。</p>
<p>样本中正样本居多，预测3的模型成功预测了数据中正样本占大多数，因此策略得到了高正确率的回报。</p>
</blockquote>
<h2 id="Error-Rate"><a href="#Error-Rate" class="headerlink" title="Error Rate"></a>Error Rate</h2><blockquote>
<p>译为：<code>错误率</code><br>含义：所有实验中预测错误的样本数占所有样本数量的比例。</p>
</blockquote>
<p>$$<br>Error_Rate=\frac{FP+FN}{TP+FP+TN+FN}=1-Accuracy<br>$$</p>
<blockquote>
<p>预测用例Accuracy：</p>
</blockquote>
<p>$$<br>Error_Rate_{预测1}=\frac{FP+FN}{TP+FP+TN+FN}=\frac{0+4}{3+0+3+4}=0.4<br>$$</p>
<p>$$<br>Error_Rate_{预测2}=\frac{FP+FN}{TP+FP+TN+FN}=\frac{1+2}{5+1+2+2}=0.3<br>$$</p>
<p>$$<br>Error_Rate_{预测3}=\frac{FP+FN}{TP+FP+TN+FN}=\frac{3+0}{7+3+0+0}=0.3<br>$$</p>
<h2 id="F1-Score-Balanced-F-Score"><a href="#F1-Score-Balanced-F-Score" class="headerlink" title="F1 Score / Balanced F Score"></a>F1 Score / Balanced F Score</h2><blockquote>
<p>译为：<code>F1 分数</code> / <code>平衡F分数</code><br>含义：F1分数兼顾了分类模型的精确率和召回率，定义为模型精确率和召回率的调和平均数。</p>
</blockquote>
<p>$$<br>F_1 Score=2\times\frac{Precision\times Recall}{Precision+ Recall}<br>$$</p>
<blockquote>
<p>预测用例F1 Score：</p>
</blockquote>
<p>$$<br>F_1 Score_{预测1}=2\times\frac{Precision_{预测1}\times Recall_{预测1}}{Precision_{预测1}+ Recall_{预测1}}=2\times\frac{1\times \frac{3}{7}}{1+ \frac{3}{7}}= 0.6<br>$$</p>
<p>$$<br>F_1 Score_{预测2}=2\times\frac{Precision_{预测2}\times Recall_{预测2}}{Precision_{预测2}+ Recall_{预测2}}=2\times\frac{\frac{5}{6} \times \frac{5}{7}}{\frac{5}{6} + \frac{5}{7}}\approx 0.77<br>$$</p>
<p>$$<br>F_1 Score_{预测3}=2\times\frac{Precision_{预测3}\times Recall_{预测3}}{Precision_{预测3}+ Recall_{预测3}}=2\times\frac{0.7 \times 1}{0.7 + 1}\approx 0.82<br>$$</p>
]]></content>
      <categories>
        <category>机器学习</category>
        <category>基础知识</category>
      </categories>
      <tags>
        <tag>机器学习</tag>
        <tag>性能评估</tag>
      </tags>
  </entry>
  <entry>
    <title>机器学习-基础知识- TP, FN, FP, TN</title>
    <url>/2020/02/26/machine_learning/basic_knowledge/TP_FN_FP_TN/Evaluation-index/</url>
    <content><![CDATA[<blockquote>
<p>本文介绍机器学习的一系列基础评估指标。</p>
</blockquote>
<a id="more"></a>

<h2 id="基础定义"><a href="#基础定义" class="headerlink" title="基础定义"></a>基础定义</h2><ul>
<li>T ： True 表示判断正确</li>
<li>F ： False 表示判断错误</li>
<li>P ： PostIve 表示判断该样本为正样本</li>
<li>N ： Negative 表示判断该样本为负样本</li>
</ul>
<h2 id="指标定义"><a href="#指标定义" class="headerlink" title="指标定义"></a>指标定义</h2><blockquote>
<p>如果总是记混，按照上述字母顺序翻译出意义即可。</p>
</blockquote>
<ul>
<li>TP ： (T)该判断正确，(P)判断该样本为正样本（事实上样本为正）</li>
<li>TN ： (T)该判断正确，(N)判断该样本为负样本（事实上样本为负）</li>
<li>FP ： (F)该判断错误，(P)判断该样本为正样本（事实上样本为负）</li>
<li>FN ： (F)该判断错误，(N)判断该样本为负样本（事实上样本为正）</li>
</ul>
<table>
    <tr>
        <th colspan="2" rowspan="2" ><center>评估指标</center></th>
         <th colspan="2" ><center>预测结果</center></th>
    </tr>  
    <tr>
        <th  ><center>正样本</center></th>
        <th  ><center>负样本</center></th>
    </tr >
    <tr >
        <td rowspan="2"><center>实际<br>情况</center></td>
        <td><center>正样本</center></td>
        <td><center>TP</center></td>
        <td><center>FN</center></td>
    </tr>
    <tr >
        <td><center>负样本</center></td>
        <td><center>FP</center></td>
        <td><center>TN</center></td>
    </tr>
</table>

<h2 id="加深理解"><a href="#加深理解" class="headerlink" title="加深理解"></a>加深理解</h2><ul>
<li><p>TP和TN为判别器判断正确的情况，把事实上原本的正/负样本正确分类</p>
</li>
<li><p>FP 表示把负样本误认成了正样本，表示虚警</p>
</li>
<li><p>FN表示把正样本误认成了负样本，表示漏警</p>
</li>
</ul>
]]></content>
      <categories>
        <category>机器学习</category>
        <category>基础知识</category>
      </categories>
      <tags>
        <tag>机器学习</tag>
        <tag>性能评估</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo -3- 常用命令汇总</title>
    <url>/2020/02/25/hexo/3_hexo_commands/hexo-commands/</url>
    <content><![CDATA[<blockquote>
<p>本文记录Hexo常用命令与相应说明，相关文档也可以参考<a href="https://hexo.io/zh-cn/docs/commands" target="_blank" rel="noopener">官方文档</a>。</p>
</blockquote>
<a id="more"></a>

<h2 id="init"><a href="#init" class="headerlink" title="init"></a>init</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo init [folder]</span><br></pre></td></tr></table></figure>

<blockquote>
<p>新建网站。如果没有设置 <code>folder</code> ，Hexo 默认在目前的文件夹建立网站。</p>
</blockquote>
<h2 id="new"><a href="#new" class="headerlink" title="new"></a>new</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>新建文章。如果没有设置 <code>layout</code> 的话，默认使用 <a href="https://hexo.io/zh-cn/docs/configuration" target="_blank" rel="noopener">_config.yml</a> 中的 <code>default_layout</code> 参数代替。如果标题包含空格的话，请使用引号括起来。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo new &quot;post title with whitespace&quot;</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>-p</code>, <code>--path</code></td>
<td align="left">自定义新文章的路径</td>
</tr>
<tr>
<td align="left"><code>-r</code>, <code>--replace</code></td>
<td align="left">如果存在同名文章，将其替换</td>
</tr>
<tr>
<td align="left"><code>-s</code>, <code>--slug</code></td>
<td align="left">文章的 Slug，作为新文章的文件名和发布后的 URL</td>
</tr>
</tbody></table>
<p>默认情况下，Hexo 会使用文章的标题来决定文章文件的路径。对于独立页面来说，Hexo 会创建一个以标题为名字的目录，并在目录中放置一个 <code>index.md</code> 文件。你可以使用 <code>--path</code> 参数来覆盖上述行为、自行决定文件的目录：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new page --path about&#x2F;me &quot;About me&quot;</span><br></pre></td></tr></table></figure>

<p>以上命令会创建一个 <code>source/about/me.md</code> 文件，同时 Front Matter 中的 title 为 <code>&quot;About me&quot;</code></p>
<p>注意！title 是必须指定的！如果你这么做并不能达到你的目的：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new page --path about&#x2F;me</span><br></pre></td></tr></table></figure>

<p>此时 Hexo 会创建 <code>source/_posts/about/me.md</code>，同时 <code>me.md</code> 的 Front Matter 中的 title 为 <code>&quot;page&quot;</code>。这是因为在上述命令中，hexo-cli 将 <code>page</code> 视为指定文章的标题、并采用默认的 <code>layout</code>。</p>
<h2 id="generate"><a href="#generate" class="headerlink" title="generate"></a>generate</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>生成静态文件。</p>
<table>
<thead>
<tr>
<th align="left">选项</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>-d</code>, <code>--deploy</code></td>
<td align="left">文件生成后立即部署网站</td>
</tr>
<tr>
<td align="left"><code>-w</code>, <code>--watch</code></td>
<td align="left">监视文件变动</td>
</tr>
<tr>
<td align="left"><code>-b</code>, <code>--bail</code></td>
<td align="left">生成过程中如果发生任何未处理的异常则抛出异常</td>
</tr>
<tr>
<td align="left"><code>-f</code>, <code>--force</code></td>
<td align="left">强制重新生成文件 Hexo 引入了差分机制，如果 <code>public</code> 目录存在，那么 <code>hexo g</code> 只会重新生成改动的文件。 使用该参数的效果接近 <code>hexo clean &amp;&amp; hexo generate</code></td>
</tr>
<tr>
<td align="left"><code>-c</code>, <code>--concurrency</code></td>
<td align="left">最大同时生成文件的数量，默认无限制</td>
</tr>
</tbody></table>
<p>该命令可以简写为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure>

<h2 id="publish"><a href="#publish" class="headerlink" title="publish"></a>publish</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo publish [layout] &lt;filename&gt;</span><br></pre></td></tr></table></figure>

<p>发表草稿。</p>
<h2 id="server"><a href="#server" class="headerlink" title="server"></a>server</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>启动服务器。默认情况下，访问网址为： <code>http://localhost:4000/</code>。</p>
<table>
<thead>
<tr>
<th align="left">选项</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>-p</code>, <code>--port</code></td>
<td align="left">重设端口</td>
</tr>
<tr>
<td align="left"><code>-s</code>, <code>--static</code></td>
<td align="left">只使用静态文件</td>
</tr>
<tr>
<td align="left"><code>-l</code>, <code>--log</code></td>
<td align="left">启动日记记录，使用覆盖记录格式</td>
</tr>
</tbody></table>
<p>该命令可以简写为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo s</span><br></pre></td></tr></table></figure>

<h2 id="deploy"><a href="#deploy" class="headerlink" title="deploy"></a>deploy</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>部署网站。</p>
<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>-g</code>, <code>--generate</code></td>
<td align="left">部署之前预先生成静态文件</td>
</tr>
</tbody></table>
<p>该命令可以简写为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></table></figure>

<h2 id="render"><a href="#render" class="headerlink" title="render"></a>render</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo render &lt;file1&gt; [file2] ...</span><br></pre></td></tr></table></figure>

<p>渲染文件。</p>
<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>-o</code>, <code>--output</code></td>
<td align="left">设置输出路径</td>
</tr>
</tbody></table>
<h2 id="migrate"><a href="#migrate" class="headerlink" title="migrate"></a>migrate</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo migrate &lt;type&gt;</span><br></pre></td></tr></table></figure>

<p>从其他博客系统 <a href="https://hexo.io/zh-cn/docs/migration" target="_blank" rel="noopener">迁移内容</a>。</p>
<h2 id="clean"><a href="#clean" class="headerlink" title="clean"></a>clean</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure>

<p>清除缓存文件 (<code>db.json</code>) 和已生成的静态文件 (<code>public</code>)。</p>
<p>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p>
<h2 id="list"><a href="#list" class="headerlink" title="list"></a>list</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo list &lt;type&gt;</span><br></pre></td></tr></table></figure>

<p>列出网站资料。</p>
<h2 id="version"><a href="#version" class="headerlink" title="version"></a>version</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo version</span><br></pre></td></tr></table></figure>

<p>显示 Hexo 版本。</p>
<h2 id="常用组合命令"><a href="#常用组合命令" class="headerlink" title="常用组合命令"></a>常用组合命令</h2><blockquote>
<p>清除缓存、重新生成静态文件</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g</span><br></pre></td></tr></table></figure>

<blockquote>
<p>清除缓存、重新生成静态文件、同时部署</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g -d</span><br></pre></td></tr></table></figure>



<h2 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h2><h3 id="安全模式"><a href="#安全模式" class="headerlink" title="安全模式"></a>安全模式</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo --safe</span><br></pre></td></tr></table></figure>

<p>在安全模式下，不会载入插件和脚本。当您在安装新插件遭遇问题时，可以尝试以安全模式重新执行。</p>
<h3 id="调试模式"><a href="#调试模式" class="headerlink" title="调试模式"></a>调试模式</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo --debug</span><br></pre></td></tr></table></figure>

<p>在终端中显示调试信息并记录到 <code>debug.log</code>。当您碰到问题时，可以尝试用调试模式重新执行一次，并 <a href="https://github.com/hexojs/hexo/issues/new" target="_blank" rel="noopener">提交调试信息到 GitHub</a>。</p>
<h3 id="简洁模式"><a href="#简洁模式" class="headerlink" title="简洁模式"></a>简洁模式</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo --silent</span><br></pre></td></tr></table></figure>

<p>隐藏终端信息。</p>
<h3 id="自定义配置文件的路径"><a href="#自定义配置文件的路径" class="headerlink" title="自定义配置文件的路径"></a>自定义配置文件的路径</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 使用 custom.yml 代替默认的 _config.yml</span><br><span class="line">$ hexo server --config custom.yml</span><br><span class="line"></span><br><span class="line"># 使用 custom.yml 和 custom2.json，其中 custom2.json 优先级更高</span><br><span class="line">$ hexo generate --config custom.yml,custom2.json,custom3.yml</span><br></pre></td></tr></table></figure>

<p>自定义配置文件的路径，指定这个参数后将不再使用默认的 <code>_config.yml</code>。<br>你可以使用一个 YAML 或 JSON 文件的路径，也可以使用逗号分隔（无空格）的多个 YAML 或 JSON 文件的路径。例如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 使用 custom.yml 代替默认的 _config.yml</span><br><span class="line">$ hexo server --config custom.yml</span><br><span class="line"></span><br><span class="line"># 使用 custom.yml, custom2.json 和 custom3.yml，其中 custom3.yml 优先级最高，其次是 custom2.json</span><br><span class="line">$ hexo generate --config custom.yml,custom2.json,custom3.yml</span><br></pre></td></tr></table></figure>

<p>当你指定了多个配置文件以后，Hexo 会按顺序将这部分配置文件合并成一个 <code>_multiconfig.yml</code>。如果遇到重复的配置，排在后面的文件的配置会覆盖排在前面的文件的配置。这个原则适用于任意数量、任意深度的 YAML 和 JSON 文件。</p>
<h3 id="显示草稿"><a href="#显示草稿" class="headerlink" title="显示草稿"></a>显示草稿</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo --draft</span><br></pre></td></tr></table></figure>

<p>显示 <code>source/_drafts</code> 文件夹中的草稿文章。</p>
<h3 id="自定义-CWD"><a href="#自定义-CWD" class="headerlink" title="自定义 CWD"></a>自定义 CWD</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo --cwd &#x2F;path&#x2F;to&#x2F;cwd</span><br></pre></td></tr></table></figure>

<p>自定义当前工作目录（Current working directory）的路径。</p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Python - xlrd,xlwt模块操作excel文件</title>
    <url>/2020/02/25/python/python_xlrd_xlwt/python-xlrd-xlwt/</url>
    <content><![CDATA[<blockquote>
<p>Python输出的数据用Excel文件查看往往更直观，而且Excel中的数据也常常需要读取到Python程序中。Python的xlrd和xlwt模块便是为此而生。文本记录这两个模块的使用方法。</p>
</blockquote>
<a id="more"></a>

<h2 id="测试用例"><a href="#测试用例" class="headerlink" title="测试用例"></a>测试用例</h2><blockquote>
<p>使用read_test.xlsx作为读取excel的测试文件。其中两个工作表，分别为：</p>
</blockquote>
<img src="/2020/02/25/python/python_xlrd_xlwt/python-xlrd-xlwt/read_test1.png" class="" title="测试信息表1">

<img src="/2020/02/25/python/python_xlrd_xlwt/python-xlrd-xlwt/read_test2.png" class="" title="测试信息表2">

<h2 id="模块安装"><a href="#模块安装" class="headerlink" title="模块安装"></a>模块安装</h2><blockquote>
<p>用pip可以方便地安装</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip install xlrd</span><br><span class="line">pip install xlwt</span><br></pre></td></tr></table></figure>

<h2 id="xlrd"><a href="#xlrd" class="headerlink" title="xlrd"></a>xlrd</h2><h3 id="读取excel文件（xls，xlsx）"><a href="#读取excel文件（xls，xlsx）" class="headerlink" title="读取excel文件（xls，xlsx）"></a>读取excel文件（xls，xlsx）</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> xlrd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 读取excel文件</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    data = xlrd.open_workbook(<span class="string">'read_test.xlsx'</span>)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> err:</span><br><span class="line">    print(err)</span><br></pre></td></tr></table></figure>

<h3 id="获取工作表信息"><a href="#获取工作表信息" class="headerlink" title="获取工作表信息"></a>获取工作表信息</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 获取工作表信息</span></span><br><span class="line">print(len(data.sheets()))</span><br><span class="line">sheet_names = data.sheet_names()</span><br><span class="line">print(sheet_names)</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;<span class="number">2</span></span><br><span class="line">[<span class="string">'信息表2'</span>, <span class="string">'信息表1'</span>]</span><br></pre></td></tr></table></figure>

<h3 id="获取工作表内容"><a href="#获取工作表内容" class="headerlink" title="获取工作表内容"></a>获取工作表内容</h3><h4 id="通过索引"><a href="#通过索引" class="headerlink" title="通过索引"></a>通过索引</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 通过索引获取工作表内容</span></span><br><span class="line">info_sheet_1 = data.sheet_by_index(<span class="number">0</span>)</span><br><span class="line">info_sheet_2 = data.sheet_by_index(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">f'sheet :<span class="subst">&#123;info_sheet_1.name&#125;</span>  row_num: <span class="subst">&#123;info_sheet_1.nrows&#125;</span> column_num: <span class="subst">&#123;info_sheet_1.ncols&#125;</span>'</span>)</span><br><span class="line">print(<span class="string">f'sheet :<span class="subst">&#123;info_sheet_2.name&#125;</span>  row_num: <span class="subst">&#123;info_sheet_2.nrows&#125;</span> column_num: <span class="subst">&#123;info_sheet_2.ncols&#125;</span>'</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sheet :信息表<span class="number">1</span>  row_num: <span class="number">5</span> column_num: <span class="number">7</span></span><br><span class="line">sheet :信息表<span class="number">2</span>  row_num: <span class="number">5</span> column_num: <span class="number">7</span></span><br></pre></td></tr></table></figure>

<h4 id="通过名称"><a href="#通过名称" class="headerlink" title="通过名称"></a>通过名称</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 通过名称获取工作表内容</span></span><br><span class="line">sheet_names = data.sheet_names()</span><br><span class="line">info_sheet_1 = data.sheet_by_name(sheet_names[<span class="number">0</span>])</span><br><span class="line">info_sheet_2 = data.sheet_by_name(sheet_names[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">print(<span class="string">f'sheet :<span class="subst">&#123;info_sheet_1.name&#125;</span>  row_num: <span class="subst">&#123;info_sheet_1.nrows&#125;</span> column_num: <span class="subst">&#123;info_sheet_1.ncols&#125;</span>'</span>)</span><br><span class="line">print(<span class="string">f'sheet :<span class="subst">&#123;info_sheet_2.name&#125;</span>  row_num: <span class="subst">&#123;info_sheet_2.nrows&#125;</span> column_num: <span class="subst">&#123;info_sheet_2.ncols&#125;</span>'</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sheet :信息表<span class="number">1</span>  row_num: <span class="number">5</span> column_num: <span class="number">7</span></span><br><span class="line">sheet :信息表<span class="number">2</span>  row_num: <span class="number">5</span> column_num: <span class="number">7</span></span><br></pre></td></tr></table></figure>

<h3 id="获取工作表中数据内容"><a href="#获取工作表中数据内容" class="headerlink" title="获取工作表中数据内容"></a>获取工作表中数据内容</h3><h4 id="获取工作表行信息"><a href="#获取工作表行信息" class="headerlink" title="获取工作表行信息"></a>获取工作表行信息</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 获取工作表行信息</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(info_sheet_1.nrows):</span><br><span class="line">    print(info_sheet_1.row_values(i))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(info_sheet_2.nrows):</span><br><span class="line">    print(info_sheet_2.row_values(i))</span><br><span class="line">    </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[<span class="string">'信息表 1'</span>, <span class="string">''</span>, <span class="string">''</span>, <span class="string">''</span>, <span class="string">''</span>, <span class="string">''</span>, <span class="string">''</span>]</span><br><span class="line">[<span class="string">'姓名'</span>, <span class="string">'性别'</span>, <span class="string">'年龄'</span>, <span class="string">'籍贯'</span>, <span class="string">'手机'</span>, <span class="string">'邮箱'</span>, <span class="string">'备注'</span>]</span><br><span class="line">[<span class="string">'淑芬'</span>, <span class="string">'女'</span>, <span class="number">32.0</span>, <span class="string">'山东'</span>, <span class="number">12345678900.0</span>, <span class="string">'Shufen@163.com'</span>, <span class="string">'爱好读书'</span>]</span><br><span class="line">[<span class="string">'建国'</span>, <span class="string">'男'</span>, <span class="number">43.0</span>, <span class="string">'北京'</span>, <span class="number">13265498700.0</span>, <span class="string">'Jianguo@126.com'</span>, <span class="string">'儿女双全'</span>]</span><br><span class="line">[<span class="string">'大胖'</span>, <span class="string">'男'</span>, <span class="number">18.0</span>, <span class="string">'甘肃'</span>, <span class="number">12435698700.0</span>, <span class="string">'Dapang@110.com'</span>, <span class="string">''</span>]</span><br><span class="line">[<span class="string">'信息表 2'</span>, <span class="string">''</span>, <span class="string">''</span>, <span class="string">''</span>, <span class="string">''</span>, <span class="string">''</span>, <span class="string">''</span>]</span><br><span class="line">[<span class="string">'姓名'</span>, <span class="string">'性别'</span>, <span class="string">'年龄'</span>, <span class="string">'籍贯'</span>, <span class="string">'手机'</span>, <span class="string">'邮箱'</span>, <span class="string">'备注'</span>]</span><br><span class="line">[<span class="string">'三凤'</span>, <span class="string">'女'</span>, <span class="number">28.0</span>, <span class="string">'河南'</span>, <span class="number">12388678900.0</span>, <span class="string">'sanfeng@163.com'</span>, <span class="string">''</span>]</span><br><span class="line">[<span class="string">'王聪'</span>, <span class="string">'男'</span>, <span class="number">31.0</span>, <span class="string">'浙江'</span>, <span class="number">13266498700.0</span>, <span class="string">'Wangcong@119.com'</span>, <span class="string">''</span>]</span><br><span class="line">[<span class="string">'Lilei'</span>, <span class="string">'男'</span>, <span class="number">22.0</span>, <span class="string">'Australia'</span>, <span class="number">12499998700.0</span>, <span class="string">'Lilei@130.com'</span>, <span class="string">'英语流利'</span>]</span><br></pre></td></tr></table></figure>
<h4 id="获取工作表列信息"><a href="#获取工作表列信息" class="headerlink" title="获取工作表列信息"></a>获取工作表列信息</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 获取工作表列信息</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(info_sheet_1.ncols):</span><br><span class="line">    print(info_sheet_1.col_values(i))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(info_sheet_2.ncols):</span><br><span class="line">    print(info_sheet_2.col_values(i))</span><br><span class="line">    </span><br><span class="line">&gt;&gt;&gt;[<span class="string">'信息表 1'</span>, <span class="string">'姓名'</span>, <span class="string">'淑芬'</span>, <span class="string">'建国'</span>, <span class="string">'大胖'</span>]</span><br><span class="line">[<span class="string">''</span>, <span class="string">'性别'</span>, <span class="string">'女'</span>, <span class="string">'男'</span>, <span class="string">'男'</span>]</span><br><span class="line">[<span class="string">''</span>, <span class="string">'年龄'</span>, <span class="number">32.0</span>, <span class="number">43.0</span>, <span class="number">18.0</span>]</span><br><span class="line">[<span class="string">''</span>, <span class="string">'籍贯'</span>, <span class="string">'山东'</span>, <span class="string">'北京'</span>, <span class="string">'甘肃'</span>]</span><br><span class="line">[<span class="string">''</span>, <span class="string">'手机'</span>, <span class="number">12345678900.0</span>, <span class="number">13265498700.0</span>, <span class="number">12435698700.0</span>]</span><br><span class="line">[<span class="string">''</span>, <span class="string">'邮箱'</span>, <span class="string">'Shufen@163.com'</span>, <span class="string">'Jianguo@126.com'</span>, <span class="string">'Dapang@110.com'</span>]</span><br><span class="line">[<span class="string">''</span>, <span class="string">'备注'</span>, <span class="string">'爱好读书'</span>, <span class="string">'儿女双全'</span>, <span class="string">''</span>]</span><br><span class="line">[<span class="string">'信息表 2'</span>, <span class="string">'姓名'</span>, <span class="string">'三凤'</span>, <span class="string">'王聪'</span>, <span class="string">'Lilei'</span>]</span><br><span class="line">[<span class="string">''</span>, <span class="string">'性别'</span>, <span class="string">'女'</span>, <span class="string">'男'</span>, <span class="string">'男'</span>]</span><br><span class="line">[<span class="string">''</span>, <span class="string">'年龄'</span>, <span class="number">28.0</span>, <span class="number">31.0</span>, <span class="number">22.0</span>]</span><br><span class="line">[<span class="string">''</span>, <span class="string">'籍贯'</span>, <span class="string">'河南'</span>, <span class="string">'浙江'</span>, <span class="string">'Australia'</span>]</span><br><span class="line">[<span class="string">''</span>, <span class="string">'手机'</span>, <span class="number">12388678900.0</span>, <span class="number">13266498700.0</span>, <span class="number">12499998700.0</span>]</span><br><span class="line">[<span class="string">''</span>, <span class="string">'邮箱'</span>, <span class="string">'sanfeng@163.com'</span>, <span class="string">'Wangcong@119.com'</span>, <span class="string">'Lilei@130.com'</span>]</span><br><span class="line">[<span class="string">''</span>, <span class="string">'备注'</span>, <span class="string">''</span>, <span class="string">''</span>, <span class="string">'英语流利'</span>]</span><br></pre></td></tr></table></figure>

<h4 id="获取工作表指定位置信息"><a href="#获取工作表指定位置信息" class="headerlink" title="获取工作表指定位置信息"></a>获取工作表指定位置信息</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 获取工作表指定位置信息</span></span><br><span class="line">print(info_sheet_1.cell(<span class="number">2</span>,<span class="number">1</span>).value) </span><br><span class="line">print(info_sheet_1.cell_value(<span class="number">2</span>,<span class="number">1</span>))</span><br><span class="line">print(info_sheet_1.row(<span class="number">2</span>)[<span class="number">1</span>].value)</span><br><span class="line">print(info_sheet_1.row_values(<span class="number">2</span>)[<span class="number">1</span>])</span><br><span class="line">print(info_sheet_1.col(<span class="number">1</span>)[<span class="number">2</span>].value)</span><br><span class="line">print(info_sheet_1.col_values(<span class="number">1</span>)[<span class="number">2</span>])</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;女</span><br><span class="line">女</span><br><span class="line">女</span><br><span class="line">女</span><br><span class="line">女</span><br><span class="line">女</span><br></pre></td></tr></table></figure>

<h4 id="获取工作表中数据的类型"><a href="#获取工作表中数据的类型" class="headerlink" title="获取工作表中数据的类型"></a>获取工作表中数据的类型</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 获取工作表中数据的类型</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(info_sheet_1.ncols):</span><br><span class="line">    print(info_sheet_1.cell(<span class="number">2</span>,i).ctype) </span><br><span class="line">    </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">1</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p># 说明：ctype : 0 empty,1 string, 2 number, 3 date, 4 boolean, 5 error</p>
</blockquote>
<h4 id="获取合并单元格信息"><a href="#获取合并单元格信息" class="headerlink" title="获取合并单元格信息"></a>获取合并单元格信息</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 获取合并单元格信息</span></span><br><span class="line">print(info_sheet_1.merged_cells)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[(<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">7</span>)]</span><br></pre></td></tr></table></figure>

<blockquote>
<p>这返回的四个数字定位了一组合并单元格操作，如果把四个数表示为(A,B,C,D)，可以这样理解：</p>
<ul>
<li>合并单元格的起始（左上角）单元格（在合并区域内）坐标为[A,C]</li>
<li>合并单元格的结束（右下角）单元格（在合并区域外）坐标为[B,D]</li>
</ul>
</blockquote>
<h2 id="xlwt"><a href="#xlwt" class="headerlink" title="xlwt"></a>xlwt</h2><h3 id="建立xlwt对象"><a href="#建立xlwt对象" class="headerlink" title="建立xlwt对象"></a>建立xlwt对象</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> xlwt</span><br><span class="line"></span><br><span class="line"><span class="comment">## 建立xlwt对象</span></span><br><span class="line">wb = xlwt.Workbook()</span><br></pre></td></tr></table></figure>

<h3 id="建立工作表"><a href="#建立工作表" class="headerlink" title="建立工作表"></a>建立工作表</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 建立工作表</span></span><br><span class="line">test_sheet_1 = xlsx_writer.add_sheet(<span class="string">'Test Sheet 1'</span>) </span><br><span class="line">test_sheet_2 = xlsx_writer.add_sheet(<span class="string">'Test Sheet 2'</span>) </span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    xlsx_writer.save(<span class="string">'write_test.xlsx'</span>)   <span class="comment"># 保存xlsx</span></span><br><span class="line">    xlsx_writer.save(<span class="string">'write_test.xls'</span>)   <span class="comment"># 保存xls</span></span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> err:</span><br><span class="line">    print(err)</span><br></pre></td></tr></table></figure>

<img src="/2020/02/25/python/python_xlrd_xlwt/python-xlrd-xlwt/write1.png" class="" title="建立工作表">

<h3 id="向数据表写入内容"><a href="#向数据表写入内容" class="headerlink" title="向数据表写入内容"></a>向数据表写入内容</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 向数据表写入内容</span></span><br><span class="line">test_sheet_1.write(<span class="number">1</span>,<span class="number">1</span>,<span class="number">123</span>)</span><br><span class="line">test_sheet_1.write(<span class="number">1</span>,<span class="number">2</span>,<span class="number">110</span>)</span><br><span class="line">test_sheet_1.write(<span class="number">1</span>,<span class="number">3</span>,xlwt.Formula(<span class="string">"B2+C2"</span>))</span><br><span class="line">test_sheet_1.write(<span class="number">1</span>,<span class="number">4</span>,<span class="string">'test'</span>)</span><br><span class="line">test_sheet_1.write(<span class="number">1</span>,<span class="number">5</span>,<span class="literal">True</span>)</span><br><span class="line">test_sheet_2.write(<span class="number">3</span>,<span class="number">3</span>,xlwt.Formula(<span class="string">"'&#123;&#125;'!$B$2+'&#123;&#125;'!$D$2"</span>.format(test_sheet_1.name,test_sheet_1.name)))</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    xlsx_writer.save(<span class="string">'write_test.xlsx'</span>)   <span class="comment"># 保存xlsx</span></span><br><span class="line">    xlsx_writer.save(<span class="string">'write_test.xls'</span>)   <span class="comment"># 保存xls</span></span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> err:</span><br><span class="line">    print(err)</span><br></pre></td></tr></table></figure>

<img src="/2020/02/25/python/python_xlrd_xlwt/python-xlrd-xlwt/write2.png" class="" title="表格1">

<img src="/2020/02/25/python/python_xlrd_xlwt/python-xlrd-xlwt/write3.png" class="" title="表格2">

<h3 id="设置列宽、行高"><a href="#设置列宽、行高" class="headerlink" title="设置列宽、行高"></a>设置列宽、行高</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 设置列宽、行高</span></span><br><span class="line">test_sheet_1.col(<span class="number">0</span>).width = <span class="number">400</span>*<span class="number">30</span> </span><br><span class="line">test_sheet_1.row(<span class="number">0</span>).height = <span class="number">1000</span> </span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    xlsx_writer.save(<span class="string">'write_test.xlsx'</span>)   <span class="comment"># 保存xlsx</span></span><br><span class="line">    xlsx_writer.save(<span class="string">'write_test.xls'</span>)   <span class="comment"># 保存xls</span></span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> err:</span><br><span class="line">    print(err)</span><br></pre></td></tr></table></figure>

<img src="/2020/02/25/python/python_xlrd_xlwt/python-xlrd-xlwt/write4.png" class="" title="表格宽高">

<h3 id="设置内容样式"><a href="#设置内容样式" class="headerlink" title="设置内容样式"></a>设置内容样式</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 初始化样式</span></span><br><span class="line">style = xlwt.XFStyle()  <span class="comment"># 样式类实例</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 创建字体</span></span><br><span class="line">font = xlwt.Font() <span class="comment"># 字体类实例</span></span><br><span class="line">font.name = <span class="string">'Times New Roman'</span> <span class="comment"># 字体名称</span></span><br><span class="line">font.bold = <span class="literal">True</span> <span class="comment"># 加粗</span></span><br><span class="line">font.italic =<span class="literal">True</span> <span class="comment"># 倾斜</span></span><br><span class="line">font.height = <span class="number">300</span> <span class="comment"># 字号 200 为 10 points</span></span><br><span class="line">font.colour_index=<span class="number">3</span> <span class="comment"># 颜色编码</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 创建边框</span></span><br><span class="line">borders= xlwt.Borders() <span class="comment"># 边框类实例</span></span><br><span class="line">borders.left= <span class="number">6</span></span><br><span class="line">borders.right= <span class="number">6</span></span><br><span class="line">borders.top= <span class="number">6</span></span><br><span class="line">borders.bottom= <span class="number">6</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 创建对齐</span></span><br><span class="line">alignment = xlwt.Alignment() <span class="comment"># 对齐类实例</span></span><br><span class="line"><span class="comment">#alignment.horz = xlwt.Alignment.HORZ_LEFT    # 水平左对齐</span></span><br><span class="line"><span class="comment">#alignment.horz = xlwt.Alignment.HORZ_RIGHT     # 水平右对齐</span></span><br><span class="line">alignment.horz = xlwt.Alignment.HORZ_CENTER      <span class="comment"># 水平居中 </span></span><br><span class="line"><span class="comment">#alignment.vert = xlwt.Alignment.VERT_TOP  # 垂直靠上</span></span><br><span class="line"><span class="comment">#alignment.vert = xlwt.Alignment.VERT_BOTTOM  # 垂直靠下</span></span><br><span class="line">alignment.vert = xlwt.Alignment.VERT_CENTER      <span class="comment"># 垂直居中 </span></span><br><span class="line">alignment.wrap = <span class="number">1</span>      <span class="comment"># 自动换行</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 创建模式</span></span><br><span class="line">pattern = xlwt.Pattern() <span class="comment"># 模式类实例</span></span><br><span class="line">pattern.pattern = xlwt.Pattern.SOLID_PATTERN <span class="comment"># 固定的样式</span></span><br><span class="line">pattern.pattern_fore_colour = xlwt.Style.colour_map[<span class="string">'yellow'</span>] <span class="comment"># 背景颜色</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 应用样式</span></span><br><span class="line">style.font = font</span><br><span class="line">style.borders = borders</span><br><span class="line">style.num_format_str = <span class="string">'#,##0.0000'</span> <span class="comment"># 内容格式</span></span><br><span class="line">style.alignment = alignment</span><br><span class="line">style.pattern=pattern</span><br><span class="line"></span><br><span class="line"><span class="comment">## 合并单元格(A,B,C,D) 表示合并左上角[A,C]和右下角[B,D]单元格坐标(均在合并单元格内部)</span></span><br><span class="line">test_sheet_1.write_merge(<span class="number">3</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="string">' Merge '</span>,style) <span class="comment"># ' Merge ' 为写入内容，应用 style 样式</span></span><br><span class="line"></span><br><span class="line">test_sheet_1.write(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1234567.890123</span>,style) <span class="comment"># 向[0,0]坐标单元格写入数据，应用style样式</span></span><br><span class="line"></span><br><span class="line">style.num_format_str = <span class="string">'#,##0.000%'</span> <span class="comment"># 内容格式</span></span><br><span class="line">test_sheet_1.write(<span class="number">6</span>, <span class="number">0</span>, <span class="number">67.8123456</span>,style) <span class="comment"># 整数部分用逗号分隔，小数部分保留3位小数并以百分数表示</span></span><br><span class="line"></span><br><span class="line">style.num_format_str = <span class="string">'###%'</span> <span class="comment"># 内容格式</span></span><br><span class="line">test_sheet_1.write(<span class="number">6</span>, <span class="number">5</span>, <span class="number">0.128</span>,style) </span><br><span class="line"></span><br><span class="line">style.num_format_str = <span class="string">'###.##%'</span> <span class="comment"># 内容格式</span></span><br><span class="line">test_sheet_1.write(<span class="number">6</span>, <span class="number">4</span>, <span class="number">0.128</span>,style) </span><br><span class="line"></span><br><span class="line">style.num_format_str = <span class="string">'000.00%'</span> <span class="comment"># 内容格式</span></span><br><span class="line">test_sheet_1.write(<span class="number">6</span>, <span class="number">3</span>, <span class="number">0.128</span>,style) </span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    xlsx_writer.save(<span class="string">'write_test.xlsx'</span>)   <span class="comment"># 保存xlsx</span></span><br><span class="line">    xlsx_writer.save(<span class="string">'write_test.xls'</span>)   <span class="comment"># 保存xls</span></span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> err:</span><br><span class="line">    print(err)</span><br></pre></td></tr></table></figure>

<img src="/2020/02/25/python/python_xlrd_xlwt/python-xlrd-xlwt/write5.png" class="" title="设置内容样式">

<h2 id="获取源码"><a href="#获取源码" class="headerlink" title="获取源码"></a>获取源码</h2><blockquote>
<p>文中测试环境与所有源码可在<a href="https://github.com/zywvvd/Python_Practise" target="_blank" rel="noopener">Github</a>下载。</p>
</blockquote>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Excel</tag>
      </tags>
  </entry>
  <entry>
    <title>Python - 获取文件夹内所有文件</title>
    <url>/2020/02/25/python/file_list/python-file-list/</url>
    <content><![CDATA[<blockquote>
<p>本文记录Python 获取指定文件夹内所有文件的方法。</p>
</blockquote>
<a id="more"></a>

<h2 id="测试环境"><a href="#测试环境" class="headerlink" title="测试环境"></a>测试环境</h2><blockquote>
<p>新建了3个文件夹和11个文件</p>
</blockquote>
<img src="/2020/02/25/python/file_list/python-file-list/ceshihuanjing.png" class="" title="测试环境">

<h2 id="glob"><a href="#glob" class="headerlink" title="glob"></a>glob</h2><blockquote>
<p>glob模块可以返回指定路径（可绝对/可相对）下的符合制定匹配模式的文件路径。</p>
<ul>
<li><code>*</code> ： 匹配0或多个任意字符</li>
<li><code>?</code>： 匹配单个字符</li>
<li><code>[]</code>： 匹配范围内的字符（如<code>[a-d]</code>匹配a,b,c,d）</li>
</ul>
</blockquote>
<h3 id="glob-glob"><a href="#glob-glob" class="headerlink" title="glob.glob"></a>glob.glob</h3><blockquote>
<p> 返回所有匹配文件路径列表，参数为pathname，该参数中定义路径匹配规则。</p>
</blockquote>
<p>用例1</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> glob</span><br><span class="line">file_path=<span class="string">'*'</span></span><br><span class="line">print(glob.glob(file_path))</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[<span class="string">'3'</span>, <span class="string">'a'</span>, <span class="string">'3b'</span>, <span class="string">'b'</span>, <span class="string">'1'</span>, <span class="string">'2b'</span>, <span class="string">'2a'</span>, <span class="string">'1a'</span>, <span class="string">'2'</span>, <span class="string">'3a'</span>, <span class="string">'glob_test.py'</span>, <span class="string">'1b'</span>]</span><br></pre></td></tr></table></figure>

<p>用例2</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> glob</span><br><span class="line">file_path=<span class="string">'*[0-9]'</span></span><br><span class="line">print(glob.glob(file_path))</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[<span class="string">'3'</span>, <span class="string">'d2'</span>, <span class="string">'1'</span>, <span class="string">'2'</span>, <span class="string">'d3'</span>, <span class="string">'d1'</span>]</span><br></pre></td></tr></table></figure>

<p>用例3</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> glob</span><br><span class="line">file_path=<span class="string">'?'</span></span><br><span class="line">print(glob.glob(file_path))</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[<span class="string">'3'</span>, <span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'1'</span>, <span class="string">'2'</span>]</span><br></pre></td></tr></table></figure>

<p>用例4</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> glob</span><br><span class="line">file_path=<span class="string">'*b'</span></span><br><span class="line">print(glob.glob(file_path))</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[<span class="string">'3b'</span>, <span class="string">'b'</span>, <span class="string">'2b'</span>, <span class="string">'1b'</span>]</span><br></pre></td></tr></table></figure>

<h3 id="glob-iglob"><a href="#glob-iglob" class="headerlink" title="glob.iglob"></a>glob.iglob</h3><blockquote>
<p>iglob返回<em>generator</em>对象，每次调用返回一个路径。</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> glob</span><br><span class="line">file_path=<span class="string">'*'</span></span><br><span class="line">generator=glob.iglob(file_path)</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> generator:</span><br><span class="line">    print(item)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">3</span></span><br><span class="line">a</span><br><span class="line"><span class="number">3</span>b</span><br><span class="line">d2</span><br><span class="line">b</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span>b</span><br><span class="line"><span class="number">2</span>a</span><br><span class="line"><span class="number">1</span>a</span><br><span class="line"><span class="number">2</span></span><br><span class="line">d3</span><br><span class="line"><span class="number">3</span>a</span><br><span class="line">glob_test.py</span><br><span class="line">d1</span><br><span class="line"><span class="number">1</span>b</span><br></pre></td></tr></table></figure>

<h2 id="OS"><a href="#OS" class="headerlink" title="OS"></a>OS</h2><blockquote>
<p>glob方便好用，但是从上述用例输出可以看出glob难以区分文件夹和文件，只识别名称，虽然绝大多数情况文件有后缀，为以往万一，在此补充OS返回指定文件夹下文件名的方法。</p>
</blockquote>
<h3 id="OS-walk"><a href="#OS-walk" class="headerlink" title="OS.walk"></a>OS.walk</h3><blockquote>
<p>OS.walk(filepath) 返回指定目录下所有目录、文件、子目录下的目录、文件。</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">filePath = <span class="string">'.'</span></span><br><span class="line"><span class="keyword">for</span> i,j,k <span class="keyword">in</span> os.walk(filePath):</span><br><span class="line">    print(i,j,k)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>. [<span class="string">'d2'</span>, <span class="string">'d3'</span>, <span class="string">'d1'</span>] [<span class="string">'3'</span>, <span class="string">'a'</span>, <span class="string">'3b'</span>, <span class="string">'b'</span>, <span class="string">'1'</span>, <span class="string">'2b'</span>, <span class="string">'2a'</span>, <span class="string">'1a'</span>, <span class="string">'2'</span>, <span class="string">'3a'</span>, <span class="string">'glob_test.py'</span>, <span class="string">'1b'</span>]</span><br><span class="line">./d2 [] []</span><br><span class="line">./d3 [] []</span><br><span class="line">./d1 [] []</span><br></pre></td></tr></table></figure>

<blockquote>
<ul>
<li>i：父目录路径</li>
<li>j：父目录内文件夹</li>
<li>k：父目录内文件</li>
</ul>
</blockquote>
<h3 id="os-listdir"><a href="#os-listdir" class="headerlink" title="os.listdir"></a>os.listdir</h3><blockquote>
<p>os.listdir(filepath)和glob.glob(‘*’)效果类似，返回文件夹下所有文件与文件夹名。</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">filePath = <span class="string">'.'</span>    </span><br><span class="line">print(os.listdir(filePath))</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[<span class="string">'3'</span>, <span class="string">'a'</span>, <span class="string">'3b'</span>, <span class="string">'d2'</span>, <span class="string">'b'</span>, <span class="string">'1'</span>, <span class="string">'2b'</span>, <span class="string">'2a'</span>, <span class="string">'1a'</span>, <span class="string">'2'</span>, <span class="string">'d3'</span>, <span class="string">'3a'</span>, <span class="string">'glob_test.py'</span>, <span class="string">'d1'</span>, <span class="string">'1b'</span>]</span><br></pre></td></tr></table></figure>

<h2 id="获取源码"><a href="#获取源码" class="headerlink" title="获取源码"></a>获取源码</h2><blockquote>
<p>文中测试环境与所有源码可在<a href="https://github.com/zywvvd/Python_Practise" target="_blank" rel="noopener">Github</a>下载。</p>
</blockquote>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>文件处理</tag>
      </tags>
  </entry>
  <entry>
    <title>Python - DOM操作XML技巧汇总</title>
    <url>/2020/02/24/python/processing_xml/python-xml/</url>
    <content><![CDATA[<blockquote>
<p>XML已经成为数据传输存储使用越来越广泛的数据格式，本文讲述使用Python DOM处理XML文件的方法。</p>
</blockquote>
<a id="more"></a>

<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul>
<li>安装Python</li>
<li><a href="https://www.zywvvd.com/zywvvd.github.io/2020/02/24/course/words/XML/xml-教程/">XML基础知识</a></li>
</ul>
<h2 id="Python常用处理XML库"><a href="#Python常用处理XML库" class="headerlink" title="Python常用处理XML库"></a>Python常用处理XML库</h2><blockquote>
<p> 常见的 XML 编程接口有 DOM 和 SAX，这两种接口处理 XML 文件的方式不同，当然使用场合也不同。Python 有三种方法解析 XML，SAX，DOM，以及 ElementTree:</p>
</blockquote>
<h3 id="DOM-Document-Object-Model-本文介绍"><a href="#DOM-Document-Object-Model-本文介绍" class="headerlink" title="DOM(Document Object Model) - 本文介绍"></a>DOM(Document Object Model) - 本文介绍</h3><p>DOM (Document Object Model) 译为文档对象模型，是 HTML 和 XML 文档的编程接口。HTML DOM 定义了访问和操作 HTML 文档的标准方法。将 XML 数据在内存中解析成一个树，通过对树的操作来操作XML。</p>
<h3 id="SAX-simple-API-for-XML"><a href="#SAX-simple-API-for-XML" class="headerlink" title="SAX (simple API for XML )"></a>SAX (simple API for XML )</h3><p>Python 标准库包含 SAX 解析器，SAX 用事件驱动模型，通过在解析XML的过程中触发一个个的事件并调用用户定义的回调函数来处理XML文件。</p>
<h3 id="ElementTree-元素树"><a href="#ElementTree-元素树" class="headerlink" title="ElementTree(元素树)"></a>ElementTree(元素树)</h3><p>ElementTree就像一个轻量级的DOM，具有方便友好的API。代码可用性好，速度快，消耗内存少。</p>
<h2 id="测试用例"><a href="#测试用例" class="headerlink" title="测试用例"></a>测试用例</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="comment">&lt;!--file name "test.xml" 2020.2.24 by VVD--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bookstore</span> <span class="attr">type</span>=<span class="string">"info science"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">	<span class="tag">&lt;<span class="name">book</span> <span class="attr">category</span>=<span class="string">"Coding"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>C++Primer<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">author</span>&gt;</span>StanleyB.Lippman<span class="tag">&lt;/<span class="name">author</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">price</span>&gt;</span>60.0<span class="tag">&lt;/<span class="name">price</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">year</span>&gt;</span>2009<span class="tag">&lt;/<span class="name">year</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">book</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">book</span> <span class="attr">category</span>=<span class="string">"Computer"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>编译原理<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">author</span>&gt;</span>AlfredV.Aho<span class="tag">&lt;/<span class="name">author</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">price</span>&gt;</span>70.0<span class="tag">&lt;/<span class="name">price</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">year</span>&gt;</span>2013<span class="tag">&lt;/<span class="name">year</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">book</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">bookstore</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="Python-DOM-解析XML"><a href="#Python-DOM-解析XML" class="headerlink" title="Python DOM 解析XML"></a>Python DOM 解析XML</h2><h3 id="DOM节点树"><a href="#DOM节点树" class="headerlink" title="DOM节点树"></a>DOM节点树</h3><blockquote>
<p>一个 DOM 的解析器在解析一个 XML 文档时，一次性读取整个文档，把文档中所有元素保存在内存中的一个树结构里。</p>
</blockquote>
<img src="/2020/02/24/python/processing_xml/python-xml/nodetree.gif" class="" title="节点示例">

<h4 id="节点级别"><a href="#节点级别" class="headerlink" title="节点级别"></a>节点级别</h4><blockquote>
<p>节点树中的节点彼此之间都有等级关系。</p>
</blockquote>
<ul>
<li>在节点树中，顶端的节点成为根节点</li>
<li>根节点之外的每个节点都有一个父节点</li>
<li>节点可以有任何数量的子节点</li>
<li>叶子是没有子节点的节点</li>
<li>同级节点是拥有相同父节点的节点</li>
</ul>
<h3 id="解析XML"><a href="#解析XML" class="headerlink" title="解析XML"></a>解析XML</h3><blockquote>
<p>python 加载DOM解析XML，并输出整个XML</p>
</blockquote>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment">#加载DOM minidom模块</span></span><br><span class="line"><span class="keyword">from</span> xml.dom.minidom <span class="keyword">import</span> parse</span><br><span class="line"></span><br><span class="line"><span class="comment">#解析XML文件</span></span><br><span class="line">contents=parse(<span class="string">'test.xml'</span>)</span><br><span class="line">root=contents.documentElement</span><br><span class="line"></span><br><span class="line">print(root.toxml())</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;&lt;bookstore type=<span class="string">"info science"</span>&gt;</span><br><span class="line"></span><br><span class="line">	&lt;book category=<span class="string">"Coding"</span>&gt;</span><br><span class="line">		&lt;title&gt;C++Primer&lt;/title&gt;</span><br><span class="line">		&lt;author&gt;StanleyB.Lippman&lt;/author&gt;</span><br><span class="line">		&lt;price&gt;60.0&lt;/price&gt;</span><br><span class="line">        &lt;year&gt;2009&lt;/year&gt;</span><br><span class="line">	&lt;/book&gt;</span><br><span class="line"></span><br><span class="line">	&lt;book category=<span class="string">"Computer"</span>&gt;</span><br><span class="line">		&lt;title&gt;编译原理&lt;/title&gt;</span><br><span class="line">		&lt;author&gt;AlfredV.Aho&lt;/author&gt;</span><br><span class="line">		&lt;price&gt;70.0&lt;/price&gt;</span><br><span class="line">        &lt;year&gt;2013&lt;/year&gt;</span><br><span class="line">	&lt;/book&gt;</span><br><span class="line"></span><br><span class="line">&lt;/bookstore&gt;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>此时root获取了XML文件中所有内容，组织成了一棵树，root就是该树的根节点</p>
</blockquote>
<h3 id="获取节点名称"><a href="#获取节点名称" class="headerlink" title="获取节点名称"></a>获取节点名称</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#获取节点名称</span></span><br><span class="line">print(root.nodeName)</span><br><span class="line">print(root.tagName)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>bookstore</span><br><span class="line">bookstore</span><br></pre></td></tr></table></figure>

<h3 id="获取子节点"><a href="#获取子节点" class="headerlink" title="获取子节点"></a>获取子节点</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment">#获取子节点</span></span><br><span class="line">children_Nodes=root.childNodes</span><br><span class="line">print(<span class="string">f'子节点个数：<span class="subst">&#123;children_Nodes.length&#125;</span>'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> children_Nodes:</span><br><span class="line">    <span class="keyword">print</span> (item.toxml())</span><br><span class="line">    </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>子节点个数：<span class="number">5</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	</span><br><span class="line">&lt;book category=<span class="string">"Coding"</span>&gt;</span><br><span class="line">		&lt;title&gt;C++Primer&lt;/title&gt;</span><br><span class="line">		&lt;author&gt;StanleyB.Lippman&lt;/author&gt;</span><br><span class="line">		&lt;price&gt;60.0&lt;/price&gt;</span><br><span class="line">        &lt;year&gt;2009&lt;/year&gt;</span><br><span class="line">	&lt;/book&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	</span><br><span class="line">&lt;book category=<span class="string">"Computer"</span>&gt;</span><br><span class="line">		&lt;title&gt;编译原理&lt;/title&gt;</span><br><span class="line">		&lt;author&gt;AlfredV.Aho&lt;/author&gt;</span><br><span class="line">		&lt;price&gt;70.0&lt;/price&gt;</span><br><span class="line">        &lt;year&gt;2013&lt;/year&gt;</span><br><span class="line">	&lt;/book&gt;</span><br></pre></td></tr></table></figure>

<h3 id="节点类型"><a href="#节点类型" class="headerlink" title="节点类型"></a>节点类型</h3><blockquote>
<p>为什么2本书却有5个节点？</p>
<p>因为两本书前中后各有一个回车，被划为文本节点。</p>
<p>DOM规定节点：</p>
<ol>
<li>整个文档是一个文档节点</li>
<li>每个 XML 标签是一个元素节点</li>
<li>包含在 XML 元素中的文本是文本节点</li>
<li>每一个 XML 属性是一个属性节点</li>
<li>注释属于注释节点</li>
</ol>
</blockquote>
<img src="/2020/02/24/python/processing_xml/python-xml/leixing.png" class="" title="节点类型">

<h4 id="文本总是存储在文本节点中"><a href="#文本总是存储在文本节点中" class="headerlink" title="文本总是存储在文本节点中"></a>文本总是存储在文本节点中</h4><blockquote>
<p> 在 DOM 处理中一个普遍的错误是，认为元素节点包含文本。</p>
<p> 不过，元素节点的文本是存储在文本节点中的。</p>
<p> 在这个例子中：<code>&lt;year&gt;2005&lt;/year&gt;</code>，元素节点 <code>&lt;year&gt;</code>，拥有一个值为 “2005” 的文本节点。</p>
<p> “2005” 不是 <code>&lt;year&gt;</code> 元素的值！d</p>
</blockquote>
<h3 id="获取节点属性"><a href="#获取节点属性" class="headerlink" title="获取节点属性"></a>获取节点属性</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#获取节点属性</span></span><br><span class="line">print(root.attributes.items())</span><br><span class="line">atr_root=root.attributes[<span class="string">'type'</span>]</span><br><span class="line">print(atr_root.name)</span><br><span class="line">print(atr_root.value)</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;[(<span class="string">'type'</span>, <span class="string">'info science'</span>)]</span><br><span class="line">type</span><br><span class="line">info science</span><br></pre></td></tr></table></figure>

<h3 id="获取指定名称的节点"><a href="#获取指定名称的节点" class="headerlink" title="获取指定名称的节点"></a>获取指定名称的节点</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#获取指定名称的节点</span></span><br><span class="line">books=root.getElementsByTagName(<span class="string">'book'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> book <span class="keyword">in</span> books:</span><br><span class="line">    <span class="keyword">print</span> (book.nodeName)</span><br><span class="line">    </span><br><span class="line">&gt;&gt;&gt;book</span><br><span class="line">book</span><br></pre></td></tr></table></figure>

<h3 id="判断是否包含属性值"><a href="#判断是否包含属性值" class="headerlink" title="判断是否包含属性值"></a>判断是否包含属性值</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#判断是否包含属性值</span></span><br><span class="line">print(books[<span class="number">0</span>].hasAttribute(<span class="string">'nnn'</span>))</span><br><span class="line">print(books[<span class="number">0</span>].hasAttribute(<span class="string">'category'</span>))</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;<span class="literal">False</span></span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure>

<h3 id="获取节点指定属性的属性值"><a href="#获取节点指定属性的属性值" class="headerlink" title="获取节点指定属性的属性值"></a>获取节点指定属性的属性值</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#获取节点指定属性的属性值</span></span><br><span class="line">print(books[<span class="number">0</span>].getAttribute(<span class="string">'category'</span>))</span><br><span class="line">print(books[<span class="number">1</span>].getAttribute(<span class="string">'category'</span>))</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;Coding</span><br><span class="line">Computer</span><br></pre></td></tr></table></figure>

<h3 id="获取节点文本值"><a href="#获取节点文本值" class="headerlink" title="获取节点文本值"></a>获取节点文本值</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#获取节点文本值</span></span><br><span class="line">node=books[<span class="number">0</span>]</span><br><span class="line">author=node.getElementsByTagName(<span class="string">'author'</span>)</span><br><span class="line">print(author[<span class="number">0</span>].firstChild.data)</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;StanleyB.Lippman</span><br></pre></td></tr></table></figure>

<h3 id="判断是否有子节点"><a href="#判断是否有子节点" class="headerlink" title="判断是否有子节点"></a>判断是否有子节点</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#判断是否有子节点</span></span><br><span class="line">print(root.hasChildNodes())</span><br><span class="line">print(author[<span class="number">0</span>].hasChildNodes())</span><br><span class="line">print(author[<span class="number">0</span>].firstChild.hasChildNodes())</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;<span class="literal">True</span></span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="literal">False</span></span><br></pre></td></tr></table></figure>

<h3 id="DOM解析XML方法总结"><a href="#DOM解析XML方法总结" class="headerlink" title="DOM解析XML方法总结"></a>DOM解析XML方法总结</h3><ul>
<li>contents = xml.dom.minidom.parse(filename)：加载读取XML文件</li>
<li>node = contents.documentElement：获取XML文档对象</li>
<li>node.getAttribute(AttributeName)：获取XML节点属性值</li>
<li>node.getElementsByTagName(TagName)：获取XML节点对象集合</li>
<li>node.childNodes ：返回子节点列表。</li>
<li>node.childNodes[index].nodeValue：获取XML节点值</li>
<li>node.firstChild：访问第一个节点，等价于pagexml.childNodes[0]</li>
<li>node.toxml(‘UTF-8’)返回Node节点的xml表示的文本：</li>
<li>访问元素属性：<br>atr=Node.attributes[“id”]<br>atr.name # “id”<br>atr.value #属性的值</li>
<li>node.nodeName/node.tagName：节点的名称</li>
<li>node.nodeValue：节点的值，文本节点才有值，其它节点返回的是None</li>
<li>node.nodeType：节点的类型</li>
</ul>
<h2 id="Python-DOM-修改XML"><a href="#Python-DOM-修改XML" class="headerlink" title="Python DOM 修改XML"></a>Python DOM 修改XML</h2><h3 id="生成XML树、添加属性"><a href="#生成XML树、添加属性" class="headerlink" title="生成XML树、添加属性"></a>生成XML树、添加属性</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> xml.dom <span class="keyword">import</span> minidom</span><br><span class="line"></span><br><span class="line"><span class="comment">#1.创建DOM树对象</span></span><br><span class="line">dom=minidom.Document()</span><br><span class="line"><span class="comment"># 2.创建根节点。每次都要用DOM对象来创建任何节点。</span></span><br><span class="line">root_node=dom.createElement(<span class="string">'root'</span>)</span><br><span class="line"><span class="comment"># 3.用DOM对象添加根节点</span></span><br><span class="line">dom.appendChild(root_node)</span><br><span class="line"><span class="comment"># 用DOM对象创建元素子节点</span></span><br><span class="line">book_node=dom.createElement(<span class="string">'book'</span>)</span><br><span class="line"><span class="comment"># 用父节点对象添加元素子节点</span></span><br><span class="line">root_node.appendChild(book_node)</span><br><span class="line"><span class="comment"># 设置该节点的属性</span></span><br><span class="line">book_node.setAttribute(<span class="string">'price'</span>,<span class="string">'399'</span>)</span><br><span class="line">name_node=dom.createElement(<span class="string">'name'</span>)</span><br><span class="line">book_node.appendChild(name_node)</span><br><span class="line"><span class="comment"># 也用DOM创建文本节点，把文本节点（文字内容）看成子节点</span></span><br><span class="line">name_text=dom.createTextNode(<span class="string">'C++ Primer 第1版'</span>)</span><br><span class="line"><span class="comment"># 用添加了文本的节点对象（看成文本节点的父节点）添加文本节点</span></span><br><span class="line">name_node.appendChild(name_text)</span><br><span class="line"></span><br><span class="line">print(dom.toxml()) <span class="comment">#字符格式输出</span></span><br><span class="line">print(dom.toprettyxml()) <span class="comment">#美丽的输出</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; &lt;?xml version="1.0" ?&gt;&lt;root&gt;&lt;book price="399"&gt;&lt;name&gt;C++ Primer 第1版&lt;/name&gt;&lt;/book&gt;&lt;/root&gt;</span><br><span class="line">&lt;?xml version="1.0" ?&gt;</span><br><span class="line">&lt;root&gt;</span><br><span class="line">	&lt;book price=<span class="string">"399"</span>&gt;</span><br><span class="line">		&lt;name&gt;C++ Primer 第1版&lt;/name&gt;</span><br><span class="line">	&lt;/book&gt;</span><br><span class="line">&lt;/root&gt;</span><br></pre></td></tr></table></figure>

<h3 id="删除节点"><a href="#删除节点" class="headerlink" title="删除节点"></a>删除节点</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment">#增加要删除的节点</span></span><br><span class="line">another_node=dom.createElement(<span class="string">'delete'</span>)</span><br><span class="line">another_node_child=dom.createElement(<span class="string">'content'</span>)</span><br><span class="line">another_node_child_text=dom.createTextNode(<span class="string">'testing data'</span>)</span><br><span class="line">another_node_child.appendChild(another_node_child_text)</span><br><span class="line">another_node.appendChild(another_node_child)</span><br><span class="line">root_node.appendChild(another_node)</span><br><span class="line">print(dom.toprettyxml())</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;&lt;?xml version="1.0" ?&gt;</span><br><span class="line">&lt;root&gt;</span><br><span class="line">	&lt;book price=<span class="string">"399"</span>&gt;</span><br><span class="line">		&lt;name&gt;C++ Primer 第1版&lt;/name&gt;</span><br><span class="line">	&lt;/book&gt;</span><br><span class="line">	&lt;delete&gt;</span><br><span class="line">		&lt;content&gt;testing data&lt;/content&gt;</span><br><span class="line">	&lt;/delete&gt;</span><br><span class="line">&lt;/root&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment">#删除上文增加的节点</span></span><br><span class="line">children_Nodes=root_node.childNodes</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(children_Nodes.length<span class="number">-1</span>,<span class="number">-1</span>,<span class="number">-1</span>):</span><br><span class="line">    <span class="keyword">if</span> children_Nodes[i].tagName==<span class="string">'delete'</span>:</span><br><span class="line">        children_Nodes.remove(children_Nodes[i]) <span class="comment">#删除root中的文本节点</span></span><br><span class="line"></span><br><span class="line">print(dom.toprettyxml())</span><br><span class="line">        </span><br><span class="line">&gt;&gt;&gt; &lt;?xml version="1.0" ?&gt;</span><br><span class="line">&lt;root&gt;</span><br><span class="line">	&lt;book price=<span class="string">"399"</span>&gt;</span><br><span class="line">		&lt;name&gt;C++ Primer 第1版&lt;/name&gt;</span><br><span class="line">	&lt;/book&gt;</span><br><span class="line">&lt;/root&gt;</span><br></pre></td></tr></table></figure>

<h3 id="删除节点属性"><a href="#删除节点属性" class="headerlink" title="删除节点属性"></a>删除节点属性</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#删除节点属性</span></span><br><span class="line">book_node.setAttribute(<span class="string">'price'</span>,<span class="string">'199'</span>)</span><br><span class="line">print(book_node.hasAttribute(<span class="string">'price'</span>))</span><br><span class="line">print(book_node.getAttribute(<span class="string">'price'</span>))</span><br><span class="line">book_node.removeAttribute(<span class="string">'price'</span>)</span><br><span class="line">print(book_node.hasAttribute(<span class="string">'price'</span>))</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;<span class="literal">True</span></span><br><span class="line"><span class="number">199</span></span><br><span class="line"><span class="literal">False</span></span><br></pre></td></tr></table></figure>



<h3 id="修改节点内容"><a href="#修改节点内容" class="headerlink" title="修改节点内容"></a>修改节点内容</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment">#修改节点内容</span></span><br><span class="line">children_Nodes=root_node.childNodes</span><br><span class="line">name_Append = <span class="string">' (中文版)'</span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> children_Nodes:</span><br><span class="line">    <span class="comment">#print (item.toxml())</span></span><br><span class="line">    tag_name=<span class="string">'name'</span></span><br><span class="line">    c_name = item.getElementsByTagName(tag_name)</span><br><span class="line">    print(c_name[<span class="number">0</span>].firstChild.data)</span><br><span class="line">    c_name[<span class="number">0</span>].firstChild.data+=name_Append</span><br><span class="line">print(dom.toprettyxml())</span><br><span class="line">    </span><br><span class="line">    &gt;&gt;&gt;C++ Primer 第<span class="number">1</span>版</span><br><span class="line">&lt;?xml version="1.0" ?&gt;</span><br><span class="line">&lt;root&gt;</span><br><span class="line">	&lt;book&gt;</span><br><span class="line">		&lt;name&gt;C++ Primer 第1版 (中文版)&lt;/name&gt;</span><br><span class="line">	&lt;/book&gt;</span><br><span class="line">&lt;/root&gt;</span><br></pre></td></tr></table></figure>

<h3 id="修改节点属性"><a href="#修改节点属性" class="headerlink" title="修改节点属性"></a>修改节点属性</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#修改节点属性</span></span><br><span class="line">book_node.setAttribute(<span class="string">'price'</span>,<span class="string">'199'</span>)</span><br><span class="line">print(book_node.hasAttribute(<span class="string">'price'</span>))</span><br><span class="line">print(book_node.getAttribute(<span class="string">'price'</span>))</span><br><span class="line"></span><br><span class="line">book_node.setAttribute(<span class="string">'price'</span>,<span class="string">'399'</span>)</span><br><span class="line">print(book_node.getAttribute(<span class="string">'price'</span>))</span><br><span class="line"></span><br><span class="line">book_node.setAttribute(<span class="string">'price2'</span>,<span class="string">'599'</span>)</span><br><span class="line">print(book_node.attributes.items())</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="literal">True</span></span><br><span class="line"><span class="number">199</span></span><br><span class="line"><span class="number">399</span></span><br><span class="line">[(<span class="string">'price'</span>, <span class="string">'399'</span>), (<span class="string">'price2'</span>, <span class="string">'599'</span>)]</span><br></pre></td></tr></table></figure>

<h3 id="修改节点名称-可用、不安全"><a href="#修改节点名称-可用、不安全" class="headerlink" title="修改节点名称(可用、不安全)"></a>修改节点名称(可用、不安全)</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#修改节点名称(可用、不安全)</span></span><br><span class="line">name_node=dom.createElement(<span class="string">'name'</span>)</span><br><span class="line">name_node.nodeName=<span class="string">'node name'</span></span><br><span class="line">name_node.tagName=<span class="string">'tag name'</span></span><br><span class="line">root_node.appendChild(name_node)</span><br><span class="line">print(dom.toxml())</span><br><span class="line">print(name_node.nodeName)</span><br><span class="line">print(name_node.localName)</span><br><span class="line"><span class="comment">#删掉刚刚增加的测试节点</span></span><br><span class="line">children_Nodes=root_node.childNodes</span><br><span class="line">children_Nodes.remove(children_Nodes[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;&lt;?xml version="1.0" ?&gt;&lt;root&gt;&lt;book price="399" price2="599"&gt;&lt;name&gt;C++ Primer 第1版 (中文版)&lt;/name&gt;&lt;/book&gt;&lt;tag name/&gt;&lt;/root&gt;</span><br><span class="line">node name</span><br><span class="line">tag name</span><br></pre></td></tr></table></figure>

<blockquote>
<p>可以看到，改变tagName在事实上实现了改变节点名称的效果，但nodeName并没有一并更新，使用时需要谨慎。</p>
</blockquote>
<h3 id="DOM修改XML方法总结"><a href="#DOM修改XML方法总结" class="headerlink" title="DOM修改XML方法总结"></a>DOM修改XML方法总结</h3><ul>
<li>dom=minidom.Document()  #创建DOM树对象</li>
<li>root_node=dom.createElement(‘root’) #用DOM对象创建元素节点</li>
<li>name_text=dom.createTextNode(‘计算机程序设计语言 第1版’)#用DOM对象创建文本节点</li>
<li>dom.appendChild(root_node) # 用DOM对象添加节点</li>
<li>book_node.setAttribute(‘price’,’199’) #添加节点属性（可多个），也可以用来覆盖修改原有的属性</li>
<li>children_Nodes.remove(children_Nodes[i]) #删除节点</li>
<li>book_node.removeAttribute(‘price’) #删除节点属性</li>
<li>price[0].firstChild.data=str(price_float) #直接修改文本节点完成对xml保存内容的修改</li>
<li>name_node.tagName=’tag name’ #修改节点名称</li>
</ul>
<h2 id="Python-DOM-写入XML"><a href="#Python-DOM-写入XML" class="headerlink" title="Python DOM 写入XML"></a>Python DOM 写入XML</h2><h3 id="写入XML"><a href="#写入XML" class="headerlink" title="写入XML"></a>写入XML</h3><blockquote>
<p> 语法：writexml(writer, indent=””, addindent=””, newl=””, encoding=None)</p>
</blockquote>
<ul>
<li>writer：文件对象</li>
<li>indent：根节点缩进格式（一般根节点不缩进，所以一般为空）</li>
<li>addindent：子节点缩进格式（一般为空格<code></code>或制表符<code>\t</code>）</li>
<li>newl：换行格式（一般为换行回车<code>\n</code>)</li>
<li>encoding：编码方式</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Python DOM 写入XML</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'write_test.xml'</span>,<span class="string">'w'</span>,encoding=<span class="string">'UTF-8'</span>) <span class="keyword">as</span> writer:</span><br><span class="line">    dom.writexml(writer,indent=<span class="string">''</span>,addindent=<span class="string">'    '</span>,newl=<span class="string">'\n'</span>,encoding=<span class="string">'UTF-8'</span>)</span><br></pre></td></tr></table></figure>

<p>得到xml文件<code>write_test.xml</code>：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">book</span> <span class="attr">price</span>=<span class="string">"399"</span> <span class="attr">price2</span>=<span class="string">"599"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>C++ Primer 第1版 (中文版)<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">book</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="获取源码"><a href="#获取源码" class="headerlink" title="获取源码"></a>获取源码</h2><blockquote>
<p>文中测试环境与所有源码可在<a href="https://github.com/zywvvd/Python_Practise" target="_blank" rel="noopener">Github</a>下载。</p>
</blockquote>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>XML</tag>
      </tags>
  </entry>
  <entry>
    <title>文字编码 - XML 教程</title>
    <url>/2020/02/24/words/xml/course/xml/</url>
    <content><![CDATA[<blockquote>
<p>XML 指可扩展标记语言，被设计用来传输和存储数据。本文记录XML基础知识。</p>
<p>教程参考<a href="https://www.w3school.com.cn/xml/index.asp" target="_blank" rel="noopener">w3school</a>。</p>
</blockquote>
<a id="more"></a>

<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><ul>
<li>XML 指可扩展标记语言（EXtensible Markup Language）</li>
<li>XML 是一种标记语言，很类似 HTML</li>
<li>XML 的设计宗旨是传输数据，而非显示数据</li>
<li>XML 标签没有被预定义。您需要自行定义标签</li>
<li>XML 被设计为具有自我描述性。</li>
<li>XML 是 W3C 的推荐标准</li>
<li>XML 是没有任何行为的纯文本，仅编码保存数据</li>
</ul>
<h2 id="用途"><a href="#用途" class="headerlink" title="用途"></a>用途</h2><ul>
<li>XML 把数据从 HTML 分离</li>
<li>XML 简化数据共享</li>
<li>XML 简化数据传输</li>
<li>XML 简化平台的变更</li>
</ul>
<h2 id="XML-树结构"><a href="#XML-树结构" class="headerlink" title="XML 树结构"></a>XML 树结构</h2><blockquote>
<p>XML 文档形成了一种树结构，它从“根部”开始，然后扩展到“枝叶”。</p>
</blockquote>
<ul>
<li><p>XML 文档必须包含根元素。该元素是所有其他元素的父元素</p>
</li>
<li><p>XML 文档中的元素形成了一棵文档树。这棵树从根部开始，并扩展到树的最底端</p>
</li>
<li><p>所有元素均可拥有子元素</p>
</li>
</ul>
<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bookstore</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">book</span> <span class="attr">category</span>=<span class="string">"COOKING"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span>Everyday Italian<span class="tag">&lt;/<span class="name">title</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">author</span>&gt;</span>Giada De Laurentiis<span class="tag">&lt;/<span class="name">author</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">year</span>&gt;</span>2005<span class="tag">&lt;/<span class="name">year</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">price</span>&gt;</span>30.00<span class="tag">&lt;/<span class="name">price</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">book</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">book</span> <span class="attr">category</span>=<span class="string">"CHILDREN"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span>Harry Potter<span class="tag">&lt;/<span class="name">title</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">author</span>&gt;</span>J K. Rowling<span class="tag">&lt;/<span class="name">author</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">year</span>&gt;</span>2005<span class="tag">&lt;/<span class="name">year</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">price</span>&gt;</span>29.99<span class="tag">&lt;/<span class="name">price</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">book</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">book</span> <span class="attr">category</span>=<span class="string">"WEB"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span>Learning XML<span class="tag">&lt;/<span class="name">title</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">author</span>&gt;</span>Erik T. Ray<span class="tag">&lt;/<span class="name">author</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">year</span>&gt;</span>2003<span class="tag">&lt;/<span class="name">year</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">price</span>&gt;</span>39.95<span class="tag">&lt;/<span class="name">price</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">book</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bookstore</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>这段代码表示了具有如下元素框架的三本书。</p>
</blockquote>
<img src="/2020/02/24/words/xml/course/xml/nodetree.gif" class="" title="数据结构实例">

<h2 id="语法规则"><a href="#语法规则" class="headerlink" title="语法规则"></a>语法规则</h2><ul>
<li><p>所有 XML 元素都须有关闭标签（声明不是XML元素，恰好他又不需要关闭）</p>
</li>
<li><p>XML 标签对大小写敏感，必须使用相同的大小写来编写打开标签和关闭标签：</p>
</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Message</span>&gt;</span>这是错误的。<span class="tag">&lt;/<span class="name">message</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">message</span>&gt;</span>这是正确的。<span class="tag">&lt;/<span class="name">message</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>XML 必须正确地嵌套</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">i</span>&gt;</span>错误嵌套<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">i</span>&gt;</span>正确嵌套<span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>XML 文档必须有根元素</li>
</ul>
<blockquote>
<p>XML 文档必须有一个元素是所有其他元素的父元素。该元素称为根元素。</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">child</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">subchild</span>&gt;</span>.....<span class="tag">&lt;/<span class="name">subchild</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">child</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>XML 的属性值须加引号</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">note</span> <span class="attr">date</span>=<span class="string">08/08/2008</span>&gt;</span>      <span class="comment">&lt;!-- 错误属性 --&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">note</span> <span class="attr">date</span>=<span class="string">"08/08/2008"</span>&gt;</span>      <span class="comment">&lt;!-- 正确属性 --&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">to</span>&gt;</span>George<span class="tag">&lt;/<span class="name">to</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">from</span>&gt;</span>John<span class="tag">&lt;/<span class="name">from</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">note</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>实体引用</li>
</ul>
<blockquote>
<p>在 XML 中，有 5 个预定义的实体引用：</p>
</blockquote>
<table>
<thead>
<tr>
<th>&lt;</th>
<th>&lt;</th>
<th>小于</th>
</tr>
</thead>
<tbody><tr>
<td>&gt;</td>
<td>&gt;</td>
<td>大于</td>
</tr>
<tr>
<td>&amp;</td>
<td>&amp;</td>
<td>和号</td>
</tr>
<tr>
<td>&apos;</td>
<td>‘</td>
<td>单引号</td>
</tr>
<tr>
<td>&quot;</td>
<td>“</td>
<td>引号</td>
</tr>
</tbody></table>
<ul>
<li>注释</li>
</ul>
<blockquote>
<p>语法与 HTML 的语法很相似：</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- This is a comment --&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>在 XML 中，空格会被保留</p>
</li>
<li><p>XML 以 LF 存储换行</p>
</li>
</ul>
<blockquote>
<p>在 Windows 应用程序中，换行通常以一对字符来存储：回车符 (CR) 和换行符 (LF)。这对字符与打字机设置新行的动作有相似之处。在 Unix 应用程序中，新行以 LF 字符存储。而 Macintosh 应用程序使用 CR 来存储新行。</p>
</blockquote>
<h2 id="XML-元素"><a href="#XML-元素" class="headerlink" title="XML 元素"></a>XML 元素</h2><h3 id="XML-元素-1"><a href="#XML-元素-1" class="headerlink" title="XML 元素"></a>XML 元素</h3><blockquote>
<p>XML 元素指的是从（且包括）开始标签直到（且包括）结束标签的部分。</p>
<p>元素可包含其他元素、文本或者两者的混合物。元素也可以拥有属性。</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bookstore</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">book</span> <span class="attr">category</span>=<span class="string">"CHILDREN"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Harry Potter<span class="tag">&lt;/<span class="name">title</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">author</span>&gt;</span>J K. Rowling<span class="tag">&lt;/<span class="name">author</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">year</span>&gt;</span>2005<span class="tag">&lt;/<span class="name">year</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">price</span>&gt;</span>29.99<span class="tag">&lt;/<span class="name">price</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">book</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">book</span> <span class="attr">category</span>=<span class="string">"WEB"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Learning XML<span class="tag">&lt;/<span class="name">title</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">author</span>&gt;</span>Erik T. Ray<span class="tag">&lt;/<span class="name">author</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">year</span>&gt;</span>2003<span class="tag">&lt;/<span class="name">year</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">price</span>&gt;</span>39.95<span class="tag">&lt;/<span class="name">price</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">book</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bookstore</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="XML-命名规则"><a href="#XML-命名规则" class="headerlink" title="XML 命名规则"></a>XML 命名规则</h3><ul>
<li>名称可以含字母、数字以及其他的字符</li>
<li>名称不能以数字或者标点符号开始</li>
<li>名称不能以字符 “xml”（或者 XML、Xml）开始</li>
<li>名称不能包含空格</li>
</ul>
<h3 id="最佳命名习惯"><a href="#最佳命名习惯" class="headerlink" title="最佳命名习惯"></a>最佳命名习惯</h3><ul>
<li><p>使名称具有描述性。使用下划线的名称也很不错。</p>
</li>
<li><p>名称应当比较简短，比如：<book_title>，而不是：<the_title_of_the_book>。</p>
</li>
<li><p>避免 “-“ 字符。如果您按照这样的方式进行命名：”first-name”，一些软件会认为你需要提取第一个单词。</p>
</li>
<li><p>避免 “.” 字符。如果您按照这样的方式进行命名：”first.name”，一些软件会认为 “name” 是对象 “first” 的属性。</p>
</li>
<li><p>避免 “:” 字符。冒号会被转换为命名空间来使用（稍后介绍）。</p>
</li>
</ul>
<h2 id="XML-属性"><a href="#XML-属性" class="headerlink" title="XML 属性"></a>XML 属性</h2><blockquote>
<p>XML 元素可以在开始标签中包含属性，类似 HTML。属性 (Attribute) 提供关于元素的额外（附加）信息。</p>
</blockquote>
<ul>
<li>XML 属性必须加引号，单引号和双引号均可使用。</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">person</span> <span class="attr">sex</span>=<span class="string">"female"</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>或</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">person</span> <span class="attr">sex</span>=<span class="string">'female'</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="XML-元素-vs-属性"><a href="#XML-元素-vs-属性" class="headerlink" title="XML 元素 vs. 属性"></a>XML 元素 vs. 属性</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">person</span> <span class="attr">sex</span>=<span class="string">"female"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">firstname</span>&gt;</span>Anna<span class="tag">&lt;/<span class="name">firstname</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">lastname</span>&gt;</span>Smith<span class="tag">&lt;/<span class="name">lastname</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">person</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">person</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">sex</span>&gt;</span>female<span class="tag">&lt;/<span class="name">sex</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">firstname</span>&gt;</span>Anna<span class="tag">&lt;/<span class="name">firstname</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">lastname</span>&gt;</span>Smith<span class="tag">&lt;/<span class="name">lastname</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">person</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>上述代码表示了同样的信息，也就是说XML中，属性携带的信息量可以被子元素取代。没有什么规矩可以告诉我们什么时候该使用属性，而什么时候该使用子元素。在 HTML 中，属性用起来很便利，但是在 XML 中，您应该尽量避免使用属性。如果信息感觉起来很像数据，那么请使用子元素吧。</p>
</blockquote>
<h3 id="XML属性的缺点"><a href="#XML属性的缺点" class="headerlink" title="XML属性的缺点"></a>XML属性的缺点</h3><ul>
<li>属性无法包含多重的值（元素可以）</li>
<li>属性无法描述树结构（元素可以）</li>
<li>属性不易扩展（为未来的变化）</li>
<li>属性难以阅读和维护</li>
</ul>
<h2 id="XML-验证"><a href="#XML-验证" class="headerlink" title="XML 验证"></a>XML 验证</h2><blockquote>
<p>拥有正确语法的 XML 被称为“形式良好”的 XML。通过 DTD 验证的 XML 是“合法”的 XML。</p>
</blockquote>
<h3 id="“形式良好”（Well-Formed）的-XML-文档"><a href="#“形式良好”（Well-Formed）的-XML-文档" class="headerlink" title="“形式良好”（Well Formed）的 XML 文档"></a>“形式良好”（Well Formed）的 XML 文档</h3><ul>
<li>XML 文档必须有根元素</li>
<li>XML 文档必须有关闭标签</li>
<li>XML 标签对大小写敏感</li>
<li>XML 元素必须被正确的嵌套</li>
<li>XML 属性必须加引号</li>
</ul>
]]></content>
      <categories>
        <category>文字编码</category>
      </categories>
      <tags>
        <tag>XML</tag>
        <tag>文字编码</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu 软件推荐 - 截图利器 flameshot-具有快捷键自由截图、截图涂鸦、截图添加文字等功能</title>
    <url>/2020/02/24/software/recommend/ubuntu/flameshot/Ubuntu-flameshot/</url>
    <content><![CDATA[<blockquote>
<p>Ubuntu 在使用过程中经常有截图的需求，自带的截图工具功能单一。我对截图工具的需求是：快捷键自由区域截图、可涂鸦（框、箭头、模糊）、可添加文字、可保存到指定文件夹、可复制到剪贴板、速度快。结合上述特征，推荐大家使用flameshot 0.6+(0.5+版本不带文字工具）。</p>
</blockquote>
<a id="more"></a>

<h2 id="安装方法一（亲测可用）"><a href="#安装方法一（亲测可用）" class="headerlink" title="安装方法一（亲测可用）"></a>安装方法一（亲测可用）</h2><blockquote>
<p>参考链接：<a href="https://blog.csdn.net/qq_36743482/article/details/94735338" target="_blank" rel="noopener">Ubuntu（Debian）截图并编辑软件推荐</a>。</p>
</blockquote>
<h3 id="clone-github"><a href="#clone-github" class="headerlink" title="clone github"></a>clone github</h3><blockquote>
<p>通过github下载源码编译安装，首先在终端进入软件安装的文件夹（我选择了/usr/share/flameshot/，此处需要超级用户权限），clone仓库：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo git clone https://github.com/lupoDharkael/flameshot.git</span><br></pre></td></tr></table></figure>

<img src="/2020/02/24/software/recommend/ubuntu/flameshot/Ubuntu-flameshot/gitclone.png" class="" title="clone仓库">

<h3 id="安装依赖库"><a href="#安装依赖库" class="headerlink" title="安装依赖库"></a>安装依赖库</h3><blockquote>
<p>根据作者在github上的安装介绍，安装Ubuntu（Debian）依赖库：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Compile-time</span></span><br><span class="line">sudo apt install g++ build-essential qt5-default qt5-qmake qttools5-dev-tools</span><br></pre></td></tr></table></figure>
<img src="/2020/02/24/software/recommend/ubuntu/flameshot/Ubuntu-flameshot/yilaiku1.png" class="" title="安装依赖库">
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Run-time</span></span><br><span class="line">sudo apt install libqt5dbus5 libqt5network5 libqt5core5a libqt5widgets5 libqt5gui5 libqt5svg5-dev</span><br></pre></td></tr></table></figure>
<img src="/2020/02/24/software/recommend/ubuntu/flameshot/Ubuntu-flameshot/yilaiku2.png" class="" title="安装依赖库">
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Optional</span></span><br><span class="line">sudo apt install git openssl ca-certificates</span><br></pre></td></tr></table></figure>
<img src="/2020/02/24/software/recommend/ubuntu/flameshot/Ubuntu-flameshot/yilaiku3.png" class="" title="安装依赖库">

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get upgrade</span><br></pre></td></tr></table></figure>

<h3 id="Build-amp-Install"><a href="#Build-amp-Install" class="headerlink" title="Build &amp; Install"></a>Build &amp; Install</h3><blockquote>
<p>进入flameshot根目录，执行命令：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo mkdir build</span><br><span class="line">cd build</span><br><span class="line">qmake ../</span><br><span class="line">make</span><br></pre></td></tr></table></figure>

<img src="/2020/02/24/software/recommend/ubuntu/flameshot/Ubuntu-flameshot/build.png" class="" title="Build">

<blockquote>
<p>继续执行：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo make install</span><br></pre></td></tr></table></figure>

<img src="/2020/02/24/software/recommend/ubuntu/flameshot/Ubuntu-flameshot/install.png" class="" title="Install">

<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><blockquote>
<p>此时已经成功安装flameshot，输入命令测试并查看程序版本，运行时间（2020.02.24）：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">flameshot --version</span><br></pre></td></tr></table></figure>

<img src="/2020/02/24/software/recommend/ubuntu/flameshot/Ubuntu-flameshot/test.png" class="" title="测试">

<blockquote>
<p>版本V0.6+即可，执行flameshot命令：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">flameshot</span><br></pre></td></tr></table></figure>

<blockquote>
<p>此时屏幕右上角会出现“火焰截屏”的图标。</p>
</blockquote>
<img src="/2020/02/24/software/recommend/ubuntu/flameshot/Ubuntu-flameshot/tubiao.png" class="" title="图标">

<blockquote>
<p>右键图标，选择设置，勾选文字功能。</p>
</blockquote>
<img src="/2020/02/24/software/recommend/ubuntu/flameshot/Ubuntu-flameshot/wenzishezhi.png" class="" title="添加文字功能">

<blockquote>
<p>此时双击火焰图标可以进行截图。</p>
</blockquote>
<img src="/2020/02/24/software/recommend/ubuntu/flameshot/Ubuntu-flameshot/jieping.png" class="" title="截图过程">

<h3 id="设置键盘快捷键"><a href="#设置键盘快捷键" class="headerlink" title="设置键盘快捷键"></a>设置键盘快捷键</h3><blockquote>
<p>距离拥有类似QQ截图功能只差一步，打开系统设置，选择设备。</p>
</blockquote>
<img src="/2020/02/24/software/recommend/ubuntu/flameshot/Ubuntu-flameshot/kuaijiejian1.png" class="" title="系统设置">

<blockquote>
<p>键盘-键盘快捷键-滚动条最下面-添加-设置快捷键（我设置的是ctrl+alt+A）</p>
</blockquote>
<img src="/2020/02/24/software/recommend/ubuntu/flameshot/Ubuntu-flameshot/kuaijiejian2.png" class="" title="快捷键设置">

<blockquote>
<p>之后就可以享受便捷截图的快乐了！</p>
</blockquote>
<h3 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h3><blockquote>
<ul>
<li><p>选区过后可以进行涂鸦、添加文字、模糊等编辑操作</p>
</li>
<li><p>通过滚轮改变字号、符号粗细</p>
</li>
<li><p>ctrl+S 保存当前截图</p>
</li>
<li><p>Enter 当前截图存入剪贴板</p>
</li>
<li><p>ctrl+Z 撤销</p>
</li>
<li><p>Esc 取消</p>
</li>
</ul>
<p>也可以进入设置界面自行设置</p>
</blockquote>
<img src="/2020/02/24/software/recommend/ubuntu/flameshot/Ubuntu-flameshot/jiepingshili.png" class="" title="截图展示">

<h2 id="安装方法二"><a href="#安装方法二" class="headerlink" title="安装方法二"></a>安装方法二</h2><blockquote>
<p>apt安装（未测试）</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository ppa:rikmills/bionic</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt install flameshot</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>软件</category>
        <category>软件推荐</category>
        <category>Ubuntu 软件推荐</category>
      </categories>
      <tags>
        <tag>软件</tag>
        <tag>软件推荐</tag>
        <tag>Ubuntu 软件推荐</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo -2- 站点信息配置</title>
    <url>/2020/02/24/hexo/2_hexo_config/Hexo_config/</url>
    <content><![CDATA[<blockquote>
<p> Hexo框架中配置文件内容描述与示例。</p>
</blockquote>
<a id="more"></a>

<h2 id="config-yml-站点配置文件"><a href="#config-yml-站点配置文件" class="headerlink" title="_config.yml - 站点配置文件"></a>_config.yml - 站点配置文件</h2><blockquote>
<p>在各种Hexo相关教程中频繁出现<code>站点配置文件</code>，指的是Hexo根目录中的文件<code>_config.yml</code>。</p>
</blockquote>
<img src="/2020/02/24/hexo/2_hexo_config/Hexo_config/zhandianpeizhiwenjian.png" class="" title="站点配置文件">

<blockquote>
<p>具体内容也可以参考<a href="https://hexo.io/zh-cn/docs/configuration" target="_blank" rel="noopener">官方文档</a>。</p>
</blockquote>
<ul>
<li>注意：配置过程中每一项的<code>英文冒号</code>后需要一个<code>空格</code>。</li>
</ul>
<h2 id="Site-网站"><a href="#Site-网站" class="headerlink" title="Site - 网站"></a>Site - 网站</h2><table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>title</code></td>
<td align="left">网站标题</td>
</tr>
<tr>
<td align="left"><code>subtitle</code></td>
<td align="left">网站副标题</td>
</tr>
<tr>
<td align="left"><code>description</code></td>
<td align="left">网站描述</td>
</tr>
<tr>
<td align="left"><code>keywords</code></td>
<td align="left">网站的关键词。使用半角逗号 <code>,</code> 分隔多个关键词。</td>
</tr>
<tr>
<td align="left"><code>author</code></td>
<td align="left">您的名字</td>
</tr>
<tr>
<td align="left"><code>language</code></td>
<td align="left">网站使用的语言 (<code>初始建议此处设置为zh-Hans，便于后续稳定翻译</code>)</td>
</tr>
<tr>
<td align="left"><code>timezone</code></td>
<td align="left">网站时区。Hexo 默认使用您电脑的时区。请参考 <a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones" target="_blank" rel="noopener">时区列表</a> 进行设置，如 <code>America/New_York</code>, <code>Japan</code>, 和 <code>UTC</code> 。一般的，对于中国大陆地区可以使用 <code>Asia/Shanghai</code>。</td>
</tr>
</tbody></table>
<p><font color='red' face='黑体' size=5><b>这部分是我们刚刚建站时需要设置的部分，建议修改。<br>以我的站点配置为例：</b></font></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">又见苍岚</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">'www.zywvvd.com'</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">'Stay hungury ! Stay foolish ！'</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="string">'人工智能, 深度学习, 个人博客'</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">Yiwei</span> <span class="string">Zhang</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-Hans</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">Asia/Shanghai</span></span><br></pre></td></tr></table></figure>

<img src="/2020/02/24/hexo/2_hexo_config/Hexo_config/title.png" class="" title="示例效果">

<h2 id="URL-网址"><a href="#URL-网址" class="headerlink" title="URL - 网址"></a>URL - 网址</h2><table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
<th align="left">默认值</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>url</code></td>
<td align="left">网址</td>
<td align="left"></td>
</tr>
<tr>
<td align="left"><code>root</code></td>
<td align="left">网站根目录</td>
<td align="left"></td>
</tr>
<tr>
<td align="left"><code>permalink</code></td>
<td align="left">文章的 <a href="https://hexo.io/zh-cn/docs/permalinks" target="_blank" rel="noopener">永久链接</a> 格式</td>
<td align="left"><code>:year/:month/:day/:title/</code></td>
</tr>
<tr>
<td align="left"><code>permalink_defaults</code></td>
<td align="left">永久链接中各部分的默认值</td>
<td align="left"></td>
</tr>
<tr>
<td align="left"><code>pretty_urls</code></td>
<td align="left">改写 <a href="https://hexo.io/zh-cn/docs/variables" target="_blank" rel="noopener"><code>permalink</code></a> 的值来美化 URL</td>
<td align="left"></td>
</tr>
<tr>
<td align="left"><code>pretty_urls.trailing_index</code></td>
<td align="left">是否在永久链接中保留尾部的 <code>index.html</code>，设置为 <code>false</code> 时去除</td>
<td align="left"><code>true</code></td>
</tr>
<tr>
<td align="left"><code>pretty_urls.trailing_html</code></td>
<td align="left">是否在永久链接中保留尾部的 <code>.html</code>, 设置为 <code>false</code> 时去除 (<em>对尾部的 <code>index.html</code>无效</em>)</td>
<td align="left"></td>
</tr>
</tbody></table>
<p><font color='red' face='黑体' size=5><b>url 和 root 需要关联到挂载的服务器目录</b></font></p>
<blockquote>
<p>修改<code>站点配置文件</code>，填入网址设置：</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">http://github.com/&lt;Github账号&gt;/&lt;Github账号&gt;.github.io</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/&lt;Github账号&gt;.github.io/</span></span><br></pre></td></tr></table></figure>

<p><font color='red' face='黑体' size=5><b>修改文章永久链接</b></font></p>
<blockquote>
<p>默认文章路径类似： <a href="https://www.zywvvd.com/2020/02/27/hexo/xxx">https://www.zywvvd.com/2020/02/27/hexo/xxx</a></p>
<p>这是因为文章链接配置<code>permalink</code>值默认为<code>:year/:month/:day/:title/</code></p>
<p>不喜欢此种形式链接的同学可以自定义修改，例如：</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">permalink:</span> <span class="string">:category/:title/</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>可以使用如下变量和 Front-matter 中的所有属性。</p>
</blockquote>
<table>
<thead>
<tr>
<th align="left">变量</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>:year</code></td>
<td align="left">文章的发表年份（4 位数）</td>
</tr>
<tr>
<td align="left"><code>:month</code></td>
<td align="left">文章的发表月份（2 位数）</td>
</tr>
<tr>
<td align="left"><code>:i_month</code></td>
<td align="left">文章的发表月份（去掉开头的零）</td>
</tr>
<tr>
<td align="left"><code>:day</code></td>
<td align="left">文章的发表日期 (2 位数)</td>
</tr>
<tr>
<td align="left"><code>:i_day</code></td>
<td align="left">文章的发表日期（去掉开头的零）</td>
</tr>
<tr>
<td align="left"><code>:hour</code></td>
<td align="left">文章发表时的小时 (2 位数)</td>
</tr>
<tr>
<td align="left"><code>:minute</code></td>
<td align="left">文章发表时的分钟 (2 位数)</td>
</tr>
<tr>
<td align="left"><code>:title</code></td>
<td align="left">文件名称</td>
</tr>
<tr>
<td align="left"><code>:post_title</code></td>
<td align="left">文章标题</td>
</tr>
<tr>
<td align="left"><code>:id</code></td>
<td align="left">文章 ID (<em>not persistent across <a href="https://hexo.io/zh-cn/docs/commands#clean" target="_blank" rel="noopener">cache reset</a></em>)</td>
</tr>
<tr>
<td align="left"><code>:category</code></td>
<td align="left">分类。如果文章没有分类，则是 <code>default_category</code> 配置信息。</td>
</tr>
</tbody></table>
<h2 id="Directory-目录"><a href="#Directory-目录" class="headerlink" title="Directory - 目录"></a>Directory - 目录</h2><table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
<th align="left">默认值</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>source_dir</code></td>
<td align="left">资源文件夹，这个文件夹用来存放内容。</td>
<td align="left"><code>source</code></td>
</tr>
<tr>
<td align="left"><code>public_dir</code></td>
<td align="left">公共文件夹，这个文件夹用于存放生成的站点文件。</td>
<td align="left"><code>public</code></td>
</tr>
<tr>
<td align="left"><code>tag_dir</code></td>
<td align="left">标签文件夹</td>
<td align="left"><code>tags</code></td>
</tr>
<tr>
<td align="left"><code>archive_dir</code></td>
<td align="left">归档文件夹</td>
<td align="left"><code>archives</code></td>
</tr>
<tr>
<td align="left"><code>category_dir</code></td>
<td align="left">分类文件夹</td>
<td align="left"><code>categories</code></td>
</tr>
<tr>
<td align="left"><code>code_dir</code></td>
<td align="left">Include code 文件夹，<code>source_dir</code> 下的子目录</td>
<td align="left"><code>downloads/code</code></td>
</tr>
<tr>
<td align="left"><code>i18n_dir</code></td>
<td align="left">国际化（i18n）文件夹</td>
<td align="left"><code>:lang</code></td>
</tr>
<tr>
<td align="left"><code>skip_render</code></td>
<td align="left">跳过指定文件的渲染。匹配到的文件将会被不做改动地复制到 <code>public</code> 目录中。您可使用 <a href="https://github.com/micromatch/micromatch#extended-globbing" target="_blank" rel="noopener">glob 表达式</a>来匹配路径。</td>
<td align="left"></td>
</tr>
</tbody></table>
<h2 id="Writing-文章"><a href="#Writing-文章" class="headerlink" title="Writing - 文章"></a>Writing - 文章</h2><table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
<th align="left">默认值</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>new_post_name</code></td>
<td align="left">新文章的文件名称</td>
<td align="left">:title.md</td>
</tr>
<tr>
<td align="left"><code>default_layout</code></td>
<td align="left">预设布局</td>
<td align="left">post</td>
</tr>
<tr>
<td align="left"><code>auto_spacing</code></td>
<td align="left">在中文和英文之间加入空格</td>
<td align="left">false</td>
</tr>
<tr>
<td align="left"><code>titlecase</code></td>
<td align="left">把标题转换为 title case</td>
<td align="left">false</td>
</tr>
<tr>
<td align="left"><code>external_link</code></td>
<td align="left">在新标签中打开链接</td>
<td align="left">true</td>
</tr>
<tr>
<td align="left"><code>external_link.enable</code></td>
<td align="left">在新标签中打开链接</td>
<td align="left"><code>true</code></td>
</tr>
<tr>
<td align="left"><code>external_link.field</code></td>
<td align="left">对整个网站（<code>site</code>）生效或仅对文章（<code>post</code>）生效</td>
<td align="left"><code>site</code></td>
</tr>
<tr>
<td align="left"><code>external_link.exclude</code></td>
<td align="left">需要排除的域名。主域名和子域名如 <code>www</code> 需分别配置</td>
<td align="left"><code>[]</code></td>
</tr>
<tr>
<td align="left"><code>filename_case</code></td>
<td align="left">把文件名称转换为 (1) 小写或 (2) 大写</td>
<td align="left">0</td>
</tr>
<tr>
<td align="left"><code>render_drafts</code></td>
<td align="left">显示草稿</td>
<td align="left">false</td>
</tr>
<tr>
<td align="left"><code>post_asset_folder</code></td>
<td align="left">启动 <a href="https://hexo.io/zh-cn/docs/asset-folders" target="_blank" rel="noopener">Asset 文件夹</a> (建议设置为 True )</td>
<td align="left">false</td>
</tr>
<tr>
<td align="left"><code>relative_link</code></td>
<td align="left">把链接改为与根目录的相对位址</td>
<td align="left">false</td>
</tr>
<tr>
<td align="left"><code>future</code></td>
<td align="left">显示未来的文章</td>
<td align="left">true</td>
</tr>
<tr>
<td align="left"><code>highlight</code></td>
<td align="left">代码块的设置</td>
<td align="left"></td>
</tr>
<tr>
<td align="left"><code>highlight.enable</code></td>
<td align="left">开启代码块高亮</td>
<td align="left"><code>true</code></td>
</tr>
<tr>
<td align="left"><code>highlight.auto_detect</code></td>
<td align="left">如果未指定语言，则启用自动检测</td>
<td align="left"><code>false</code></td>
</tr>
<tr>
<td align="left"><code>highlight.line_number</code></td>
<td align="left">显示行数 <em>Enabling this option will also enable <code>wrap</code> option</em></td>
<td align="left"><code>true</code></td>
</tr>
<tr>
<td align="left"><code>highlight.tab_replace</code></td>
<td align="left">用 n 个空格替换 tabs；如果值为空，则不会替换 tabs</td>
<td align="left"><code>&#39;&#39;</code></td>
</tr>
<tr>
<td align="left"><code>highlight.wrap</code></td>
<td align="left">Wrap the code block in <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table" target="_blank" rel="noopener">``</a></td>
<td align="left"><code>true</code></td>
</tr>
<tr>
<td align="left"><code>highlight.hljs</code></td>
<td align="left">Use the <code>hljs-*</code> prefix for CSS classes</td>
<td align="left"><code>false</code></td>
</tr>
</tbody></table>
<p><font color='red' face='黑体' size=5><b><code>post_asset_folder</code>修改为true，这样新建文章时会创建同名文件夹，便于后期博客图片等资源管理</b></font></p>
<h2 id="Category-amp-Tag-分类-amp-标签"><a href="#Category-amp-Tag-分类-amp-标签" class="headerlink" title="Category &amp; Tag - 分类 &amp; 标签"></a>Category &amp; Tag - 分类 &amp; 标签</h2><table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
<th align="left">默认值</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>default_category</code></td>
<td align="left">默认分类</td>
<td align="left"><code>uncategorized</code></td>
</tr>
<tr>
<td align="left"><code>category_map</code></td>
<td align="left">分类别名</td>
<td align="left"></td>
</tr>
<tr>
<td align="left"><code>tag_map</code></td>
<td align="left">标签别名</td>
<td align="left"></td>
</tr>
</tbody></table>
<h2 id="Date-Time-format-日期-时间格式"><a href="#Date-Time-format-日期-时间格式" class="headerlink" title="Date / Time format - 日期 / 时间格式"></a>Date / Time format - 日期 / 时间格式</h2><p>Hexo 使用 <a href="http://momentjs.com/" target="_blank" rel="noopener">Moment.js</a> 来解析和显示时间。</p>
<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
<th align="left">默认值</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>date_format</code></td>
<td align="left">日期格式</td>
<td align="left"><code>YYYY-MM-DD</code></td>
</tr>
<tr>
<td align="left"><code>time_format</code></td>
<td align="left">时间格式</td>
<td align="left"><code>HH:mm:ss</code></td>
</tr>
<tr>
<td align="left"><code>use_date_for_updated</code></td>
<td align="left">启用以后，如果 Front Matter 中没有指定 <code>updated</code>， <a href="https://hexo.io/zh-cn/docs/variables#页面变量" target="_blank" rel="noopener"><code>post.updated</code></a> 将会使用 <code>date</code> 的值而不是文件的创建时间。在 Git 工作流中这个选项会很有用</td>
<td align="left"><code>true</code></td>
</tr>
</tbody></table>
<h2 id="Pagination-分页"><a href="#Pagination-分页" class="headerlink" title="Pagination - 分页"></a>Pagination - 分页</h2><table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
<th align="left">默认值</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>per_page</code></td>
<td align="left">每页显示的文章量 (0 = 关闭分页功能)</td>
<td align="left"><code>10</code></td>
</tr>
<tr>
<td align="left"><code>pagination_dir</code></td>
<td align="left">分页目录</td>
<td align="left"><code>page</code></td>
</tr>
</tbody></table>
<h2 id="Extensions-扩展"><a href="#Extensions-扩展" class="headerlink" title="Extensions - 扩展"></a>Extensions - 扩展</h2><table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>theme</code></td>
<td align="left">当前主题名称。值为<code>false</code>时禁用主题</td>
</tr>
<tr>
<td align="left"><code>theme_config</code></td>
<td align="left">主题的配置文件。在这里放置的配置会覆盖主题目录下的 <code>_config.yml</code> 中的配置</td>
</tr>
<tr>
<td align="left"><code>deploy</code></td>
<td align="left">部署部分的设置</td>
</tr>
<tr>
<td align="left"><code>meta_generator</code></td>
<td align="left"><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/meta#属性" target="_blank" rel="noopener">Meta generator</a> 标签。 值为 <code>false</code> 时 Hexo 不会在头部插入该标签</td>
</tr>
</tbody></table>
<p><font color='red' face='黑体' size=5><b>更换主题时改变theme的值为主题名称</b></font></p>
<h3 id="Include-Exclude-file-s-包括或不包括目录和文件"><a href="#Include-Exclude-file-s-包括或不包括目录和文件" class="headerlink" title="Include / Exclude file(s) - 包括或不包括目录和文件"></a>Include / Exclude file(s) - 包括或不包括目录和文件</h3><blockquote>
<p> 在 Hexo 配置文件中，通过设置 include/exclude 可以让 Hexo 进行处理或忽略某些目录和文件夹。你可以使用 <a href="https://github.com/isaacs/minimatch" target="_blank" rel="noopener">glob 表达式</a> 对目录和文件进行匹配。</p>
</blockquote>
<p><code>include</code> and <code>exclude</code> options only apply to the <code>source/</code> folder, whereas <code>ignore</code> option applies to all folders.</p>
<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>include</code></td>
<td align="left">Hexo 默认会忽略隐藏文件和文件夹（包括名称以下划线和 <code>.</code> 开头的文件和文件夹，Hexo 的 <code>_posts</code> 和 <code>_data</code> 等目录除外）。通过设置此字段将使 Hexo 处理他们并将它们复制到 <code>source</code> 目录下。</td>
</tr>
<tr>
<td align="left"><code>exclude</code></td>
<td align="left">Hexo 会忽略这些文件和目录</td>
</tr>
<tr>
<td align="left"><code>ignore</code></td>
<td align="left">Ignore files/folders</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Next -1- 主题安装</title>
    <url>/2020/02/24/next/1_theme_install/Next-install/</url>
    <content><![CDATA[<blockquote>
<p>next 是 Hexo 当前最流行的主题，其简约优雅的风格和对多种插件的原生支持使其备受青睐。我本人也是next主题的用户，接下来将由本篇开启next安装美化的系列文章，保证从安装Hexo开始只要安装系列文章操作，你也可以达拥有同样效果的博客。</p>
<p>本文主要记录Next主题的安装和常用的美化方法，有疑问欢迎在评论区交流。</p>
</blockquote>
<a id="more"></a>

<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul>
<li>安装Hexo，<a href="https://www.zywvvd.com/zywvvd.github.io/2020/02/19/hexo/hexo_build/Hexo教程/">Hexo - 博客搭建基础教程</a></li>
<li>完成基础配置，<a href="https://www.zywvvd.com/zywvvd.github.io/2020/02/24/hexo/hexo_config/Hexo站点配置/">Hexo - 站点信息配置</a></li>
<li>了解Hexo命令，<a href="https://www.zywvvd.com/zywvvd.github.io/2020/02/25/hexo/hexo_commands/hexo-commands/">Hexo - 常用命令汇总</a></li>
</ul>
<h2 id="安装Next主题"><a href="#安装Next主题" class="headerlink" title="安装Next主题"></a>安装Next主题</h2><blockquote>
<p>Next最新版本为V7.7.1 (2020.02.24)，官方链接<a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">Next Github链接</a>。</p>
</blockquote>
<h3 id="下载Next仓库"><a href="#下载Next仓库" class="headerlink" title="下载Next仓库"></a>下载Next仓库</h3><blockquote>
<p>安装时进入Hexo根目录clone Next仓库：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd hexo</span><br><span class="line">git clone https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>

<h3 id="更改配置文件"><a href="#更改配置文件" class="headerlink" title="更改配置文件"></a>更改配置文件</h3><blockquote>
<p>修改<code>站点配置文件</code>，将theme更改为next。</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure>

<img src="/2020/02/24/next/1_theme_install/Next-install/peizhizhutu.png" class="" title="配置主题">

<blockquote>
<p>此时next已经安装并配置完成，更新hexo即可查看效果。</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<img src="/2020/02/24/next/1_theme_install/Next-install/nextanzhuangshili.png" class="" title="next示意图">

<h2 id="更换主题风格"><a href="#更换主题风格" class="headerlink" title="更换主题风格"></a>更换主题风格</h2><blockquote>
<p>修改<code>主题配置文件</code>中<code>scheme</code> 字段的值，默认为<code>Muse</code>：</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">scheme:</span> <span class="string">Muse</span></span><br></pre></td></tr></table></figure>

<img src="/2020/02/24/next/1_theme_install/Next-install/nextanzhuangshili.png" class="" title="Muse">

<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">scheme:</span> <span class="string">Mist</span></span><br></pre></td></tr></table></figure>

<img src="/2020/02/24/next/1_theme_install/Next-install/mist.png" class="" title="Mist">

<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">scheme:</span> <span class="string">Pisces</span></span><br></pre></td></tr></table></figure>

<img src="/2020/02/24/next/1_theme_install/Next-install/Pisces.png" class="" title="Pisces">

<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">scheme:</span> <span class="string">Gemini</span></span><br></pre></td></tr></table></figure>

<img src="/2020/02/24/next/1_theme_install/Next-install/Gemini.png" class="" title="Gemini">



<blockquote>
<p>我目前使用的是Gemini</p>
</blockquote>
<h2 id="更新next仓库"><a href="#更新next仓库" class="headerlink" title="更新next仓库"></a>更新next仓库</h2><blockquote>
<p>在hexo根目录/themes/next 文件夹下执行命令：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd themes/next</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Next</category>
      </categories>
      <tags>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>Git - 连接 Github 远程仓库</title>
    <url>/2020/02/23/git/link_github/Git-connect-remote-pos/</url>
    <content><![CDATA[<blockquote>
<p>本教程记录了本地Git与远程Github仓库连接的方法。设置成功后可以从远程仓库获取代码、将本地代码推送到远端。</p>
</blockquote>
<a id="more"></a>

<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><blockquote>
<ul>
<li>申请Github账号</li>
<li>基础Git语法知识</li>
<li>本地安装好Git bash运行环境</li>
</ul>
</blockquote>
<h2 id="建立远程仓库"><a href="#建立远程仓库" class="headerlink" title="建立远程仓库"></a>建立远程仓库</h2><blockquote>
<p>登录Github账号后点击右上角加号建立自己的仓库，名称自拟。</p>
<p>此处以test为例。</p>
</blockquote>
<img src="/2020/02/23/git/link_github/Git-connect-remote-pos/xinjiancangku.png" class="" title="建立远程仓库示例">

<h2 id="配置-SSH-秘钥"><a href="#配置-SSH-秘钥" class="headerlink" title="配置 SSH 秘钥"></a>配置 SSH 秘钥</h2><h3 id="创建SSH密钥"><a href="#创建SSH密钥" class="headerlink" title="创建SSH密钥"></a>创建SSH密钥</h3><blockquote>
<p>在Git bash中执行命令：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C "abc@163.com"   #此处填自己注册GitHub的邮箱</span><br></pre></td></tr></table></figure>

<blockquote>
<p>没有特殊需求的话可以不设置密码，两次回车继续。</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">~/vvd_git$ ssh-keygen -t rsa -C "zywvvd@mail.ustc.edu.cn"</span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file in which to save the key (/home/zywvvd/.ssh/id_rsa): </span><br><span class="line">Created directory '/home/zywvvd/.ssh'.</span><br><span class="line">Enter passphrase (empty for no passphrase): </span><br><span class="line">Enter same passphrase again: </span><br><span class="line">Your identification has been saved in /home/zywvvd/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved in /home/zywvvd/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:klt1J9JxcGBj7xgB5dC1cXsQmK9ioOhInLRgqKppO8k zywvvd@mail.ustc.edu.cn</span><br><span class="line">The key's randomart image is:</span><br><span class="line">+---[RSA 2048]----+</span><br><span class="line">|      o+p+=o+.   |</span><br><span class="line">|       B.Bo+ o   |</span><br><span class="line">|      = *.+ . .  |</span><br><span class="line">|.    o = *.  .   |</span><br><span class="line">|oo  . . u..      |</span><br><span class="line">|* +   . .        |</span><br><span class="line">|+*.. . .         |</span><br><span class="line">|*E  .  .   .     |</span><br><span class="line">|Ooo              |</span><br><span class="line">+----[SHA256]-----+</span><br></pre></td></tr></table></figure>

<blockquote>
<p> 得到类似上述输出即为创建成功。得到的文件放在~/.ssh文件夹中。</p>
</blockquote>
<h3 id="设置Github"><a href="#设置Github" class="headerlink" title="设置Github"></a>设置Github</h3><ul>
<li><p>登陆github</p>
</li>
<li><p>在settings中设置 ‘SSH and GPG keys’</p>
</li>
<li><p>添加new SSH key—— 设置名字并将.ssh 文件夹中isa.pub公钥文件的内容复制进去</p>
</li>
</ul>
<h3 id="测试SSH秘钥"><a href="#测试SSH秘钥" class="headerlink" title="测试SSH秘钥"></a>测试SSH秘钥</h3><blockquote>
<p>执行命令：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>

<blockquote>
<p>输出结果：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Warning: Permanently added the RSA host key for IP address '52.74.223.139' to the list of known hosts.</span><br><span class="line">Hi zywvvd! You've successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure>

<blockquote>
<p>出现欢迎字段说明SSH密钥配置成功。</p>
</blockquote>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><h3 id="同步本地库到远程库上"><a href="#同步本地库到远程库上" class="headerlink" title="同步本地库到远程库上"></a>同步本地库到远程库上</h3><blockquote>
<p>在已有的本地仓库中使用remote命令链接仓库：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git remote add origin https://github.com/zywvvd/test.git</span><br></pre></td></tr></table></figure>

<blockquote>
<p>编辑本地库内容，推送到远程端：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">echo "#example" &gt;&gt; README.md</span><br><span class="line">git add README.md</span><br><span class="line">git commit -m "README.md created"</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure>

<p>此时可以在github端看到更新上传的说明文件。</p>
<h3 id="克隆仓库"><a href="#克隆仓库" class="headerlink" title="克隆仓库"></a>克隆仓库</h3><blockquote>
<p>执行如下命令以创建一个本地仓库的克隆版本：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone /path/to/repository</span><br></pre></td></tr></table></figure>

<blockquote>
<p>如果是远端服务器上的仓库，你的命令会是这个样子：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone username@host:/path/to/repository</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo -1- 博客搭建基础教程</title>
    <url>/2020/02/19/hexo/1_hexo_build/Hexo/</url>
    <content><![CDATA[<blockquote>
<p>建立个人博客的需求由来已久，能拥有自己的技术博客是广大程序员的梦想。相比于早些时候的WordPress、织梦等框架，就个人站点来说，用Hexo搭建博客可以用“怎一个爽字了得”形容。Hexo基于Node.js开发，具有轻量、方便、易部署等特点，主题丰富简约，依赖github即可构建站点，近些年受到广泛关注。此篇文章旨在和与我一样的初学者分享经验，有疑问欢迎在评论区交流。</p>
</blockquote>
<a id="more"></a>



<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul>
<li><p><code>github账号</code>：需要申请一个属于你的github账号，可以在<a href="https://github.com" target="_blank" rel="noopener">这里申请</a>。</p>
</li>
<li><p><code>git bash</code>： 需要有git bash运行环境，相关安装和使用教程请<a href="[https://www.baidu.com/s?wd=gitbash&rsv_spt=1&rsv_iqid=0xeaa75c680004abbf&issp=1&f=8&rsv_bp=1&rsv_idx=2&ie=utf-8&tn=baiduhome_pg&rsv_enter=1&rsv_dl=ib&rsv_sug3=8&rsv_sug1=7&rsv_sug7=101&rsv_sug2=0&inputT=2890&rsv_sug4=3589">询问度娘</a>。</p>
</li>
<li><p><code>Node.js</code>： 必须安装 Node.js 开发环境，建议参考<a href="https://www.simon96.online/2018/11/10/hexo-env/" target="_blank" rel="noopener">Hexo 环境搭建</a>。</p>
</li>
<li><p><code>个人域名</code>(可选)：申请自己的域名可以有自己专用的地址解析链接，我使用<a href="https://cloud.baidu.com/product/bcd/price.html" target="_blank" rel="noopener">百度智能云</a>申请的域名，用着还不错，也比较便宜。</p>
</li>
<li><p><code>markdown</code>：Hexo使用Markdown解析文章，不熟悉的同学可以移步<a href="https://www.zywvvd.com/2020/02/18/Markdown-简明教程/">Markdown 简明教程</a>。</p>
</li>
<li><p><code>html\css\js基础</code>： 有最好，没有也没关系。</p>
</li>
</ul>
<h2 id="Hexo的安装、初始化、本地预览"><a href="#Hexo的安装、初始化、本地预览" class="headerlink" title="Hexo的安装、初始化、本地预览"></a>Hexo的安装、初始化、本地预览</h2><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><blockquote>
<p>在git bash环境下输入命令：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<h3 id="初始化Hexo"><a href="#初始化Hexo" class="headerlink" title="初始化Hexo"></a>初始化Hexo</h3><blockquote>
<p>在选好的文件夹下运行命令，我们以 TestHexo 为例设立我们的第一个Hexo 站点。</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo init TestHexo</span><br></pre></td></tr></table></figure>

<img src="/2020/02/19/hexo/1_hexo_build/Hexo/anzhuanghexo.png" class="" title="安装">

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd TestHexo</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>

<blockquote>
<p>完成后在TestHexo 文件夹中会有如下内容：</p>
</blockquote>
<img src="/2020/02/19/hexo/1_hexo_build/Hexo/chushihuawenjianjia.png" class="" title="初始化Hexo文件">

<p>如果你坚持到了这里，那么恭喜你：</p>
<p>此时本地的Hexo站点已经完成了（什么不是刚开始么？？ 是的已经结束了）。</p>
<h3 id="本地预览"><a href="#本地预览" class="headerlink" title="本地预览"></a>本地预览</h3><blockquote>
<p>为了查看本地站点实际效果，输入命令：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure>

<p>或</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<blockquote>
<p>会在本地搭建服务器挂载生成的本地站点，通过访问 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 浏览自己的网站。</p>
</blockquote>
<img src="/2020/02/19/hexo/1_hexo_build/Hexo/yulanyemian.png" class="" title="预览页面">



<h2 id="Hexo-部署到Github"><a href="#Hexo-部署到Github" class="headerlink" title="Hexo 部署到Github"></a>Hexo 部署到Github</h2><h3 id="在Github端创建仓库"><a href="#在Github端创建仓库" class="headerlink" title="在Github端创建仓库"></a>在Github端创建仓库</h3><p> 仓库名：&lt;Github 账号&gt;.github.io</p>
<h3 id="安装Hexo-git-插件"><a href="#安装Hexo-git-插件" class="headerlink" title="安装Hexo-git 插件"></a>安装Hexo-git 插件</h3><p>执行命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<h3 id="链接本地与远程仓库"><a href="#链接本地与远程仓库" class="headerlink" title="链接本地与远程仓库"></a>链接本地与远程仓库</h3><blockquote>
<p>需要在本地建立SSh key，并添加到远程的github配置中。可参考<a href="https://www.zywvvd.com/zywvvd.github.io/2020/02/23/Git-连接-Github-远程仓库/">Git 连接 Github 远程仓库</a></p>
</blockquote>
<h3 id="修改站点配置文件"><a href="#修改站点配置文件" class="headerlink" title="修改站点配置文件"></a>修改<code>站点配置文件</code></h3><blockquote>
<p><code>站点配置文件</code>为Hexo根目录下的 _config.yml文件，编辑该文件，找到相关部分并修改。</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com:&lt;Github账号&gt;/&lt;Github账号&gt;.github.io.git</span>  <span class="comment">#该地址写ssh地址，不写http地址。</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>修改<code>站点配置文件</code>，填入网址设置：</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">http://github.com/&lt;Github账号&gt;/&lt;Github账号&gt;.github.io</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/&lt;Github账号&gt;.github.io/</span></span><br></pre></td></tr></table></figure>

<h3 id="推送到Github"><a href="#推送到Github" class="headerlink" title="推送到Github"></a>推送到Github</h3><blockquote>
<p>依次输入命令：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<blockquote>
<p> 当见到返回：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">INFO  Deploy done: git</span><br></pre></td></tr></table></figure>

<blockquote>
<p> 即为推送成功。</p>
<p>至此，您的Hexo博客已经搭建在GithubPages, 域名为<code>https://&lt;Github账号&gt;.github.io</code>。</p>
</blockquote>
<h2 id="自定义域名"><a href="#自定义域名" class="headerlink" title="自定义域名"></a>自定义域名</h2><blockquote>
<p>在站点部署在Github基础上，您也可以将自己购买的域名解析到刚刚建立的地址。</p>
</blockquote>
<h3 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h3><blockquote>
<p>在域名设置界面:</p>
</blockquote>
<ul>
<li><p>类型选择为 CNAME；</p>
</li>
<li><p>主机记录即域名前缀，填写为www；</p>
</li>
<li><p>记录值填写为&lt;Github账号名称&gt;.github.io；</p>
</li>
<li><p>解析线路，TTL 默认即可。</p>
</li>
</ul>
<img src="/2020/02/19/hexo/1_hexo_build/Hexo/yumingshezhi.png" class="" title="域名配置">

<blockquote>
<p>提示：域名需要按照国家要求备案</p>
</blockquote>
<img src="/2020/02/19/hexo/1_hexo_build/Hexo/beian.png" class="" title="域名备案">

<h3 id="仓库设置"><a href="#仓库设置" class="headerlink" title="仓库设置"></a>仓库设置</h3><blockquote>
<p>进入github建立的hexo仓库，点击settings按钮设置仓库，在Custom domin中填入自己的域名，并Save：</p>
</blockquote>
<img src="/2020/02/19/hexo/1_hexo_build/Hexo/customdomin.png" class="" title="仓库设置">

<h3 id="本地设置"><a href="#本地设置" class="headerlink" title="本地设置"></a>本地设置</h3><blockquote>
<p>在Hexo站点目录source文件夹中，创建名为<code>CNAME</code>的文件，并向其写入<code>自定义域名</code></p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">echo www.zywvvd.com &gt;&gt; CNAME    #域名部分请替换为你自己的</span><br></pre></td></tr></table></figure>

<img src="/2020/02/19/hexo/1_hexo_build/Hexo/cname.png" class="" title="CNAME文件">

<blockquote>
<p>几分钟之后，即可通过该域名访问Hexo站点。     <a href="https://www.zywvvd.com">又见苍岚</a></p>
</blockquote>
<h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h2><blockquote>
<p> hexo主题有很多,默认主题为landscape。</p>
<p>更换主题需要下载主题包放在Hexo目录中themes文件夹内，如我下载了Next主题，文件夹如图所示。</p>
</blockquote>
<img src="/2020/02/19/hexo/1_hexo_build/Hexo/nextwenjianjia.png" class="" title="Themes文件夹">

<blockquote>
<p>并将<code>站点配置文件</code>中主题换成相应的主题名：</p>
</blockquote>
<img src="/2020/02/19/hexo/1_hexo_build/Hexo/zhutipeizhi.png" class="" title="主题配置">

<blockquote>
<p>主题可以在<a href="https://github.com/search?q=hexo-theme" target="_blank" rel="noopener">github</a>现有的工作中挑选。</p>
</blockquote>
<h3 id="Next"><a href="#Next" class="headerlink" title="Next"></a>Next</h3><blockquote>
<p>个人使用的是Hexo人气最高的主题Next，当前版本 V 7.7.1，具有简介大方，原生自带大量实用工具，社区活跃等优点。</p>
<p>有喜欢类似风格的小伙伴可以到<a href="https://www.zywvvd.com/categories/Next/">Next 系列教程</a>了解一下。</p>
</blockquote>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>文字编码 - Markdown 简明教程</title>
    <url>/2020/02/18/words/markdown/course/Markdown/</url>
    <content><![CDATA[<blockquote>
<p>Markdown 是一种轻量级标记语言，文件以.md/.markdown为后缀，语法简单实用，编写的文档可以导出 HTML 、Word、图像、PDF、Epub 等多种格式，近年来快速流行在程序员群体中。本教程列举了markdown最常用的语法，仅需随便一款markdown编辑器即可轻松学习。</p>
</blockquote>
<a id="more"></a>

<h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><blockquote>
<p> 文章题目，设有6个等级，可被获取生成文章目录。</p>
</blockquote>
<p>语法：若干个(1-6)<code>#</code>后接<code>空格</code>代表不同级别(1-6)的标题</p>
<p>示例编码：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 一级标题</span></span><br><span class="line"><span class="section">## 二级标题</span></span><br><span class="line"><span class="section">### 三级标题</span></span><br><span class="line"><span class="section">#### 四级标题</span></span><br><span class="line"><span class="section">##### 五级标题</span></span><br><span class="line"><span class="section">###### 六级标题</span></span><br></pre></td></tr></table></figure>

<p>实际效果：</p>
<img src="/2020/02/18/words/markdown/course/Markdown/biaoti.png" class="" title="标题示例">



<h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><blockquote>
<p>方便分割内容</p>
</blockquote>
<p>语法：<code>***</code> 或<code>---</code>则会出现一条线</p>
<p>示例编码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">***</span><br></pre></td></tr></table></figure>

<p>实际效果：</p>
<hr>
<hr>
<h2 id="格式标记"><a href="#格式标记" class="headerlink" title="格式标记"></a>格式标记</h2><blockquote>
<p>简单方便的格式标记</p>
</blockquote>
<p>语法：<code>*</code> 内容<code>*</code>或<code>_</code>内容<code>_</code>标记为倾斜； <code>**</code> 内容<code>**</code> 或<code>__</code>内容<code>__</code>标记为加粗；<code>***</code> 内容<code>**</code> 或<code>___</code>内容<code>___</code>标记为加粗倾斜。</p>
<p>示例编码：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="emphasis">*倾斜*</span></span><br><span class="line"><span class="emphasis">_倾斜_</span></span><br><span class="line"><span class="strong">**加粗**</span></span><br><span class="line"><span class="strong">__加粗__</span></span><br><span class="line"><span class="strong">***加粗倾斜**</span>*</span><br><span class="line"><span class="strong">___加粗倾斜__</span>_</span><br></pre></td></tr></table></figure>

<p>实际效果：</p>
<img src="/2020/02/18/words/markdown/course/Markdown/jiacuqingxie.png" class="" title="加粗倾斜示例">



<h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><blockquote>
<p>内容条理化的利器，分为有序列表和无序列表</p>
</blockquote>
<h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><p>语法：<code>序号</code>加上<code>.</code>和 <code>空格</code></p>
<p>示例编码：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1. </span>内容1</span><br><span class="line"><span class="bullet">2. </span>内容2</span><br><span class="line"><span class="bullet">3. </span>内容3</span><br></pre></td></tr></table></figure>

<p>实际效果：</p>
<img src="/2020/02/18/words/markdown/course/Markdown/youxuliebiao.png" class="" title="有序列表示例">



<h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><p>语法：<code>*</code>、<code>+</code>或是<code>-</code>加 <code>空格</code> 作为列表标记</p>
<p>示例编码：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">*  </span>内容1</span><br><span class="line"><span class="bullet">*  </span>内容2</span><br><span class="line"><span class="bullet">*  </span>内容3</span><br><span class="line"></span><br><span class="line"><span class="bullet">+  </span>内容4</span><br><span class="line"><span class="bullet">+  </span>内容5</span><br><span class="line"><span class="bullet">+  </span>内容6</span><br><span class="line"></span><br><span class="line"><span class="bullet">-  </span>内容7</span><br><span class="line"><span class="bullet">- </span>内容8</span><br><span class="line"><span class="bullet">- </span>内容9</span><br></pre></td></tr></table></figure>

<p>实际效果：</p>
<img src="/2020/02/18/words/markdown/course/Markdown/wuxuliebiao.png" class="" title="无序列表示例">



<h3 id="列表嵌套"><a href="#列表嵌套" class="headerlink" title="列表嵌套"></a>列表嵌套</h3><p>语法： 使用<code>4个空格</code>缩进即可进行列表嵌套</p>
<p>示例编码：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1. </span>有序内容1</span><br><span class="line"><span class="bullet">    + </span>无序内容1</span><br><span class="line"><span class="bullet">    + </span>无序内容2</span><br><span class="line"><span class="bullet">2. </span>有序内容2</span><br><span class="line"><span class="bullet">    + </span>无序内容1</span><br><span class="line"><span class="bullet">    + </span>无序内容2</span><br></pre></td></tr></table></figure>

<p>实际效果：</p>
<img src="/2020/02/18/words/markdown/course/Markdown/qiantaoliebiao.png" class="" title="嵌套列表示例">



<h2 id="区块（引用）"><a href="#区块（引用）" class="headerlink" title="区块（引用）"></a>区块（引用）</h2><blockquote>
<p>为内容分区块，可嵌套</p>
</blockquote>
<p>语法：<code>&gt;</code>  加 <code>空格</code> 作为标记</p>
<p>示例编码：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="quote">&gt; 第一层</span></span><br><span class="line">&gt;&gt; 第二层</span><br><span class="line">&gt;&gt;&gt; 第三层</span><br><span class="line">&gt;&gt;&gt;&gt; 第四层</span><br></pre></td></tr></table></figure>

<p>实际效果：</p>
<img src="/2020/02/18/words/markdown/course/Markdown/qukuai.png" class="" title="区块示例">



<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><blockquote>
<p>代码段可以用多种语言高亮显示代码，内容不会被markdown标记解释，有两种标记方式</p>
</blockquote>
<h3 id="代码片段"><a href="#代码片段" class="headerlink" title="代码片段"></a>代码片段</h3><p>语法：用前后两个`` ` (主键盘区左上角，Esc下面的按键)包裹代码片段</p>
<p>示例编码：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="code">`cout&lt;&lt;"Hello world"&lt;&lt;endl; `</span></span><br></pre></td></tr></table></figure>

<p>实际效果：</p>
<img src="/2020/02/18/words/markdown/course/Markdown/daimapianduan.png" class="" title="代码片段示例">

<h3 id="代码区块"><a href="#代码区块" class="headerlink" title="代码区块"></a>代码区块</h3><p>语法：建议用前后各三个`` `包裹代码作为markdown中的代码段，这种语法更容易被编辑工具识别和支持</p>
<p>示例编码：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">​<span class="code">```</span> c++</span><br><span class="line"><span class="section">#include &lt;iostream&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">   cout <span class="xml"><span class="tag">&lt;&lt; "<span class="attr">Hello</span> <span class="attr">World</span>";</span></span></span><br><span class="line"><span class="xml">   return 0;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml">​</span></span><br></pre></td></tr></table></figure>


<p>实际效果：</p>
<img src="/2020/02/18/words/markdown/course/Markdown/daimaduan.png" class="" title="代码区块示例">



<h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><blockquote>
<p>编辑文本变成超链接</p>
</blockquote>
<p>语法：</p>
<p><code>[</code> <code>链接名称</code> <code>]</code> <code>(</code> <code>链接地址</code> <code>)</code>       或       <code>&lt;</code> <code>链接地址</code> <code>&gt;</code> （中间无空格）</p>
<p>示例编码：</p>
<p>​```markdown<br><a href="https://www.zywvvd.com">又见苍岚</a><br>或<br> <a href="https://www.zywvvd.com">https://www.zywvvd.com</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">实际效果：</span><br><span class="line"></span><br><span class="line">[又见苍岚](https:&#x2F;&#x2F;www.zywvvd.com)</span><br><span class="line">或</span><br><span class="line"> &lt;https:&#x2F;&#x2F;www.zywvvd.com&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 图片</span><br><span class="line"></span><br><span class="line">语法格式：</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;markdown</span><br><span class="line">![alt 属性](图片地址)</span><br><span class="line">![alt 属性](图片地址 &quot;可选标题&quot;)</span><br></pre></td></tr></table></figure>

<p>示例编码：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">苍岚1</span>](<span class="link">http://zywvvd.github.io/images/avatar1.jpg</span>)</span><br><span class="line">![<span class="string">苍岚2</span>](<span class="link">http://zywvvd.github.io/images/avatar2.jpg "CangLan"</span>)</span><br></pre></td></tr></table></figure>

<p>实际效果：</p>
<p><img src="http://zywvvd.github.io/images/avatar1.jpg" alt="苍岚1"><br><img src="http://zywvvd.github.io/images/avatar2.jpg" alt=" " title="苍岚2"></p>
<h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><blockquote>
<p>可以方便地插入表格。</p>
</blockquote>
<p>语法：用 <code>|</code> 分隔单元格，使用 <code>-</code> 来分隔表头和其他行， <code>:-</code> <code>-:</code> <code>:-:</code>分别表示左、右、中的对齐方式。</p>
<p>示例编码：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">| 左对齐表头 | 右对齐表头|居中对齐表头|</span><br><span class="line">|:--- | ---: |:---: |</span><br><span class="line">|内容1| 内容2|内容3|</span><br><span class="line">|内容4|内容5|内容6|</span><br></pre></td></tr></table></figure>

<p>实际效果：</p>
<img src="/2020/02/18/words/markdown/course/Markdown/biaoge.png" class="" title="表格示例">

<h2 id="数学公式"><a href="#数学公式" class="headerlink" title="数学公式"></a>数学公式</h2><blockquote>
<p>可以插入Tex或LaTex等公式编辑器生成的格式代码</p>
</blockquote>
<p>语法：输入<code>$$</code>包裹公式</p>
<p>示例编码：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">$$</span><br><span class="line">\mathbf&#123;X&#125;<span class="emphasis">_1\times\mathbf&#123;X&#125;_</span>2 = \mathbf&#123;X&#125;_3</span><br><span class="line">$$</span><br></pre></td></tr></table></figure>
<p>实际效果：</p>
<img src="/2020/02/18/words/markdown/course/Markdown/gongshi.png" class="" title="公式示例">



<h2 id="任务列表"><a href="#任务列表" class="headerlink" title="任务列表"></a>任务列表</h2><blockquote>
<p>简单的任务标记</p>
</blockquote>
<p>语法：<code>- 空格[空格]空格</code>不勾选<code>-空格[x]空格</code>勾选</p>
<p>示例编码：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">- </span>[ ] 挣他一个亿</span><br><span class="line"><span class="bullet">- </span>[x] 花个五千万</span><br><span class="line"><span class="bullet">- </span>[ ]  存个五千万</span><br><span class="line"><span class="bullet">- </span>[ ] 年利息二百万</span><br><span class="line"><span class="bullet">- </span>[ ] 实现财务自由</span><br></pre></td></tr></table></figure>

<p>实际效果：</p>
<img src="/2020/02/18/words/markdown/course/Markdown/renwuliebiao.png" class="" title="任务列表示例">



<h2 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h2><blockquote>
<p>支持脚注功能，鼠标悬停可以读出内容</p>
</blockquote>
<p>语法： 文中定义脚注A - <code>[^A]</code>（脚注前需要有内容），对应A的脚注文本<code>[^A]: 脚注的*文本*</code></p>
<p>示例编码：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">你可以使用脚注像这样[^脚注]</span><br><span class="line">脚注前面需要有内容！！！</span><br><span class="line">[<span class="symbol">^脚注</span>]: <span class="link">这里写脚注的*文本*</span></span><br></pre></td></tr></table></figure>

<p>实际效果：</p>
<p>你可以使用脚注像这样<a href="这里写脚注的*文本*">^脚注</a><br>脚注前面需要有内容！！！</p>
<h2 id="高级链接"><a href="#高级链接" class="headerlink" title="高级链接"></a>高级链接</h2><blockquote>
<p>可以将链接地址放在变量中</p>
</blockquote>
<p>语法： 链接<code>[链接名称]</code> <code>[变量A]</code>，设置变量A <code>[A]:链接地址</code></p>
<p>示例编码：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">加油 [<span class="string">又见苍岚</span>][<span class="symbol">a</span>]</span><br><span class="line"></span><br><span class="line">[<span class="symbol">a</span>]:<span class="link">https://www.zywvvd.com</span></span><br></pre></td></tr></table></figure>

<p>实际效果：</p>
<p>加油 <a href="https://www.zywvvd.com">又见苍岚</a></p>
<h2 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h2><blockquote>
<p>markdown支持流程图功能，这里介绍框架语法，只不过不是所有markdown编辑器、显示框架都支持</p>
</blockquote>
<p>语法： ```mermaid  和  ``` 包裹的部分 可以解读成流程图</p>
<p>示例编码：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">​```mermaid</span><br><span class="line">graph LR</span><br><span class="line">A[方形] --&gt;B(圆角)</span><br><span class="line">    B --&gt; C&#123;条件a&#125;</span><br><span class="line">    C --&gt;|a=<span class="number">1</span>| D[结果<span class="number">1</span>]</span><br><span class="line">    C --&gt;|a=<span class="number">2</span>| E[结果<span class="number">2</span>]</span><br><span class="line">    F[横向流程图]</span><br><span class="line">​</span><br></pre></td></tr></table></figure>


<p>实际效果：</p>
<img src="/2020/02/18/words/markdown/course/Markdown/liuchengtu.png" class="" title="流程图示例">



<h2 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h2><blockquote>
<p>Markdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown 使用反斜杠转义特殊字符</p>
</blockquote>
<p>语法：<code>\</code> 加特殊字符</p>
<p>示例编码：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">\<span class="emphasis">*\*</span>不想被加粗\<span class="emphasis">*\*</span>我也不想\<span class="emphasis">*\*</span></span><br></pre></td></tr></table></figure>

<p>实际效果：</p>
<p>**不想被加粗**我也不想**</p>
<h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><blockquote>
<p>markdown可以根据标题内容自动提取目录</p>
</blockquote>
<p>语法：<code>[toc]</code>回车即可</p>
<p>示例编码：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[toc]</span><br></pre></td></tr></table></figure>

<p>实际效果：</p>
<img src="/2020/02/18/words/markdown/course/Markdown/mulu.png" class="" title="目录示例">

<h2 id="使用HTML代码实现高级效果"><a href="#使用HTML代码实现高级效果" class="headerlink" title="使用HTML代码实现高级效果"></a>使用HTML代码实现高级效果</h2><blockquote>
<p>markdown语法简单，内容表现丰富程度有限。但其本身兼容HTML代码，可以借助其实现高级显示的效果。</p>
</blockquote>
<h3 id="文本对齐"><a href="#文本对齐" class="headerlink" title="文本对齐"></a>文本对齐</h3><blockquote>
<p>借助align属性可以实现文本对齐</p>
</blockquote>
<p>示例代码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">align</span>=<span class="string">'center'</span>&gt;</span>居中文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">align</span>=<span class="string">'right'</span>&gt;</span>右对齐文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">align</span>=<span class="string">'left'</span>&gt;</span>左对齐文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>实际效果：</p>
<div>
<p align='center'>居中文本</p>
<p align='right'>右对齐文本</p>
<p align='left'>左对齐文本</p>
</div>


<h3 id="图像水平排列"><a href="#图像水平排列" class="headerlink" title="图像水平排列"></a>图像水平排列</h3><blockquote>
<p>markdown自带图像插入功能无法水平自由排列，借助html中的table和img标签可以实现。</p>
</blockquote>
<p>示例代码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> &gt;</span><span class="tag">&lt;<span class="name">center</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"timg.jpg"</span>  <span class="attr">height</span>=<span class="string">"240"</span> <span class="attr">width</span>=<span class="string">"240"</span>&gt;</span> <span class="tag">&lt;/<span class="name">center</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    	<span class="tag">&lt;<span class="name">td</span> &gt;</span><span class="tag">&lt;<span class="name">center</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"timg.jpg"</span>  <span class="attr">height</span>=<span class="string">"240"</span> <span class="attr">width</span>=<span class="string">"240"</span>&gt;</span> <span class="tag">&lt;/<span class="name">center</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> &gt;</span><span class="tag">&lt;<span class="name">center</span>&gt;</span> 图1  <span class="tag">&lt;/<span class="name">center</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    	<span class="tag">&lt;<span class="name">td</span> &gt;</span><span class="tag">&lt;<span class="name">center</span>&gt;</span> 图2 <span class="tag">&lt;/<span class="name">center</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> &gt;</span><span class="tag">&lt;<span class="name">center</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"timg.jpg"</span>  <span class="attr">height</span>=<span class="string">"240"</span> <span class="attr">width</span>=<span class="string">"240"</span>&gt;</span> <span class="tag">&lt;/<span class="name">center</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    	<span class="tag">&lt;<span class="name">td</span> &gt;</span><span class="tag">&lt;<span class="name">center</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"timg.jpg"</span>  <span class="attr">height</span>=<span class="string">"240"</span> <span class="attr">width</span>=<span class="string">"240"</span>&gt;</span> <span class="tag">&lt;/<span class="name">center</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> &gt;</span><span class="tag">&lt;<span class="name">center</span>&gt;</span> 图3  <span class="tag">&lt;/<span class="name">center</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    	<span class="tag">&lt;<span class="name">td</span> &gt;</span><span class="tag">&lt;<span class="name">center</span>&gt;</span> 图4<span class="tag">&lt;/<span class="name">center</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>实际效果：</p>
<table>
    <tr>
        <td ><center><img src="timg.jpg"  height="240" width="240"> </center></td>
        <td ><center><img src="timg.jpg"  height="240" width="240"> </center></td>
    </tr>
    <tr>
        <td ><center> 图1  </center></td>
        <td ><center> 图2 </center></td>
    </tr>
      <tr>
        <td ><center><img src="timg.jpg"  height="240" width="240"> </center></td>
        <td ><center><img src="timg.jpg"  height="240" width="240"> </center></td>
    </tr>
    <tr>
        <td ><center> 图3  </center></td>
        <td ><center> 图4</center></td>
    </tr>
</table>

<h3 id="合并单元格"><a href="#合并单元格" class="headerlink" title="合并单元格"></a>合并单元格</h3><blockquote>
<p>markdown 自带语法只支持基本表格，复杂表格需要HTML语言描述。</p>
</blockquote>
<p>示例代码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">	    <span class="tag">&lt;<span class="name">th</span> <span class="attr">colspan</span>=<span class="string">"2"</span> <span class="attr">rowspan</span>=<span class="string">"2"</span> &gt;</span><span class="tag">&lt;<span class="name">center</span>&gt;</span>评估指标<span class="tag">&lt;/<span class="name">center</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">th</span> <span class="attr">colspan</span>=<span class="string">"2"</span> &gt;</span><span class="tag">&lt;<span class="name">center</span>&gt;</span>预测结果<span class="tag">&lt;/<span class="name">center</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>  &gt;</span><span class="tag">&lt;<span class="name">center</span>&gt;</span>正样本<span class="tag">&lt;/<span class="name">center</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>  &gt;</span><span class="tag">&lt;<span class="name">center</span>&gt;</span>负样本<span class="tag">&lt;/<span class="name">center</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">tr</span> &gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">tr</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">"2"</span>&gt;</span><span class="tag">&lt;<span class="name">center</span>&gt;</span>实际<span class="tag">&lt;<span class="name">br</span>&gt;</span>情况<span class="tag">&lt;/<span class="name">center</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">center</span>&gt;</span>正样本<span class="tag">&lt;/<span class="name">center</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">center</span>&gt;</span>TP<span class="tag">&lt;/<span class="name">center</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">center</span>&gt;</span>FN<span class="tag">&lt;/<span class="name">center</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">center</span>&gt;</span>负样本<span class="tag">&lt;/<span class="name">center</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">center</span>&gt;</span>FP<span class="tag">&lt;/<span class="name">center</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">center</span>&gt;</span>TN<span class="tag">&lt;/<span class="name">center</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>实际效果：</p>
<table>
    <tr>
        <th colspan="2" rowspan="2" ><center>评估指标</center></th>
         <th colspan="2" ><center>预测结果</center></th>
    </tr>  
    <tr>
        <th  ><center>正样本</center></th>
        <th  ><center>负样本</center></th>
    </tr >
    <tr >
        <td rowspan="2"><center>实际<br>情况</center></td>
        <td><center>正样本</center></td>
        <td><center>TP</center></td>
        <td><center>FN</center></td>
    </tr>
    <tr >
        <td><center>负样本</center></td>
        <td><center>FP</center></td>
        <td><center>TN</center></td>
    </tr>
</table>

<h3 id="文字改变颜色、大小、字体"><a href="#文字改变颜色、大小、字体" class="headerlink" title="文字改变颜色、大小、字体"></a>文字改变颜色、大小、字体</h3><p>示例代码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">"宋体"</span> &gt;</span>我是宋体字<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span>  <span class="attr">size</span>=<span class="string">10</span>&gt;</span>我是10号字<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">red</span>&gt;</span>我是红色字<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">red</span> <span class="attr">size</span>=<span class="string">10</span> <span class="attr">face</span>=<span class="string">'宋体'</span>&gt;</span>我是红色10号宋体字<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>实际效果：</p>
<p><font face="宋体" >我是宋体字</font></p>
<p><font  size=10>我是10号字</font></p>
<p><font color=red>我是红色字</font></p>
<p><font color=red size=10 face='宋体'>我是红色10号宋体字</font></p>
]]></content>
      <categories>
        <category>文字编码</category>
      </categories>
      <tags>
        <tag>文字编码</tag>
        <tag>Markdown</tag>
      </tags>
  </entry>
</search>
